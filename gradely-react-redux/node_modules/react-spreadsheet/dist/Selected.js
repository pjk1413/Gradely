import _objectSpread from "@babel/runtime/helpers/esm/objectSpread";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React from "react";
import classnames from "classnames";
import { connect } from "unistore/react";
import * as PointSet from "./point-set";
import FloatingRect, { mapStateToProps } from "./FloatingRect";

var Selected = function Selected(_ref) {
  var dragging = _ref.dragging,
      rest = _objectWithoutProperties(_ref, ["dragging"]);

  return React.createElement(FloatingRect, Object.assign({}, rest, {
    className: classnames("selected", {
      dragging: dragging
    })
  }));
};

export default connect(function (state) {
  var cells = state.selected;
  var nextState = mapStateToProps(cells)(state);
  return _objectSpread({}, nextState, {
    hidden: nextState.hidden || PointSet.size(cells) === 1,
    dragging: state.dragging
  });
})(Selected);