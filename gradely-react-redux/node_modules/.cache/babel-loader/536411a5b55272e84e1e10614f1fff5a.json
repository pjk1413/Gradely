{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport React, { Component } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport 'handsontable/dist/handsontable.full.css';\nimport { connect } from 'react-redux';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.data = [[,,,,,]];\n  } // negativeValueRenderer(instance, td, row, col, prop, value, cellProperties) {\n  //     Handsontable.renderers.TextRenderer.apply(this, arguments);\n  //     // if row contains negative number\n  //     if (parseInt(value, 10) < 0) {\n  //         // add class \"negative\"\n  //         td.className = 'make-me-red';\n  //     }\n  //     if (!value || value === '') {\n  //         td.style.background = '#EEE';\n  //     }\n  //     else {\n  //         if (value === 'Nissan') {\n  //             td.style.fontStyle = 'italic';\n  //         }\n  //         td.style.background = '';\n  //     }\n  // }\n  // firstRowRenderer(instance, td, row, col, prop, value, cellProperties) {\n  //     Handsontable.renderers.TextRenderer.apply(this, arguments);\n  //     td.style.fontWeight = 'bold';\n  //     td.style.color = 'green';\n  //     td.style.background = '#CEC';\n  // }\n\n\n  render() {\n    let colHeaders = this.props.editCourse && this.props.editCourse.assignments.map(assignment => {\n      return {\n        id: assignment.id,\n        value: assignment.name\n      };\n    });\n    colHeaders && colHeaders.unshift(\"\");\n    let rowHeaders = this.props.editCourse && this.props.editCourse.studentList.map(student => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }\n      }, student.user.firstName + \" \" + student.user.lastName);\n    });\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      data: this.data,\n      colHeaders: colHeaders,\n      rowHeaders: rowHeaders,\n      colWidths: 100,\n      // width: \"600\", \n      // height: \"300\",\n      headerTooltips: {\n        rows: true,\n        columns: true,\n        onlyTrimmed: false\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hot-app\",\n      className: \"table table-hover table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HotTable, {\n      id: \"example1\",\n      className: \"my-3\",\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  temp: state.temp.grid\n});\n\nexport default connect(mapStateToProps, {})(Table);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/Table.js"],"names":["React","Component","HotTable","connect","Table","constructor","data","render","colHeaders","props","editCourse","assignments","map","assignment","id","value","name","unshift","rowHeaders","studentList","student","user","firstName","lastName","settings","licenseKey","colWidths","headerTooltips","rows","columns","onlyTrimmed","mapStateToProps","state","temp","grid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,yCAAP;AACA,OAAO,yCAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC1BI,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,IAAL,GAAY,CACR,OADQ,CAAZ;AAGH,GANyB,CAQ1B;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,EAAAA,MAAM,GAAG;AAEL,QAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsBC,WAAtB,CAAkCC,GAAlC,CAAsCC,UAAU,IAAI;AAC1F,aAAO;AAAEC,QAAAA,EAAE,EAAED,UAAU,CAACC,EAAjB;AAAqBC,QAAAA,KAAK,EAAEF,UAAU,CAACG;AAAvC,OAAP;AACH,KAFyC,CAA1C;AAGAR,IAAAA,UAAU,IAAIA,UAAU,CAACS,OAAX,CAAmB,EAAnB,CAAd;AAEA,QAAIC,UAAU,GAAG,KAAKT,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsBS,WAAtB,CAAkCP,GAAlC,CAAsCQ,OAAO,IAAI;AACvF,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,OAAO,CAACC,IAAR,CAAaC,SAAb,GAAyB,GAAzB,GAA+BF,OAAO,CAACC,IAAR,CAAaE,QAAjD,CAAP;AACH,KAFyC,CAA1C;AAKA,UAAMC,QAAQ,GAAG;AACbC,MAAAA,UAAU,EAAE,+BADC;AAEbnB,MAAAA,IAAI,EAAE,KAAKA,IAFE;AAGbE,MAAAA,UAAU,EAAEA,UAHC;AAIbU,MAAAA,UAAU,EAAEA,UAJC;AAKbQ,MAAAA,SAAS,EAAE,GALE;AAMb;AACA;AACAC,MAAAA,cAAc,EAAE;AACZC,QAAAA,IAAI,EAAE,IADM;AAEZC,QAAAA,OAAO,EAAE,IAFG;AAGZC,QAAAA,WAAW,EAAE;AAHD;AARH,KAAjB;AAeA,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,4BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAwB,MAAA,SAAS,EAAC,MAAlC;AAAyC,MAAA,QAAQ,EAAEN,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AApEyB;;AAuE9B,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAC9BtB,EAAAA,UAAU,EAAEsB,KAAK,CAACC,IAAN,CAAWvB,UADO;AAE9BuB,EAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWC;AAFa,CAAL,CAA7B;;AAKA,eAAe/B,OAAO,CAAC4B,eAAD,EAAkB,EAAlB,CAAP,CAA6B3B,KAA7B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { HotTable } from '@handsontable/react'\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport 'handsontable/dist/handsontable.full.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Table extends Component {\r\n    constructor() {\r\n        super()\r\n        this.data = [\r\n            [, , , , ,]\r\n        ]\r\n    }\r\n\r\n    // negativeValueRenderer(instance, td, row, col, prop, value, cellProperties) {\r\n    //     Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n\r\n    //     // if row contains negative number\r\n    //     if (parseInt(value, 10) < 0) {\r\n    //         // add class \"negative\"\r\n    //         td.className = 'make-me-red';\r\n    //     }\r\n\r\n    //     if (!value || value === '') {\r\n    //         td.style.background = '#EEE';\r\n    //     }\r\n    //     else {\r\n    //         if (value === 'Nissan') {\r\n    //             td.style.fontStyle = 'italic';\r\n    //         }\r\n    //         td.style.background = '';\r\n    //     }\r\n    // }\r\n\r\n    // firstRowRenderer(instance, td, row, col, prop, value, cellProperties) {\r\n    //     Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n    //     td.style.fontWeight = 'bold';\r\n    //     td.style.color = 'green';\r\n    //     td.style.background = '#CEC';\r\n    // }\r\n\r\n    \r\n    render() {\r\n        \r\n        let colHeaders = this.props.editCourse && this.props.editCourse.assignments.map(assignment => {\r\n            return { id: assignment.id, value: assignment.name }\r\n        })\r\n        colHeaders && colHeaders.unshift(\"\")\r\n\r\n        let rowHeaders = this.props.editCourse && this.props.editCourse.studentList.map(student => {\r\n            return <td>{student.user.firstName + \" \" + student.user.lastName}</td>\r\n        })\r\n\r\n\r\n        const settings = {\r\n            licenseKey: 'non-commercial-and-evaluation',\r\n            data: this.data,\r\n            colHeaders: colHeaders,\r\n            rowHeaders: rowHeaders,\r\n            colWidths: 100,\r\n            // width: \"600\", \r\n            // height: \"300\",\r\n            headerTooltips: {\r\n                rows: true,\r\n                columns: true,\r\n                onlyTrimmed: false\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id=\"hot-app\" className=\"table table-hover table-sm\">\r\n                <HotTable id=\"example1\" className=\"my-3\" settings={settings} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    editCourse: state.temp.editCourse,\r\n    temp: state.temp.grid,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Table)"]},"metadata":{},"sourceType":"module"}