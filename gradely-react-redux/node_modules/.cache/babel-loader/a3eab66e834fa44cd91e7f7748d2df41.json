{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react\\\\src\\\\components\\\\utility-boxes\\\\toDo\\\\ToDoList.js\";\nimport React, { Component } from 'react';\nimport ToDoItem from './ToDoItem';\nimport AddItem from './AddItem';\n\nclass ToDoList extends Component {\n  constructor() {\n    super(); //Anytime you create a class method that you want to use set state on, you need to bind it to your own class\n    //this.handleClick = this.handleClick.bind(this) //Makes sure that handleClick method is bound to the context as it exists in this class\n\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleAdd = this.handleRemove.bind(this);\n    this.addItem = this.addItem.bind(this); //state should relate to a single item, the parent should deal with multiple instances of this element\n\n    this.state = {\n      items: [{\n        text: \"Take out the garbage\"\n      }, {\n        text: \"Clean up the dishes\"\n      }, {\n        text: \"Read a book for fun\"\n      }]\n    };\n  }\n\n  addItem(text) {\n    const newItem = {\n      text: text\n    };\n    let tempItems = this.state.items;\n    tempItems.push(newItem);\n    this.setState({\n      items: tempItems\n    });\n  }\n\n  handleRemove(text) {\n    let tempItem = null;\n    const tempItems = this.state.items.map(item => {\n      if (text === item.text) {\n        tempItem = item;\n      }\n\n      return item;\n    });\n    tempItems.splice(tempItems.indexOf(tempItem), 1);\n    this.setState({\n      items: tempItems\n    });\n  } //All display logic should go inside render method, and before the return (style, display, conditional rendering)\n  //To transfer state to child component, must use props\n\n\n  render() {\n    const toDoItems = this.state.items.map(item => {\n      return /*#__PURE__*/React.createElement(ToDoItem, {\n        key: item.text,\n        text: item.text,\n        remove: this.handleRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-brand mb-0 h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Todo List\"), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addItemModal\",\n      className: \"float-right btn btn-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Add Item\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, toDoItems), /*#__PURE__*/React.createElement(AddItem, {\n      add: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/src/components/utility-boxes/toDo/ToDoList.js"],"names":["React","Component","ToDoItem","AddItem","ToDoList","constructor","handleRemove","bind","handleAdd","addItem","state","items","text","newItem","tempItems","push","setState","tempItem","map","item","splice","indexOf","render","toDoItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,GAAG;AACV,YADU,CAGV;AACA;;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,GAAiB,KAAKF,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAjB;AACA,SAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAf,CAPU,CASV;;AACA,SAAKG,KAAL,GAAa;AACVC,MAAAA,KAAK,EAAG,CACP;AAACC,QAAAA,IAAI,EAAE;AAAP,OADO,EAEP;AAACA,QAAAA,IAAI,EAAE;AAAP,OAFO,EAGP;AAACA,QAAAA,IAAI,EAAE;AAAP,OAHO;AADE,KAAb;AAOH;;AAGDH,EAAAA,OAAO,CAACG,IAAD,EAAO;AACV,UAAMC,OAAO,GAAG;AACZD,MAAAA,IAAI,EAAEA;AADM,KAAhB;AAGA,QAAIE,SAAS,GAAG,KAAKJ,KAAL,CAAWC,KAA3B;AACAG,IAAAA,SAAS,CAACC,IAAV,CAAeF,OAAf;AACA,SAAKG,QAAL,CAAc;AACVL,MAAAA,KAAK,EAAEG;AADG,KAAd;AAGH;;AAEFR,EAAAA,YAAY,CAACM,IAAD,EAAO;AACd,QAAIK,QAAQ,GAAG,IAAf;AAEA,UAAMH,SAAS,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBO,GAAjB,CAAqBC,IAAI,IAAI;AAC3C,UAAIP,IAAI,KAAKO,IAAI,CAACP,IAAlB,EAAwB;AACpBK,QAAAA,QAAQ,GAAGE,IAAX;AACH;;AACD,aAAOA,IAAP;AACH,KALiB,CAAlB;AAOAL,IAAAA,SAAS,CAACM,MAAV,CAAiBN,SAAS,CAACO,OAAV,CAAkBJ,QAAlB,CAAjB,EAA8C,CAA9C;AAED,SAAKD,QAAL,CAAc;AACVL,MAAAA,KAAK,EAAEG;AADG,KAAd;AAIH,GAhD6B,CAmD7B;AAEA;;;AACAQ,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAG,KAAKb,KAAL,CAAWC,KAAX,CAAiBO,GAAjB,CAAsBC,IAAD,IAAU;AAC7C,0BAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACP,IAApB;AAA0B,QAAA,IAAI,EAAEO,IAAI,CAACP,IAArC;AAA2C,QAAA,MAAM,EAAE,KAAKN,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFiB,CAAlB;AAIA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAQ,qBAAY,OAApB;AAA4B,qBAAY,eAAxC;AAAwD,MAAA,SAAS,EAAC,6BAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ,eAKI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKiB,SADL,CALJ,eAUI,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAE,KAAKd,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ;AAcH;;AAzE4B;;AA4EjC,eAAeL,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ToDoItem from './ToDoItem';\r\nimport AddItem from './AddItem';\r\n\r\nclass ToDoList extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        //Anytime you create a class method that you want to use set state on, you need to bind it to your own class\r\n        //this.handleClick = this.handleClick.bind(this) //Makes sure that handleClick method is bound to the context as it exists in this class\r\n        this.handleRemove = this.handleRemove.bind(this)\r\n        this.handleAdd = this.handleRemove.bind(this)\r\n        this.addItem = this.addItem.bind(this)\r\n        \r\n        //state should relate to a single item, the parent should deal with multiple instances of this element\r\n        this.state = {\r\n           items : [\r\n            {text: \"Take out the garbage\"},\r\n            {text: \"Clean up the dishes\"},\r\n            {text: \"Read a book for fun\"}\r\n           ]\r\n        }\r\n    }\r\n\r\n\r\n    addItem(text) {\r\n        const newItem = {\r\n            text: text\r\n        }\r\n        let tempItems = this.state.items \r\n        tempItems.push(newItem)\r\n        this.setState({\r\n            items: tempItems\r\n        })\r\n    }\r\n\r\n   handleRemove(text) {\r\n        let tempItem = null\r\n\r\n        const tempItems = this.state.items.map(item => {\r\n            if (text === item.text) {\r\n                tempItem = item\r\n            }\r\n            return item\r\n        })\r\n        \r\n        tempItems.splice(tempItems.indexOf(tempItem), 1)\r\n       \r\n       this.setState({\r\n           items: tempItems\r\n       })\r\n\r\n   }\r\n\r\n\r\n    //All display logic should go inside render method, and before the return (style, display, conditional rendering)\r\n\r\n    //To transfer state to child component, must use props\r\n    render() {\r\n        const toDoItems = this.state.items.map((item) => {\r\n            return <ToDoItem key={item.text} text={item.text} remove={this.handleRemove} />\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-light bg-light\">\r\n                    <span className=\"navbar-brand mb-0 h1\">Todo List</span>\r\n                    <button data-toggle=\"modal\" data-target=\"#addItemModal\" className=\"float-right btn btn-warning\">Add Item</button>\r\n                </nav>\r\n                <div className=\"row\">\r\n                    {toDoItems}\r\n                </div>\r\n                \r\n\r\n                <AddItem add={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}