{"ast":null,"code":"/**\n * Try to choose plural form from available phrase propositions.\n *\n * @param {Array} phrasePropositions List of phrases propositions.\n * @param {number} pluralForm Number determining which phrase form should be used.\n *\n * @returns {String|Array} One particular phrase if it's possible, list of unchanged phrase propositions otherwise.\n */\nexport default function pluralize(phrasePropositions, pluralForm) {\n  var isPluralizable = Array.isArray(phrasePropositions) && Number.isInteger(pluralForm);\n\n  if (isPluralizable) {\n    return phrasePropositions[pluralForm];\n  }\n\n  return phrasePropositions;\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/i18n/phraseFormatters/pluralize.js"],"names":["pluralize","phrasePropositions","pluralForm","isPluralizable","Array","isArray","Number","isInteger"],"mappings":"AAGA;;;;;;;;AAQA,eAAe,SAASA,SAAT,CAAmBC,kBAAnB,EAAuCC,UAAvC,EAAmD;AAChE,MAAIC,cAAc,GAAGC,KAAK,CAACC,OAAN,CAAcJ,kBAAd,KAAqCK,MAAM,CAACC,SAAP,CAAiBL,UAAjB,CAA1D;;AAEA,MAAIC,cAAJ,EAAoB;AAClB,WAAOF,kBAAkB,CAACC,UAAD,CAAzB;AACD;;AAED,SAAOD,kBAAP;AACD","sourcesContent":["import \"core-js/modules/es.number.constructor\";\nimport \"core-js/modules/es.number.is-integer\";\n\n/**\n * Try to choose plural form from available phrase propositions.\n *\n * @param {Array} phrasePropositions List of phrases propositions.\n * @param {number} pluralForm Number determining which phrase form should be used.\n *\n * @returns {String|Array} One particular phrase if it's possible, list of unchanged phrase propositions otherwise.\n */\nexport default function pluralize(phrasePropositions, pluralForm) {\n  var isPluralizable = Array.isArray(phrasePropositions) && Number.isInteger(pluralForm);\n\n  if (isPluralizable) {\n    return phrasePropositions[pluralForm];\n  }\n\n  return phrasePropositions;\n}"]},"metadata":{},"sourceType":"module"}