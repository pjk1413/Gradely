{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport React, { Component } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport 'handsontable/dist/handsontable.full.css';\nimport { connect } from 'react-redux';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.data = [];\n    this.state = {};\n  }\n\n  componentDidUpdate() {\n    let data = [];\n    let columnAssignmentLabel = [];\n    let colHeaders = this.props.editCourse && this.props.editCourse.assignments.map(assignment => {\n      columnAssignmentLabel.push({\n        assignment: assignment\n      });\n      return assignment.name + \" (\" + assignment.totalPoints + \")\";\n    });\n    let rowStudentLabel = [];\n    let rowHeaders = this.props.editCourse && this.props.editCourse.studentList.map(student => {\n      rowStudentLabel.push({\n        student: student\n      });\n      return student.user.firstName + \" \" + student.user.lastName;\n    }); // console.log(rowLabels[0].id)\n    //LOOPS THROUGH EACH STUDENT\n\n    rowStudentLabel.forEach(student => {\n      const studentScores = columnAssignmentLabel && columnAssignmentLabel.map(assignment => {\n        if (student.student.assignmentScores) {}\n      });\n      const tempstudentScores = student.student && student.student.assignmentScores && student.student.assignmentScores.map(score => {\n        console.log(score);\n        return score;\n      });\n      data.push(studentScores);\n    }); //give us all assignments\n    //Each array is a series of scores from assignments based on studentid and assignmentid \n  }\n\n  render() {\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      data: this.data,\n      // colHeaders: colHeaders,\n      // rowHeaders: rowHeaders,\n      rowHeaderWidth: 150,\n      //columns: columnLabels,\n      //row: rowLabels,\n      // width: \"600\", \n      // height: \"300\",\n      headerTooltips: {\n        rows: true,\n        columns: true,\n        onlyTrimmed: false\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hot-app\",\n      className: \"table table-hover table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HotTable, {\n      id: \"example1\",\n      className: \"my-3\",\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  grid: state.temp.grid\n});\n\nexport default connect(mapStateToProps, {})(Table);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/Table.js"],"names":["React","Component","HotTable","connect","Table","constructor","data","state","componentDidUpdate","columnAssignmentLabel","colHeaders","props","editCourse","assignments","map","assignment","push","name","totalPoints","rowStudentLabel","rowHeaders","studentList","student","user","firstName","lastName","forEach","studentScores","assignmentScores","tempstudentScores","score","console","log","render","settings","licenseKey","rowHeaderWidth","headerTooltips","rows","columns","onlyTrimmed","mapStateToProps","temp","grid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,yCAAP;AACA,OAAO,yCAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC1BI,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,QAAIF,IAAI,GAAG,EAAX;AACA,QAAIG,qBAAqB,GAAG,EAA5B;AACA,QAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsBC,WAAtB,CAAkCC,GAAlC,CAAsCC,UAAU,IAAI;AAC1FN,MAAAA,qBAAqB,CAACO,IAAtB,CAA2B;AAACD,QAAAA,UAAU,EAAEA;AAAb,OAA3B;AACA,aAAOA,UAAU,CAACE,IAAX,GAAkB,IAAlB,GAAyBF,UAAU,CAACG,WAApC,GAAkD,GAAzD;AACH,KAHyC,CAA1C;AAKA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,UAAU,GAAG,KAAKT,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsBS,WAAtB,CAAkCP,GAAlC,CAAsCQ,OAAO,IAAI;AACvFH,MAAAA,eAAe,CAACH,IAAhB,CAAqB;AAACM,QAAAA,OAAO,EAAEA;AAAV,OAArB;AACA,aAAOA,OAAO,CAACC,IAAR,CAAaC,SAAb,GAAyB,GAAzB,GAA+BF,OAAO,CAACC,IAAR,CAAaE,QAAnD;AACH,KAHyC,CAA1C,CATiB,CAajB;AAEA;;AACAN,IAAAA,eAAe,CAACO,OAAhB,CAAwBJ,OAAO,IAAI;AAE/B,YAAMK,aAAa,GAAGlB,qBAAqB,IAAIA,qBAAqB,CAACK,GAAtB,CAA0BC,UAAU,IAAI;AACnF,YAAIO,OAAO,CAACA,OAAR,CAAgBM,gBAApB,EAAsC,CAErC;AAEJ,OAL8C,CAA/C;AAOA,YAAMC,iBAAiB,GAAGP,OAAO,CAACA,OAAR,IAAmBA,OAAO,CAACA,OAAR,CAAgBM,gBAAnC,IAAuDN,OAAO,CAACA,OAAR,CAAgBM,gBAAhB,CAAiCd,GAAjC,CAAqCgB,KAAK,IAAI;AAC3HC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,eAAOA,KAAP;AACH,OAHgF,CAAjF;AAOAxB,MAAAA,IAAI,CAACU,IAAL,CAAUW,aAAV;AACH,KAjBD,EAhBiB,CAkCjB;AAEA;AAEH;;AAGDM,EAAAA,MAAM,GAAG;AAEL,UAAMC,QAAQ,GAAG;AACbC,MAAAA,UAAU,EAAE,+BADC;AAEb7B,MAAAA,IAAI,EAAE,KAAKA,IAFE;AAGb;AACA;AACA8B,MAAAA,cAAc,EAAE,GALH;AAMb;AACA;AACA;AACA;AACAC,MAAAA,cAAc,EAAE;AACZC,QAAAA,IAAI,EAAE,IADM;AAEZC,QAAAA,OAAO,EAAE,IAFG;AAGZC,QAAAA,WAAW,EAAE;AAHD;AAVH,KAAjB;AAiBA,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,4BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAwB,MAAA,SAAS,EAAC,MAAlC;AAAyC,MAAA,QAAQ,EAAEN,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AA1EyB;;AA6E9B,MAAMO,eAAe,GAAGlC,KAAK,KAAK;AAC9BK,EAAAA,UAAU,EAAEL,KAAK,CAACmC,IAAN,CAAW9B,UADO;AAE9B+B,EAAAA,IAAI,EAAEpC,KAAK,CAACmC,IAAN,CAAWC;AAFa,CAAL,CAA7B;;AAKA,eAAexC,OAAO,CAACsC,eAAD,EAAkB,EAAlB,CAAP,CAA6BrC,KAA7B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { HotTable } from '@handsontable/react'\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport 'handsontable/dist/handsontable.full.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Table extends Component {\r\n    constructor() {\r\n        super()\r\n        this.data = []\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let data = []\r\n        let columnAssignmentLabel = []\r\n        let colHeaders = this.props.editCourse && this.props.editCourse.assignments.map(assignment => {\r\n            columnAssignmentLabel.push({assignment: assignment})\r\n            return assignment.name + \" (\" + assignment.totalPoints + \")\"\r\n        })\r\n        \r\n        let rowStudentLabel = []\r\n        let rowHeaders = this.props.editCourse && this.props.editCourse.studentList.map(student => {\r\n            rowStudentLabel.push({student: student})\r\n            return student.user.firstName + \" \" + student.user.lastName\r\n        })\r\n        // console.log(rowLabels[0].id)\r\n        \r\n        //LOOPS THROUGH EACH STUDENT\r\n        rowStudentLabel.forEach(student => {\r\n\r\n            const studentScores = columnAssignmentLabel && columnAssignmentLabel.map(assignment => {\r\n                if (student.student.assignmentScores) {\r\n                    \r\n                }\r\n                \r\n            })\r\n\r\n            const tempstudentScores = student.student && student.student.assignmentScores && student.student.assignmentScores.map(score => {\r\n                console.log(score)\r\n                return score\r\n            })\r\n\r\n            \r\n\r\n            data.push(studentScores)\r\n        });\r\n        //give us all assignments\r\n        \r\n        //Each array is a series of scores from assignments based on studentid and assignmentid \r\n        \r\n    }\r\n    \r\n\r\n    render() {\r\n        \r\n        const settings = {\r\n            licenseKey: 'non-commercial-and-evaluation',\r\n            data: this.data,\r\n            // colHeaders: colHeaders,\r\n            // rowHeaders: rowHeaders,\r\n            rowHeaderWidth: 150,\r\n            //columns: columnLabels,\r\n            //row: rowLabels,\r\n            // width: \"600\", \r\n            // height: \"300\",\r\n            headerTooltips: {\r\n                rows: true,\r\n                columns: true,\r\n                onlyTrimmed: false\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id=\"hot-app\" className=\"table table-hover table-sm\">\r\n                <HotTable id=\"example1\" className=\"my-3\" settings={settings} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    editCourse: state.temp.editCourse,\r\n    grid: state.temp.grid,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Table)"]},"metadata":{},"sourceType":"module"}