{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react\\\\src\\\\pages\\\\admin\\\\AdminPage.js\";\nimport React, { Component } from 'react';\nimport Header from '../../components/main_page/header/Header';\nimport './admin_page.css';\nimport UserHomeLayout from '../../layout/UserHomeLayout';\nimport axios from 'axios';\n\nclass AdminPage extends Component {\n  constructor() {\n    super();\n    this.loadAllUsers = this.loadAllUsers.bind(this);\n    this.state = {\n      courseList: [],\n      studentList: [],\n      parentList: [],\n      teacherList: [],\n      user: \"\",\n      message: \"\"\n    };\n  }\n\n  loadAllUsers() {\n    axios.post(\"http://localhost:8080/all\", user).then(response => {\n      console.log(response.data);\n\n      if (response.data != \"\") {\n        this.setState({\n          user: response.data\n        });\n      } else {\n        sessionStorage.clear();\n        this.setState({\n          message: \"Error retrieving data, please logout and try again\"\n        });\n      }\n    });\n  }\n\n  updateTeacherList(tempTeacherList) {\n    this.setState({\n      teacherList: tempTeacherList\n    });\n  }\n\n  updateStudentList(tempStudentList) {\n    this.setState({\n      studentLst: tempStudentList\n    });\n  }\n\n  updateCourseList(tempCourseList) {\n    this.setState({\n      courseList: tempCourseList\n    });\n  }\n\n  updateParentList(tempParentList) {\n    this.setState({\n      parentList: tempParentList\n    });\n  }\n\n  componentWillMount() {\n    const email = sessionStorage.getItem(\"user\");\n    const user = {\n      email: email\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/course/all\").then(response => {\n      if (Array.isArray(response.data)) {\n        this.setState({\n          courseList: response.data\n        });\n      }\n    });\n    axios.get(\"http://localhost:8080/all\").then(response => {\n      if (Array.isArray(response.data)) {\n        this.setState({\n          userList: response.data\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      courseList: this.state.courseList,\n      updateCourseList: courseList => this.updateCourseList(courseList),\n      updateUserList: userList => this.updateUserList(userList),\n      userList: this.state.userList,\n      user: this.state.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), this.state.user ? /*#__PURE__*/React.createElement(UserHomeLayout, {\n      userList: this.state.userList,\n      user: this.state.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 36\n      }\n    }) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 111\n      }\n    }, this.state.message));\n  }\n\n}\n\nexport default AdminPage;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/src/pages/admin/AdminPage.js"],"names":["React","Component","Header","UserHomeLayout","axios","AdminPage","constructor","loadAllUsers","bind","state","courseList","studentList","parentList","teacherList","user","message","post","then","response","console","log","data","setState","sessionStorage","clear","updateTeacherList","tempTeacherList","updateStudentList","tempStudentList","studentLst","updateCourseList","tempCourseList","updateParentList","tempParentList","componentWillMount","email","getItem","componentDidMount","get","Array","isArray","userList","render","updateUserList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../../components/main_page/header/Header';\r\nimport './admin_page.css';\r\nimport UserHomeLayout from '../../layout/UserHomeLayout';\r\nimport axios from 'axios';\r\n\r\nclass AdminPage extends Component {\r\n    constructor() {\r\n        super()\r\n        this.loadAllUsers = this.loadAllUsers.bind(this)\r\n        this.state = {\r\n            courseList: [],\r\n            studentList: [],\r\n            parentList: [],\r\n            teacherList: [],\r\n            user: \"\",\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    loadAllUsers() {\r\n        axios.post(\"http://localhost:8080/all\", user).then((response) => {\r\n            console.log(response.data)\r\n            if (response.data != \"\") {\r\n                this.setState({\r\n                    user: response.data\r\n                })\r\n            } else {\r\n                sessionStorage.clear()\r\n                this.setState({\r\n                    message: \"Error retrieving data, please logout and try again\"\r\n                })\r\n            }\r\n        }\r\n        )\r\n    }\r\n\r\n    updateTeacherList(tempTeacherList) {\r\n        this.setState({\r\n            teacherList: tempTeacherList\r\n        })\r\n    }\r\n\r\n    updateStudentList(tempStudentList) {\r\n        this.setState({\r\n            studentLst: tempStudentList\r\n        })\r\n    }\r\n\r\n    updateCourseList(tempCourseList) {\r\n        this.setState({\r\n            courseList: tempCourseList\r\n        })\r\n    }\r\n\r\n    updateParentList(tempParentList) {\r\n        this.setState({\r\n            parentList: tempParentList\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        const email = sessionStorage.getItem(\"user\")\r\n        const user = {\r\n            email: email\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(\"http://localhost:8080/course/all\").then(response => {\r\n            if (Array.isArray(response.data)) {\r\n                this.setState({\r\n                    courseList: response.data\r\n                })\r\n            }\r\n        })\r\n\r\n        axios.get(\"http://localhost:8080/all\").then(response => {\r\n            if (Array.isArray(response.data)) {\r\n                this.setState({\r\n                    userList: response.data\r\n                })\r\n            }\r\n            \r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <Header\r\n                courseList={this.state.courseList}\r\n                updateCourseList={(courseList)=> this.updateCourseList(courseList)} \r\n                updateUserList={(userList)=> this.updateUserList(userList)} \r\n                userList={this.state.userList} \r\n                user={this.state.user} />\r\n                {this.state.user ? <UserHomeLayout userList={this.state.userList} user={this.state.user} /> : <h3>{this.state.message}</h3>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AdminPage;"]},"metadata":{},"sourceType":"module"}