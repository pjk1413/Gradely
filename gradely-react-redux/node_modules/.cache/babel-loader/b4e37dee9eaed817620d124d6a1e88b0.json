{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport { ERROR_REF } from 'hot-formula-parser';\nimport { arrayFilter } from '../../../helpers/array';\nimport BaseCell from './_base';\nvar STATE_OUT_OFF_DATE = 1;\nvar STATE_COMPUTING = 2;\nvar STATE_UP_TO_DATE = 3;\nvar states = [STATE_OUT_OFF_DATE, STATE_COMPUTING, STATE_UP_TO_DATE];\n/**\n * Class responsible for wrapping formula expression. It contains calculated value of\n * the formula, an error if it has happened and cell references which indicates a relationship with regular\n * cells. This object uses physical cell coordinates.\n *\n * @class CellValue\n * @util\n */\n\nvar CellValue = /*#__PURE__*/function (_BaseCell) {\n  _inherits(CellValue, _BaseCell);\n\n  _createClass(CellValue, null, [{\n    key: \"STATE_OUT_OFF_DATE\",\n\n    /**\n     * Out of date state indicates cells ready for recomputing.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return 1; // PhantomJS crashes when we want to use constant above\n    }\n    /**\n     * Computing state indicates cells under processing.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"STATE_COMPUTING\",\n    get: function get() {\n      return 2; // PhantomJS crashes when we want to use constant above\n    }\n    /**\n     * Up to date state indicates cells with fresh computed value.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"STATE_UP_TO_DATE\",\n    get: function get() {\n      return 3; // PhantomJS crashes when we want to use constant above\n    }\n  }]);\n\n  function CellValue(row, column) {\n    var _this;\n\n    _classCallCheck(this, CellValue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CellValue).call(this, row, column));\n    /**\n     * List of precedents cells.\n     *\n     * @type {Array}\n     */\n\n    _this.precedents = [];\n    /**\n     * Computed value.\n     *\n     * @type {*}\n     */\n\n    _this.value = null;\n    /**\n     * Error name.\n     *\n     * @type {String|null}\n     */\n\n    _this.error = null;\n    /**\n     * Indicates cell state.\n     *\n     * @type {String}\n     */\n\n    _this.state = CellValue.STATE_UP_TO_DATE;\n    return _this;\n  }\n  /**\n   * Set computed value.\n   *\n   * @param {*} value\n   */\n\n\n  _createClass(CellValue, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.value = value;\n    }\n    /**\n     * Get computed value.\n     *\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.value;\n    }\n    /**\n     * Set error message for this cell.\n     *\n     * @param {String} error Error name.\n     */\n\n  }, {\n    key: \"setError\",\n    value: function setError(error) {\n      this.error = error;\n    }\n    /**\n     * Get error name for this cell.\n     *\n     * @returns {String|null}\n     */\n\n  }, {\n    key: \"getError\",\n    value: function getError() {\n      return this.error;\n    }\n    /**\n     * Check if cell value is marked as error.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasError\",\n    value: function hasError() {\n      return this.error !== null;\n    }\n    /**\n     * Set cell state.\n     *\n     * @param {Number} state Cell state.\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      if (states.indexOf(state) === -1) {\n        throw Error(\"Unrecognized state: \".concat(state));\n      }\n\n      this.state = state;\n    }\n    /**\n     * Check cell state.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isState\",\n    value: function isState(state) {\n      return this.state === state;\n    }\n    /**\n     * Add precedent cell to the collection.\n     *\n     * @param {CellReference} cellReference Cell reference object.\n     */\n\n  }, {\n    key: \"addPrecedent\",\n    value: function addPrecedent(cellReference) {\n      if (this.isEqual(cellReference)) {\n        throw Error(ERROR_REF);\n      }\n\n      if (!this.hasPrecedent(cellReference)) {\n        this.precedents.push(cellReference);\n      }\n    }\n    /**\n     * Remove precedent cell from the collection.\n     *\n     * @param {CellReference} cellReference Cell reference object.\n     */\n\n  }, {\n    key: \"removePrecedent\",\n    value: function removePrecedent(cellReference) {\n      if (this.isEqual(cellReference)) {\n        throw Error(ERROR_REF);\n      }\n\n      this.precedents = arrayFilter(this.precedents, function (cell) {\n        return !cell.isEqual(cellReference);\n      });\n    }\n    /**\n     * Clear all precedent cells.\n     */\n\n  }, {\n    key: \"clearPrecedents\",\n    value: function clearPrecedents() {\n      this.precedents.length = 0;\n    }\n    /**\n     * Get precedent cells.\n     *\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getPrecedents\",\n    value: function getPrecedents() {\n      return this.precedents;\n    }\n    /**\n     * Check if cell value has precedents cells.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasPrecedents\",\n    value: function hasPrecedents() {\n      return this.precedents.length > 0;\n    }\n    /**\n     * Check if cell reference is precedents this cell.\n     *\n     * @param {CellReference} cellReference Cell reference object.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasPrecedent\",\n    value: function hasPrecedent(cellReference) {\n      return arrayFilter(this.precedents, function (cell) {\n        return cell.isEqual(cellReference);\n      }).length > 0;\n    }\n  }]);\n\n  return CellValue;\n}(BaseCell);\n\nexport default CellValue;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/node_modules/handsontable/es/plugins/formulas/cell/value.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","ERROR_REF","arrayFilter","BaseCell","STATE_OUT_OFF_DATE","STATE_COMPUTING","STATE_UP_TO_DATE","states","CellValue","_BaseCell","get","row","column","_this","precedents","error","state","setValue","getValue","setError","getError","hasError","setState","indexOf","Error","concat","isState","addPrecedent","cellReference","isEqual","hasPrecedent","push","removePrecedent","cell","clearPrecedents","getPrecedents","hasPrecedents"],"mappings":"AAWA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1X,SAASK,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,0BAAT,CAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;AAAE,MAAIA,IAAI,KAAKZ,OAAO,CAACY,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAP,KAAgB,UAAnD,CAAR,EAAwE;AAAE,WAAOA,IAAP;AAAc;;AAAC,SAAOC,sBAAsB,CAACF,IAAD,CAA7B;AAAsC;;AAEjL,SAASE,sBAAT,CAAgCF,IAAhC,EAAsC;AAAE,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAE,UAAM,IAAIG,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOH,IAAP;AAAc;;AAEtK,SAASI,eAAT,CAAyBC,CAAzB,EAA4B;AAAED,EAAAA,eAAe,GAAGE,MAAM,CAACC,cAAP,GAAwBD,MAAM,CAACE,cAA/B,GAAgD,SAASJ,eAAT,CAAyBC,CAAzB,EAA4B;AAAE,WAAOA,CAAC,CAACI,SAAF,IAAeH,MAAM,CAACE,cAAP,CAAsBH,CAAtB,CAAtB;AAAiD,GAAjJ;AAAmJ,SAAOD,eAAe,CAACC,CAAD,CAAtB;AAA4B;;AAE7M,SAASK,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,QAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4BZ,IAAAA,MAAM,CAACa,cAAP,CAAsBR,MAAtB,EAA8BI,UAAU,CAACK,GAAzC,EAA8CL,UAA9C;AAA4D;AAAE;;AAE7T,SAASM,YAAT,CAAsBxB,WAAtB,EAAmCyB,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBZ,iBAAiB,CAACb,WAAW,CAACH,SAAb,EAAwB4B,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBb,iBAAiB,CAACb,WAAD,EAAc0B,WAAd,CAAjB;AAA6C,SAAO1B,WAAP;AAAqB;;AAEvN,SAAS2B,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAI5B,SAAJ,CAAc,oDAAd,CAAN;AAA4E;;AAAC2B,EAAAA,QAAQ,CAAC/B,SAAT,GAAqBY,MAAM,CAACqB,MAAP,CAAcD,UAAU,IAAIA,UAAU,CAAChC,SAAvC,EAAkD;AAAED,IAAAA,WAAW,EAAE;AAAEmC,MAAAA,KAAK,EAAEH,QAAT;AAAmBP,MAAAA,QAAQ,EAAE,IAA7B;AAAmCD,MAAAA,YAAY,EAAE;AAAjD;AAAf,GAAlD,CAArB;AAAkJ,MAAIS,UAAJ,EAAgBG,eAAe,CAACJ,QAAD,EAAWC,UAAX,CAAf;AAAwC;;AAEjY,SAASG,eAAT,CAAyBxB,CAAzB,EAA4ByB,CAA5B,EAA+B;AAAED,EAAAA,eAAe,GAAGvB,MAAM,CAACC,cAAP,IAAyB,SAASsB,eAAT,CAAyBxB,CAAzB,EAA4ByB,CAA5B,EAA+B;AAAEzB,IAAAA,CAAC,CAACI,SAAF,GAAcqB,CAAd;AAAiB,WAAOzB,CAAP;AAAW,GAAxG;;AAA0G,SAAOwB,eAAe,CAACxB,CAAD,EAAIyB,CAAJ,CAAtB;AAA+B;;AAE1K,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,IAAIC,kBAAkB,GAAG,CAAzB;AACA,IAAIC,eAAe,GAAG,CAAtB;AACA,IAAIC,gBAAgB,GAAG,CAAvB;AACA,IAAIC,MAAM,GAAG,CAACH,kBAAD,EAAqBC,eAArB,EAAsCC,gBAAtC,CAAb;AACA;;;;;;;;;AASA,IAAIE,SAAS,GACb,aACA,UAAUC,SAAV,EAAqB;AACnBf,EAAAA,SAAS,CAACc,SAAD,EAAYC,SAAZ,CAAT;;AAEAlB,EAAAA,YAAY,CAACiB,SAAD,EAAY,IAAZ,EAAkB,CAAC;AAC7BlB,IAAAA,GAAG,EAAE,oBADwB;;AAG7B;;;;;AAKAoB,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,CAAP,CADkB,CACR;AACX;AACD;;;;;;AAX6B,GAAD,EAiB3B;AACDpB,IAAAA,GAAG,EAAE,iBADJ;AAEDoB,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,CAAP,CADkB,CACR;AACX;AACD;;;;;;AALC,GAjB2B,EA4B3B;AACDpB,IAAAA,GAAG,EAAE,kBADJ;AAEDoB,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO,CAAP,CADkB,CACR;AACX;AAJA,GA5B2B,CAAlB,CAAZ;;AAmCA,WAASF,SAAT,CAAmBG,GAAnB,EAAwBC,MAAxB,EAAgC;AAC9B,QAAIC,KAAJ;;AAEAhD,IAAAA,eAAe,CAAC,IAAD,EAAO2C,SAAP,CAAf;;AAEAK,IAAAA,KAAK,GAAG5C,0BAA0B,CAAC,IAAD,EAAOK,eAAe,CAACkC,SAAD,CAAf,CAA2BrC,IAA3B,CAAgC,IAAhC,EAAsCwC,GAAtC,EAA2CC,MAA3C,CAAP,CAAlC;AACA;;;;;;AAMAC,IAAAA,KAAK,CAACC,UAAN,GAAmB,EAAnB;AACA;;;;;;AAMAD,IAAAA,KAAK,CAACf,KAAN,GAAc,IAAd;AACA;;;;;;AAMAe,IAAAA,KAAK,CAACE,KAAN,GAAc,IAAd;AACA;;;;;;AAMAF,IAAAA,KAAK,CAACG,KAAN,GAAcR,SAAS,CAACF,gBAAxB;AACA,WAAOO,KAAP;AACD;AACD;;;;;;;AAOAtB,EAAAA,YAAY,CAACiB,SAAD,EAAY,CAAC;AACvBlB,IAAAA,GAAG,EAAE,UADkB;AAEvBQ,IAAAA,KAAK,EAAE,SAASmB,QAAT,CAAkBnB,KAAlB,EAAyB;AAC9B,WAAKA,KAAL,GAAaA,KAAb;AACD;AACD;;;;;;AALuB,GAAD,EAWrB;AACDR,IAAAA,GAAG,EAAE,UADJ;AAEDQ,IAAAA,KAAK,EAAE,SAASoB,QAAT,GAAoB;AACzB,aAAO,KAAKpB,KAAZ;AACD;AACD;;;;;;AALC,GAXqB,EAsBrB;AACDR,IAAAA,GAAG,EAAE,UADJ;AAEDQ,IAAAA,KAAK,EAAE,SAASqB,QAAT,CAAkBJ,KAAlB,EAAyB;AAC9B,WAAKA,KAAL,GAAaA,KAAb;AACD;AACD;;;;;;AALC,GAtBqB,EAiCrB;AACDzB,IAAAA,GAAG,EAAE,UADJ;AAEDQ,IAAAA,KAAK,EAAE,SAASsB,QAAT,GAAoB;AACzB,aAAO,KAAKL,KAAZ;AACD;AACD;;;;;;AALC,GAjCqB,EA4CrB;AACDzB,IAAAA,GAAG,EAAE,UADJ;AAEDQ,IAAAA,KAAK,EAAE,SAASuB,QAAT,GAAoB;AACzB,aAAO,KAAKN,KAAL,KAAe,IAAtB;AACD;AACD;;;;;;AALC,GA5CqB,EAuDrB;AACDzB,IAAAA,GAAG,EAAE,UADJ;AAEDQ,IAAAA,KAAK,EAAE,SAASwB,QAAT,CAAkBN,KAAlB,EAAyB;AAC9B,UAAIT,MAAM,CAACgB,OAAP,CAAeP,KAAf,MAA0B,CAAC,CAA/B,EAAkC;AAChC,cAAMQ,KAAK,CAAC,uBAAuBC,MAAvB,CAA8BT,KAA9B,CAAD,CAAX;AACD;;AAED,WAAKA,KAAL,GAAaA,KAAb;AACD;AACD;;;;;;AATC,GAvDqB,EAsErB;AACD1B,IAAAA,GAAG,EAAE,SADJ;AAEDQ,IAAAA,KAAK,EAAE,SAAS4B,OAAT,CAAiBV,KAAjB,EAAwB;AAC7B,aAAO,KAAKA,KAAL,KAAeA,KAAtB;AACD;AACD;;;;;;AALC,GAtEqB,EAiFrB;AACD1B,IAAAA,GAAG,EAAE,cADJ;AAEDQ,IAAAA,KAAK,EAAE,SAAS6B,YAAT,CAAsBC,aAAtB,EAAqC;AAC1C,UAAI,KAAKC,OAAL,CAAaD,aAAb,CAAJ,EAAiC;AAC/B,cAAMJ,KAAK,CAACvB,SAAD,CAAX;AACD;;AAED,UAAI,CAAC,KAAK6B,YAAL,CAAkBF,aAAlB,CAAL,EAAuC;AACrC,aAAKd,UAAL,CAAgBiB,IAAhB,CAAqBH,aAArB;AACD;AACF;AACD;;;;;;AAXC,GAjFqB,EAkGrB;AACDtC,IAAAA,GAAG,EAAE,iBADJ;AAEDQ,IAAAA,KAAK,EAAE,SAASkC,eAAT,CAAyBJ,aAAzB,EAAwC;AAC7C,UAAI,KAAKC,OAAL,CAAaD,aAAb,CAAJ,EAAiC;AAC/B,cAAMJ,KAAK,CAACvB,SAAD,CAAX;AACD;;AAED,WAAKa,UAAL,GAAkBZ,WAAW,CAAC,KAAKY,UAAN,EAAkB,UAAUmB,IAAV,EAAgB;AAC7D,eAAO,CAACA,IAAI,CAACJ,OAAL,CAAaD,aAAb,CAAR;AACD,OAF4B,CAA7B;AAGD;AACD;;;;AAXC,GAlGqB,EAiHrB;AACDtC,IAAAA,GAAG,EAAE,iBADJ;AAEDQ,IAAAA,KAAK,EAAE,SAASoC,eAAT,GAA2B;AAChC,WAAKpB,UAAL,CAAgB9B,MAAhB,GAAyB,CAAzB;AACD;AACD;;;;;;AALC,GAjHqB,EA4HrB;AACDM,IAAAA,GAAG,EAAE,eADJ;AAEDQ,IAAAA,KAAK,EAAE,SAASqC,aAAT,GAAyB;AAC9B,aAAO,KAAKrB,UAAZ;AACD;AACD;;;;;;AALC,GA5HqB,EAuIrB;AACDxB,IAAAA,GAAG,EAAE,eADJ;AAEDQ,IAAAA,KAAK,EAAE,SAASsC,aAAT,GAAyB;AAC9B,aAAO,KAAKtB,UAAL,CAAgB9B,MAAhB,GAAyB,CAAhC;AACD;AACD;;;;;;;AALC,GAvIqB,EAmJrB;AACDM,IAAAA,GAAG,EAAE,cADJ;AAEDQ,IAAAA,KAAK,EAAE,SAASgC,YAAT,CAAsBF,aAAtB,EAAqC;AAC1C,aAAO1B,WAAW,CAAC,KAAKY,UAAN,EAAkB,UAAUmB,IAAV,EAAgB;AAClD,eAAOA,IAAI,CAACJ,OAAL,CAAaD,aAAb,CAAP;AACD,OAFiB,CAAX,CAEJ5C,MAFI,GAEK,CAFZ;AAGD;AANA,GAnJqB,CAAZ,CAAZ;;AA4JA,SAAOwB,SAAP;AACD,CA9OD,CA8OEL,QA9OF,CAFA;;AAkPA,eAAeK,SAAf","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { ERROR_REF } from 'hot-formula-parser';\nimport { arrayFilter } from '../../../helpers/array';\nimport BaseCell from './_base';\nvar STATE_OUT_OFF_DATE = 1;\nvar STATE_COMPUTING = 2;\nvar STATE_UP_TO_DATE = 3;\nvar states = [STATE_OUT_OFF_DATE, STATE_COMPUTING, STATE_UP_TO_DATE];\n/**\n * Class responsible for wrapping formula expression. It contains calculated value of\n * the formula, an error if it has happened and cell references which indicates a relationship with regular\n * cells. This object uses physical cell coordinates.\n *\n * @class CellValue\n * @util\n */\n\nvar CellValue =\n/*#__PURE__*/\nfunction (_BaseCell) {\n  _inherits(CellValue, _BaseCell);\n\n  _createClass(CellValue, null, [{\n    key: \"STATE_OUT_OFF_DATE\",\n\n    /**\n     * Out of date state indicates cells ready for recomputing.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return 1; // PhantomJS crashes when we want to use constant above\n    }\n    /**\n     * Computing state indicates cells under processing.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"STATE_COMPUTING\",\n    get: function get() {\n      return 2; // PhantomJS crashes when we want to use constant above\n    }\n    /**\n     * Up to date state indicates cells with fresh computed value.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"STATE_UP_TO_DATE\",\n    get: function get() {\n      return 3; // PhantomJS crashes when we want to use constant above\n    }\n  }]);\n\n  function CellValue(row, column) {\n    var _this;\n\n    _classCallCheck(this, CellValue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CellValue).call(this, row, column));\n    /**\n     * List of precedents cells.\n     *\n     * @type {Array}\n     */\n\n    _this.precedents = [];\n    /**\n     * Computed value.\n     *\n     * @type {*}\n     */\n\n    _this.value = null;\n    /**\n     * Error name.\n     *\n     * @type {String|null}\n     */\n\n    _this.error = null;\n    /**\n     * Indicates cell state.\n     *\n     * @type {String}\n     */\n\n    _this.state = CellValue.STATE_UP_TO_DATE;\n    return _this;\n  }\n  /**\n   * Set computed value.\n   *\n   * @param {*} value\n   */\n\n\n  _createClass(CellValue, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.value = value;\n    }\n    /**\n     * Get computed value.\n     *\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.value;\n    }\n    /**\n     * Set error message for this cell.\n     *\n     * @param {String} error Error name.\n     */\n\n  }, {\n    key: \"setError\",\n    value: function setError(error) {\n      this.error = error;\n    }\n    /**\n     * Get error name for this cell.\n     *\n     * @returns {String|null}\n     */\n\n  }, {\n    key: \"getError\",\n    value: function getError() {\n      return this.error;\n    }\n    /**\n     * Check if cell value is marked as error.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasError\",\n    value: function hasError() {\n      return this.error !== null;\n    }\n    /**\n     * Set cell state.\n     *\n     * @param {Number} state Cell state.\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      if (states.indexOf(state) === -1) {\n        throw Error(\"Unrecognized state: \".concat(state));\n      }\n\n      this.state = state;\n    }\n    /**\n     * Check cell state.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isState\",\n    value: function isState(state) {\n      return this.state === state;\n    }\n    /**\n     * Add precedent cell to the collection.\n     *\n     * @param {CellReference} cellReference Cell reference object.\n     */\n\n  }, {\n    key: \"addPrecedent\",\n    value: function addPrecedent(cellReference) {\n      if (this.isEqual(cellReference)) {\n        throw Error(ERROR_REF);\n      }\n\n      if (!this.hasPrecedent(cellReference)) {\n        this.precedents.push(cellReference);\n      }\n    }\n    /**\n     * Remove precedent cell from the collection.\n     *\n     * @param {CellReference} cellReference Cell reference object.\n     */\n\n  }, {\n    key: \"removePrecedent\",\n    value: function removePrecedent(cellReference) {\n      if (this.isEqual(cellReference)) {\n        throw Error(ERROR_REF);\n      }\n\n      this.precedents = arrayFilter(this.precedents, function (cell) {\n        return !cell.isEqual(cellReference);\n      });\n    }\n    /**\n     * Clear all precedent cells.\n     */\n\n  }, {\n    key: \"clearPrecedents\",\n    value: function clearPrecedents() {\n      this.precedents.length = 0;\n    }\n    /**\n     * Get precedent cells.\n     *\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getPrecedents\",\n    value: function getPrecedents() {\n      return this.precedents;\n    }\n    /**\n     * Check if cell value has precedents cells.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasPrecedents\",\n    value: function hasPrecedents() {\n      return this.precedents.length > 0;\n    }\n    /**\n     * Check if cell reference is precedents this cell.\n     *\n     * @param {CellReference} cellReference Cell reference object.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasPrecedent\",\n    value: function hasPrecedent(cellReference) {\n      return arrayFilter(this.precedents, function (cell) {\n        return cell.isEqual(cellReference);\n      }).length > 0;\n    }\n  }]);\n\n  return CellValue;\n}(BaseCell);\n\nexport default CellValue;"]},"metadata":{},"sourceType":"module"}