{"ast":null,"code":"import \"core-js/modules/es.string.replace\";\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nimport { matchesCSSRules } from './../helpers/dom/element';\nimport { isEmpty } from './../helpers/mixed';\nvar ESCAPED_HTML_CHARS = {\n  '&nbsp;': '\\x20',\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>'\n};\nvar regEscapedChars = new RegExp(Object.keys(ESCAPED_HTML_CHARS).map(function (key) {\n  return \"(\".concat(key, \")\");\n}).join('|'), 'gi');\n/**\n * Verifies if node is an HTMLTable element.\n *\n * @param {Node} element Node to verify if it's an HTMLTable.\n * @returns {Boolean}\n */\n\nfunction isHTMLTable(element) {\n  return (element && element.nodeName || '') === 'TABLE';\n}\n/**\n * Converts Handsontable into HTMLTableElement.\n *\n * @param {Core} instance\n * @returns {String} outerHTML of the HTMLTableElement\n */\n\n\nexport function instanceToHTML(instance) {\n  var hasColumnHeaders = instance.hasColHeaders();\n  var hasRowHeaders = instance.hasRowHeaders();\n  var coords = [hasColumnHeaders ? -1 : 0, hasRowHeaders ? -1 : 0, instance.countRows() - 1, instance.countCols() - 1];\n  var data = instance.getData.apply(instance, coords);\n  var countRows = data.length;\n  var countCols = countRows > 0 ? data[0].length : 0;\n  var TABLE = ['<table>', '</table>'];\n  var THEAD = hasColumnHeaders ? ['<thead>', '</thead>'] : [];\n  var TBODY = ['<tbody>', '</tbody>'];\n  var rowModifier = hasRowHeaders ? 1 : 0;\n  var columnModifier = hasColumnHeaders ? 1 : 0;\n\n  for (var row = 0; row < countRows; row += 1) {\n    var isColumnHeadersRow = hasColumnHeaders && row === 0;\n    var CELLS = [];\n\n    for (var column = 0; column < countCols; column += 1) {\n      var isRowHeadersColumn = !isColumnHeadersRow && hasRowHeaders && column === 0;\n      var cell = '';\n\n      if (isColumnHeadersRow) {\n        cell = \"<th>\".concat(instance.getColHeader(column - rowModifier), \"</th>\");\n      } else if (isRowHeadersColumn) {\n        cell = \"<th>\".concat(instance.getRowHeader(row - columnModifier), \"</th>\");\n      } else {\n        var cellData = data[row][column];\n\n        var _instance$getCellMeta = instance.getCellMeta(row - rowModifier, column - columnModifier),\n            hidden = _instance$getCellMeta.hidden,\n            rowspan = _instance$getCellMeta.rowspan,\n            colspan = _instance$getCellMeta.colspan;\n\n        if (!hidden) {\n          var attrs = [];\n\n          if (rowspan) {\n            attrs.push(\"rowspan=\\\"\".concat(rowspan, \"\\\"\"));\n          }\n\n          if (colspan) {\n            attrs.push(\"colspan=\\\"\".concat(colspan, \"\\\"\"));\n          }\n\n          if (isEmpty(cellData)) {\n            cell = \"<td \".concat(attrs.join(' '), \"></td>\");\n          } else {\n            var value = cellData.toString().replace('<', '&lt;').replace('>', '&gt;').replace(/(<br(\\s*|\\/)>(\\r\\n|\\n)?|\\r\\n|\\n)/g, '<br>\\r\\n').replace(/\\x20/gi, '&nbsp;').replace(/\\t/gi, '&#9;');\n            cell = \"<td \".concat(attrs.join(' '), \">\").concat(value, \"</td>\");\n          }\n        }\n      }\n\n      CELLS.push(cell);\n    }\n\n    var TR = ['<tr>'].concat(CELLS, ['</tr>']).join('');\n\n    if (isColumnHeadersRow) {\n      THEAD.splice(1, 0, TR);\n    } else {\n      TBODY.splice(-1, 0, TR);\n    }\n  }\n\n  TABLE.splice(1, 0, THEAD.join(''), TBODY.join(''));\n  return TABLE.join('');\n}\n/**\n * Converts 2D array into HTMLTableElement.\n *\n * @param {Array} input Input array which will be converted to HTMLTable\n * @returns {String} outerHTML of the HTMLTableElement\n */\n// eslint-disable-next-line no-restricted-globals\n\nexport function _dataToHTML(input) {\n  var inputLen = input.length;\n  var result = ['<table>'];\n\n  for (var row = 0; row < inputLen; row += 1) {\n    var rowData = input[row];\n    var columnsLen = rowData.length;\n    var columnsResult = [];\n\n    if (row === 0) {\n      result.push('<tbody>');\n    }\n\n    for (var column = 0; column < columnsLen; column += 1) {\n      var cellData = rowData[column];\n      var parsedCellData = isEmpty(cellData) ? '' : cellData.toString().replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/(<br(\\s*|\\/)>(\\r\\n|\\n)?|\\r\\n|\\n)/g, '<br>\\r\\n').replace(/\\x20/gi, '&nbsp;').replace(/\\t/gi, '&#9;');\n      columnsResult.push(\"<td>\".concat(parsedCellData, \"</td>\"));\n    }\n\n    result.push.apply(result, ['<tr>'].concat(columnsResult, ['</tr>']));\n\n    if (row + 1 === inputLen) {\n      result.push('</tbody>');\n    }\n  }\n\n  result.push('</table>');\n  return result.join('');\n}\n/**\n * Converts HTMLTable or string into Handsontable configuration object.\n *\n * @param {Element|String} element Node element which should contain `<table>...</table>`.\n * @param {Document} [rootDocument]\n * @returns {Object} Return configuration object. Contains keys as DefaultSettings.\n */\n// eslint-disable-next-line no-restricted-globals\n\nexport function htmlToGridSettings(element) {\n  var rootDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  var settingsObj = {};\n  var fragment = rootDocument.createDocumentFragment();\n  var tempElem = rootDocument.createElement('div');\n  fragment.appendChild(tempElem);\n  var checkElement = element;\n\n  if (typeof checkElement === 'string') {\n    var escapedAdjacentHTML = checkElement.replace(/<td\\b[^>]*?>([\\s\\S]*?)<\\/\\s*td>/g, function (cellFragment) {\n      var openingTag = cellFragment.match(/<td\\b[^>]*?>/g)[0];\n      var cellValue = cellFragment.substring(openingTag.length, cellFragment.lastIndexOf('<')).replace(/(<(?!br)([^>]+)>)/gi, '');\n      var closingTag = '</td>';\n      return \"\".concat(openingTag).concat(cellValue).concat(closingTag);\n    });\n    tempElem.insertAdjacentHTML('afterbegin', \"\".concat(escapedAdjacentHTML));\n    checkElement = tempElem.querySelector('table');\n  }\n\n  if (!checkElement || !isHTMLTable(checkElement)) {\n    return;\n  }\n\n  var styleElem = tempElem.querySelector('style');\n  var styleSheet = null;\n  var styleSheetArr = [];\n\n  if (styleElem) {\n    rootDocument.body.appendChild(styleElem);\n    styleElem.disabled = true;\n    styleSheet = styleElem.sheet;\n    styleSheetArr = styleSheet ? Array.from(styleSheet.cssRules) : [];\n    rootDocument.body.removeChild(styleElem);\n  }\n\n  var generator = tempElem.querySelector('meta[name$=\"enerator\"]');\n  var hasRowHeaders = checkElement.querySelector('tbody th') !== null;\n  var countCols = Array.from(checkElement.querySelector('tr').cells).reduce(function (cols, cell) {\n    return cols + cell.colSpan;\n  }, 0) - (hasRowHeaders ? 1 : 0);\n  var fixedRowsBottom = checkElement.tFoot && Array.from(checkElement.tFoot.rows) || [];\n  var fixedRowsTop = [];\n  var hasColHeaders = false;\n  var thRowsLen = 0;\n  var countRows = 0;\n\n  if (checkElement.tHead) {\n    var thRows = Array.from(checkElement.tHead.rows).filter(function (tr) {\n      var isDataRow = tr.querySelector('td') !== null;\n\n      if (isDataRow) {\n        fixedRowsTop.push(tr);\n      }\n\n      return !isDataRow;\n    });\n    thRowsLen = thRows.length;\n    hasColHeaders = thRowsLen > 0;\n\n    if (thRowsLen > 1) {\n      settingsObj.nestedHeaders = Array.from(thRows).reduce(function (rows, row) {\n        var headersRow = Array.from(row.cells).reduce(function (headers, header, currentIndex) {\n          if (hasRowHeaders && currentIndex === 0) {\n            return headers;\n          }\n\n          var colspan = header.colSpan,\n              innerHTML = header.innerHTML;\n          var nextHeader = colspan > 1 ? {\n            label: innerHTML,\n            colspan: colspan\n          } : innerHTML;\n          headers.push(nextHeader);\n          return headers;\n        }, []);\n        rows.push(headersRow);\n        return rows;\n      }, []);\n    } else if (hasColHeaders) {\n      settingsObj.colHeaders = Array.from(thRows[0].children).reduce(function (headers, header, index) {\n        if (hasRowHeaders && index === 0) {\n          return headers;\n        }\n\n        headers.push(header.innerHTML);\n        return headers;\n      }, []);\n    }\n  }\n\n  if (fixedRowsTop.length) {\n    settingsObj.fixedRowsTop = fixedRowsTop.length;\n  }\n\n  if (fixedRowsBottom.length) {\n    settingsObj.fixedRowsBottom = fixedRowsBottom.length;\n  }\n\n  var dataRows = [].concat(fixedRowsTop, _toConsumableArray(Array.from(checkElement.tBodies).reduce(function (sections, section) {\n    sections.push.apply(sections, _toConsumableArray(Array.from(section.rows)));\n    return sections;\n  }, [])), _toConsumableArray(fixedRowsBottom));\n  countRows = dataRows.length;\n  var dataArr = new Array(countRows);\n\n  for (var r = 0; r < countRows; r++) {\n    dataArr[r] = new Array(countCols);\n  }\n\n  var mergeCells = [];\n  var rowHeaders = [];\n\n  for (var row = 0; row < countRows; row++) {\n    var tr = dataRows[row];\n    var cells = Array.from(tr.cells);\n    var cellsLen = cells.length;\n\n    var _loop = function _loop(cellId) {\n      var cell = cells[cellId];\n      var nodeName = cell.nodeName,\n          innerHTML = cell.innerHTML,\n          rowspan = cell.rowSpan,\n          colspan = cell.colSpan;\n      var col = dataArr[row].findIndex(function (value) {\n        return value === void 0;\n      });\n\n      if (nodeName === 'TD') {\n        if (rowspan > 1 || colspan > 1) {\n          for (var rstart = row; rstart < row + rowspan; rstart++) {\n            if (rstart < countRows) {\n              for (var cstart = col; cstart < col + colspan; cstart++) {\n                dataArr[rstart][cstart] = null;\n              }\n            }\n          }\n\n          var styleAttr = cell.getAttribute('style');\n          var ignoreMerge = styleAttr && styleAttr.includes('mso-ignore:colspan');\n\n          if (!ignoreMerge) {\n            mergeCells.push({\n              col: col,\n              row: row,\n              rowspan: rowspan,\n              colspan: colspan\n            });\n          }\n        }\n\n        var cellStyle = styleSheetArr.reduce(function (settings, cssRule) {\n          if (matchesCSSRules(cell, cssRule)) {\n            var whiteSpace = cssRule.style.whiteSpace;\n\n            if (whiteSpace) {\n              settings.whiteSpace = whiteSpace;\n            }\n          }\n\n          return settings;\n        }, {});\n        var cellValue = '';\n\n        if (cellStyle.whiteSpace === 'nowrap') {\n          cellValue = innerHTML.replace(/[\\r\\n][\\x20]{0,2}/gim, '\\x20').replace(/<br(\\s*|\\/)>/gim, '\\r\\n');\n        } else if (generator && /excel/gi.test(generator.content)) {\n          cellValue = innerHTML.replace(/[\\r\\n][\\x20]{0,2}/g, '\\x20').replace(/<br(\\s*|\\/)>[\\r\\n]?[\\x20]{0,3}/gim, '\\r\\n');\n        } else {\n          cellValue = innerHTML.replace(/<br(\\s*|\\/)>[\\r\\n]?/gim, '\\r\\n');\n        }\n\n        dataArr[row][col] = cellValue.replace(regEscapedChars, function (match) {\n          return ESCAPED_HTML_CHARS[match];\n        });\n      } else {\n        rowHeaders.push(innerHTML);\n      }\n    };\n\n    for (var cellId = 0; cellId < cellsLen; cellId++) {\n      _loop(cellId);\n    }\n  }\n\n  if (mergeCells.length) {\n    settingsObj.mergeCells = mergeCells;\n  }\n\n  if (rowHeaders.length) {\n    settingsObj.rowHeaders = rowHeaders;\n  }\n\n  if (dataArr.length) {\n    settingsObj.data = dataArr;\n  }\n\n  return settingsObj;\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/utils/parseTable.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","matchesCSSRules","isEmpty","ESCAPED_HTML_CHARS","regEscapedChars","RegExp","keys","map","key","concat","join","isHTMLTable","element","nodeName","instanceToHTML","instance","hasColumnHeaders","hasColHeaders","hasRowHeaders","coords","countRows","countCols","data","getData","apply","TABLE","THEAD","TBODY","rowModifier","columnModifier","row","isColumnHeadersRow","CELLS","column","isRowHeadersColumn","cell","getColHeader","getRowHeader","cellData","_instance$getCellMeta","getCellMeta","hidden","rowspan","colspan","attrs","push","value","replace","TR","splice","_dataToHTML","input","inputLen","result","rowData","columnsLen","columnsResult","parsedCellData","htmlToGridSettings","rootDocument","arguments","undefined","document","settingsObj","fragment","createDocumentFragment","tempElem","createElement","appendChild","checkElement","escapedAdjacentHTML","cellFragment","openingTag","match","cellValue","substring","lastIndexOf","closingTag","insertAdjacentHTML","querySelector","styleElem","styleSheet","styleSheetArr","body","disabled","sheet","cssRules","removeChild","generator","cells","reduce","cols","colSpan","fixedRowsBottom","tFoot","rows","fixedRowsTop","thRowsLen","tHead","thRows","filter","tr","isDataRow","nestedHeaders","headersRow","headers","header","currentIndex","innerHTML","nextHeader","label","colHeaders","children","index","dataRows","tBodies","sections","section","dataArr","r","mergeCells","rowHeaders","cellsLen","_loop","cellId","rowSpan","col","findIndex","rstart","cstart","styleAttr","getAttribute","ignoreMerge","includes","cellStyle","settings","cssRule","whiteSpace","style","test","content"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.find-index\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.last-index-of\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.array.reduce\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.constructor\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.match\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport { matchesCSSRules } from './../helpers/dom/element';\nimport { isEmpty } from './../helpers/mixed';\nvar ESCAPED_HTML_CHARS = {\n  '&nbsp;': '\\x20',\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>'\n};\nvar regEscapedChars = new RegExp(Object.keys(ESCAPED_HTML_CHARS).map(function (key) {\n  return \"(\".concat(key, \")\");\n}).join('|'), 'gi');\n/**\n * Verifies if node is an HTMLTable element.\n *\n * @param {Node} element Node to verify if it's an HTMLTable.\n * @returns {Boolean}\n */\n\nfunction isHTMLTable(element) {\n  return (element && element.nodeName || '') === 'TABLE';\n}\n/**\n * Converts Handsontable into HTMLTableElement.\n *\n * @param {Core} instance\n * @returns {String} outerHTML of the HTMLTableElement\n */\n\n\nexport function instanceToHTML(instance) {\n  var hasColumnHeaders = instance.hasColHeaders();\n  var hasRowHeaders = instance.hasRowHeaders();\n  var coords = [hasColumnHeaders ? -1 : 0, hasRowHeaders ? -1 : 0, instance.countRows() - 1, instance.countCols() - 1];\n  var data = instance.getData.apply(instance, coords);\n  var countRows = data.length;\n  var countCols = countRows > 0 ? data[0].length : 0;\n  var TABLE = ['<table>', '</table>'];\n  var THEAD = hasColumnHeaders ? ['<thead>', '</thead>'] : [];\n  var TBODY = ['<tbody>', '</tbody>'];\n  var rowModifier = hasRowHeaders ? 1 : 0;\n  var columnModifier = hasColumnHeaders ? 1 : 0;\n\n  for (var row = 0; row < countRows; row += 1) {\n    var isColumnHeadersRow = hasColumnHeaders && row === 0;\n    var CELLS = [];\n\n    for (var column = 0; column < countCols; column += 1) {\n      var isRowHeadersColumn = !isColumnHeadersRow && hasRowHeaders && column === 0;\n      var cell = '';\n\n      if (isColumnHeadersRow) {\n        cell = \"<th>\".concat(instance.getColHeader(column - rowModifier), \"</th>\");\n      } else if (isRowHeadersColumn) {\n        cell = \"<th>\".concat(instance.getRowHeader(row - columnModifier), \"</th>\");\n      } else {\n        var cellData = data[row][column];\n\n        var _instance$getCellMeta = instance.getCellMeta(row - rowModifier, column - columnModifier),\n            hidden = _instance$getCellMeta.hidden,\n            rowspan = _instance$getCellMeta.rowspan,\n            colspan = _instance$getCellMeta.colspan;\n\n        if (!hidden) {\n          var attrs = [];\n\n          if (rowspan) {\n            attrs.push(\"rowspan=\\\"\".concat(rowspan, \"\\\"\"));\n          }\n\n          if (colspan) {\n            attrs.push(\"colspan=\\\"\".concat(colspan, \"\\\"\"));\n          }\n\n          if (isEmpty(cellData)) {\n            cell = \"<td \".concat(attrs.join(' '), \"></td>\");\n          } else {\n            var value = cellData.toString().replace('<', '&lt;').replace('>', '&gt;').replace(/(<br(\\s*|\\/)>(\\r\\n|\\n)?|\\r\\n|\\n)/g, '<br>\\r\\n').replace(/\\x20/gi, '&nbsp;').replace(/\\t/gi, '&#9;');\n            cell = \"<td \".concat(attrs.join(' '), \">\").concat(value, \"</td>\");\n          }\n        }\n      }\n\n      CELLS.push(cell);\n    }\n\n    var TR = ['<tr>'].concat(CELLS, ['</tr>']).join('');\n\n    if (isColumnHeadersRow) {\n      THEAD.splice(1, 0, TR);\n    } else {\n      TBODY.splice(-1, 0, TR);\n    }\n  }\n\n  TABLE.splice(1, 0, THEAD.join(''), TBODY.join(''));\n  return TABLE.join('');\n}\n/**\n * Converts 2D array into HTMLTableElement.\n *\n * @param {Array} input Input array which will be converted to HTMLTable\n * @returns {String} outerHTML of the HTMLTableElement\n */\n// eslint-disable-next-line no-restricted-globals\n\nexport function _dataToHTML(input) {\n  var inputLen = input.length;\n  var result = ['<table>'];\n\n  for (var row = 0; row < inputLen; row += 1) {\n    var rowData = input[row];\n    var columnsLen = rowData.length;\n    var columnsResult = [];\n\n    if (row === 0) {\n      result.push('<tbody>');\n    }\n\n    for (var column = 0; column < columnsLen; column += 1) {\n      var cellData = rowData[column];\n      var parsedCellData = isEmpty(cellData) ? '' : cellData.toString().replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/(<br(\\s*|\\/)>(\\r\\n|\\n)?|\\r\\n|\\n)/g, '<br>\\r\\n').replace(/\\x20/gi, '&nbsp;').replace(/\\t/gi, '&#9;');\n      columnsResult.push(\"<td>\".concat(parsedCellData, \"</td>\"));\n    }\n\n    result.push.apply(result, ['<tr>'].concat(columnsResult, ['</tr>']));\n\n    if (row + 1 === inputLen) {\n      result.push('</tbody>');\n    }\n  }\n\n  result.push('</table>');\n  return result.join('');\n}\n/**\n * Converts HTMLTable or string into Handsontable configuration object.\n *\n * @param {Element|String} element Node element which should contain `<table>...</table>`.\n * @param {Document} [rootDocument]\n * @returns {Object} Return configuration object. Contains keys as DefaultSettings.\n */\n// eslint-disable-next-line no-restricted-globals\n\nexport function htmlToGridSettings(element) {\n  var rootDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  var settingsObj = {};\n  var fragment = rootDocument.createDocumentFragment();\n  var tempElem = rootDocument.createElement('div');\n  fragment.appendChild(tempElem);\n  var checkElement = element;\n\n  if (typeof checkElement === 'string') {\n    var escapedAdjacentHTML = checkElement.replace(/<td\\b[^>]*?>([\\s\\S]*?)<\\/\\s*td>/g, function (cellFragment) {\n      var openingTag = cellFragment.match(/<td\\b[^>]*?>/g)[0];\n      var cellValue = cellFragment.substring(openingTag.length, cellFragment.lastIndexOf('<')).replace(/(<(?!br)([^>]+)>)/gi, '');\n      var closingTag = '</td>';\n      return \"\".concat(openingTag).concat(cellValue).concat(closingTag);\n    });\n    tempElem.insertAdjacentHTML('afterbegin', \"\".concat(escapedAdjacentHTML));\n    checkElement = tempElem.querySelector('table');\n  }\n\n  if (!checkElement || !isHTMLTable(checkElement)) {\n    return;\n  }\n\n  var styleElem = tempElem.querySelector('style');\n  var styleSheet = null;\n  var styleSheetArr = [];\n\n  if (styleElem) {\n    rootDocument.body.appendChild(styleElem);\n    styleElem.disabled = true;\n    styleSheet = styleElem.sheet;\n    styleSheetArr = styleSheet ? Array.from(styleSheet.cssRules) : [];\n    rootDocument.body.removeChild(styleElem);\n  }\n\n  var generator = tempElem.querySelector('meta[name$=\"enerator\"]');\n  var hasRowHeaders = checkElement.querySelector('tbody th') !== null;\n  var countCols = Array.from(checkElement.querySelector('tr').cells).reduce(function (cols, cell) {\n    return cols + cell.colSpan;\n  }, 0) - (hasRowHeaders ? 1 : 0);\n  var fixedRowsBottom = checkElement.tFoot && Array.from(checkElement.tFoot.rows) || [];\n  var fixedRowsTop = [];\n  var hasColHeaders = false;\n  var thRowsLen = 0;\n  var countRows = 0;\n\n  if (checkElement.tHead) {\n    var thRows = Array.from(checkElement.tHead.rows).filter(function (tr) {\n      var isDataRow = tr.querySelector('td') !== null;\n\n      if (isDataRow) {\n        fixedRowsTop.push(tr);\n      }\n\n      return !isDataRow;\n    });\n    thRowsLen = thRows.length;\n    hasColHeaders = thRowsLen > 0;\n\n    if (thRowsLen > 1) {\n      settingsObj.nestedHeaders = Array.from(thRows).reduce(function (rows, row) {\n        var headersRow = Array.from(row.cells).reduce(function (headers, header, currentIndex) {\n          if (hasRowHeaders && currentIndex === 0) {\n            return headers;\n          }\n\n          var colspan = header.colSpan,\n              innerHTML = header.innerHTML;\n          var nextHeader = colspan > 1 ? {\n            label: innerHTML,\n            colspan: colspan\n          } : innerHTML;\n          headers.push(nextHeader);\n          return headers;\n        }, []);\n        rows.push(headersRow);\n        return rows;\n      }, []);\n    } else if (hasColHeaders) {\n      settingsObj.colHeaders = Array.from(thRows[0].children).reduce(function (headers, header, index) {\n        if (hasRowHeaders && index === 0) {\n          return headers;\n        }\n\n        headers.push(header.innerHTML);\n        return headers;\n      }, []);\n    }\n  }\n\n  if (fixedRowsTop.length) {\n    settingsObj.fixedRowsTop = fixedRowsTop.length;\n  }\n\n  if (fixedRowsBottom.length) {\n    settingsObj.fixedRowsBottom = fixedRowsBottom.length;\n  }\n\n  var dataRows = [].concat(fixedRowsTop, _toConsumableArray(Array.from(checkElement.tBodies).reduce(function (sections, section) {\n    sections.push.apply(sections, _toConsumableArray(Array.from(section.rows)));\n    return sections;\n  }, [])), _toConsumableArray(fixedRowsBottom));\n  countRows = dataRows.length;\n  var dataArr = new Array(countRows);\n\n  for (var r = 0; r < countRows; r++) {\n    dataArr[r] = new Array(countCols);\n  }\n\n  var mergeCells = [];\n  var rowHeaders = [];\n\n  for (var row = 0; row < countRows; row++) {\n    var tr = dataRows[row];\n    var cells = Array.from(tr.cells);\n    var cellsLen = cells.length;\n\n    var _loop = function _loop(cellId) {\n      var cell = cells[cellId];\n      var nodeName = cell.nodeName,\n          innerHTML = cell.innerHTML,\n          rowspan = cell.rowSpan,\n          colspan = cell.colSpan;\n      var col = dataArr[row].findIndex(function (value) {\n        return value === void 0;\n      });\n\n      if (nodeName === 'TD') {\n        if (rowspan > 1 || colspan > 1) {\n          for (var rstart = row; rstart < row + rowspan; rstart++) {\n            if (rstart < countRows) {\n              for (var cstart = col; cstart < col + colspan; cstart++) {\n                dataArr[rstart][cstart] = null;\n              }\n            }\n          }\n\n          var styleAttr = cell.getAttribute('style');\n          var ignoreMerge = styleAttr && styleAttr.includes('mso-ignore:colspan');\n\n          if (!ignoreMerge) {\n            mergeCells.push({\n              col: col,\n              row: row,\n              rowspan: rowspan,\n              colspan: colspan\n            });\n          }\n        }\n\n        var cellStyle = styleSheetArr.reduce(function (settings, cssRule) {\n          if (matchesCSSRules(cell, cssRule)) {\n            var whiteSpace = cssRule.style.whiteSpace;\n\n            if (whiteSpace) {\n              settings.whiteSpace = whiteSpace;\n            }\n          }\n\n          return settings;\n        }, {});\n        var cellValue = '';\n\n        if (cellStyle.whiteSpace === 'nowrap') {\n          cellValue = innerHTML.replace(/[\\r\\n][\\x20]{0,2}/gim, '\\x20').replace(/<br(\\s*|\\/)>/gim, '\\r\\n');\n        } else if (generator && /excel/gi.test(generator.content)) {\n          cellValue = innerHTML.replace(/[\\r\\n][\\x20]{0,2}/g, '\\x20').replace(/<br(\\s*|\\/)>[\\r\\n]?[\\x20]{0,3}/gim, '\\r\\n');\n        } else {\n          cellValue = innerHTML.replace(/<br(\\s*|\\/)>[\\r\\n]?/gim, '\\r\\n');\n        }\n\n        dataArr[row][col] = cellValue.replace(regEscapedChars, function (match) {\n          return ESCAPED_HTML_CHARS[match];\n        });\n      } else {\n        rowHeaders.push(innerHTML);\n      }\n    };\n\n    for (var cellId = 0; cellId < cellsLen; cellId++) {\n      _loop(cellId);\n    }\n  }\n\n  if (mergeCells.length) {\n    settingsObj.mergeCells = mergeCells;\n  }\n\n  if (rowHeaders.length) {\n    settingsObj.rowHeaders = rowHeaders;\n  }\n\n  if (dataArr.length) {\n    settingsObj.data = dataArr;\n  }\n\n  return settingsObj;\n}"]},"metadata":{},"sourceType":"module"}