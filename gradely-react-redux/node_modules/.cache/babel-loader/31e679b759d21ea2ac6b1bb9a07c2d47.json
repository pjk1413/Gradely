{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport React, { Component } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport 'handsontable/dist/handsontable.full.css';\nimport { connect } from 'react-redux';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.data = [];\n  }\n\n  handleChange() {\n    let count = console.log(\"CHANGED\");\n    this.props.gridHandleChange();\n  }\n\n  componentDidUpdate() {}\n\n  colHeaders(index) {\n    return index + ': ID';\n  }\n\n  render() {\n    let colHeaders = [];\n    let columnSchema = [];\n    let rowHeaders = [];\n    let data = [];\n\n    if (this.props.editCourse && this.props.editCourse.students) {\n      rowHeaders = this.props.editCourse.students.map(student => {\n        //Creates an object that will be used to organize the data\n        let studentArray = [];\n        student.assignmentScores.forEach(score => {\n          studentArray.push([score.assignmentTempId, score.points]);\n        });\n        console.log(studentArray);\n        const temp = new Map(studentArray);\n        const studentObj = Object.fromEntries(temp);\n        data.push(studentObj); //Returns the heading\n\n        return student.user.firstName + \" \" + student.user.lastName;\n      });\n    }\n\n    if (this.props.editCourse && this.props.editCourse.assignments) {\n      //Sort by assignment ID\n      // ** Creates the column headers as well as colSchema //\n      // ***************************** //\n      colHeaders = this.props.editCourse.assignments.map(assignment => {\n        const colObj = {\n          data: assignment.id\n        };\n        columnSchema.push(colObj);\n        return assignment.name + \" (\" + assignment.totalPoints + \")\";\n      }); // ** Creates the row headers //\n    }\n\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      data: data,\n      colHeaders: colHeaders,\n      rowHeaders: rowHeaders,\n      rowHeaderWidth: 150,\n      columns: columnSchema,\n      afterChange: this.handleChange(data),\n      //row: rowStudentLabel,\n      // width: \"600\", \n      height: \"300\",\n      headerTooltips: {\n        rows: true,\n        columns: true,\n        onlyTrimmed: false\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hot-app\",\n      className: \"table table-hover table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HotTable, {\n      id: \"example1\",\n      className: \"my-3\",\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  data: state.temp.data\n});\n\nexport default connect(mapStateToProps, {})(Table);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/Table.js"],"names":["React","Component","HotTable","connect","Table","constructor","data","handleChange","count","console","log","props","gridHandleChange","componentDidUpdate","colHeaders","index","render","columnSchema","rowHeaders","editCourse","students","map","student","studentArray","assignmentScores","forEach","score","push","assignmentTempId","points","temp","Map","studentObj","Object","fromEntries","user","firstName","lastName","assignments","assignment","colObj","id","name","totalPoints","settings","licenseKey","rowHeaderWidth","columns","afterChange","height","headerTooltips","rows","onlyTrimmed","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { HotTable } from '@handsontable/react'\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport 'handsontable/dist/handsontable.full.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Table extends Component {\r\n    constructor() {\r\n        super()\r\n        this.data = [\r\n        ]\r\n    }\r\n\r\n    handleChange() {\r\n        let count = \r\n\r\n        console.log(\"CHANGED\")\r\n        this.props.gridHandleChange()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    colHeaders(index) {\r\n        return index + ': ID'\r\n    }\r\n\r\n    render() {\r\n        \r\n        let colHeaders = []\r\n        let columnSchema = []\r\n        let rowHeaders = []\r\n        let data = []\r\n\r\n        if (this.props.editCourse && this.props.editCourse.students) {\r\n            rowHeaders = this.props.editCourse.students.map(student => {\r\n                \r\n                //Creates an object that will be used to organize the data\r\n                let studentArray = []\r\n                student.assignmentScores.forEach(score => {\r\n                    studentArray.push([score.assignmentTempId, score.points])\r\n                });\r\n                console.log(studentArray)\r\n                const temp = new Map(studentArray)\r\n                const studentObj = Object.fromEntries(temp)\r\n\r\n                data.push(studentObj)\r\n\r\n                //Returns the heading\r\n                return student.user.firstName + \" \" + student.user.lastName\r\n            })\r\n\r\n\r\n\r\n        }\r\n\r\n        if (this.props.editCourse && this.props.editCourse.assignments) {\r\n\r\n            //Sort by assignment ID\r\n            // ** Creates the column headers as well as colSchema //\r\n            // ***************************** //\r\n            colHeaders = this.props.editCourse.assignments.map(assignment => {\r\n                const colObj = {data: assignment.id}\r\n                columnSchema.push(colObj)\r\n                return assignment.name + \" (\" + assignment.totalPoints + \")\"\r\n            })\r\n\r\n            // ** Creates the row headers //\r\n\r\n        }\r\n\r\n        const settings = {\r\n            licenseKey: 'non-commercial-and-evaluation',\r\n            data: data,\r\n            colHeaders: colHeaders,\r\n            rowHeaders: rowHeaders,\r\n            rowHeaderWidth: 150,\r\n            columns: columnSchema,\r\n            afterChange: this.handleChange(data),\r\n            //row: rowStudentLabel,\r\n            // width: \"600\", \r\n            height: \"300\",\r\n            headerTooltips: {\r\n                rows: true,\r\n                columns: true,\r\n                onlyTrimmed: false\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id=\"hot-app\" className=\"table table-hover table-sm\">\r\n                <HotTable id=\"example1\" className=\"my-3\" settings={settings} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    editCourse: state.temp.editCourse,\r\n    data: state.temp.data,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Table)"]},"metadata":{},"sourceType":"module"}