{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport BasePlugin from './../_base';\nimport Hooks from './../../pluginHooks';\nimport { arrayEach } from './../../helpers/array';\nimport { addClass, removeClass, offset, hasClass } from './../../helpers/dom/element';\nimport { rangeEach } from './../../helpers/number';\nimport EventManager from './../../eventManager';\nimport { registerPlugin } from './../../plugins';\nimport ColumnsMapper from './columnsMapper';\nimport BacklightUI from './ui/backlight';\nimport GuidelineUI from './ui/guideline';\nHooks.getSingleton().register('beforeColumnMove');\nHooks.getSingleton().register('afterColumnMove');\nHooks.getSingleton().register('unmodifyCol');\nvar privatePool = new WeakMap();\nvar CSS_PLUGIN = 'ht__manualColumnMove';\nvar CSS_SHOW_UI = 'show-ui';\nvar CSS_ON_MOVING = 'on-moving--columns';\nvar CSS_AFTER_SELECTION = 'after-selection--columns';\n/**\n * @plugin ManualColumnMove\n *\n * @description\n * This plugin allows to change columns order. To make columns order persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * API:\n * - moveColumn - move single column to the new position.\n * - moveColumns - move many columns (as an array of indexes) to the new position.\n *\n * If you want apply visual changes, you have to call manually the render() method on the instance of Handsontable.\n *\n * The plugin creates additional components to make moving possibly using user interface:\n * - backlight - highlight of selected columns.\n * - guideline - line which shows where rows has been moved.\n *\n * @class ManualColumnMove\n * @plugin ManualColumnMove\n */\n\nvar ManualColumnMove = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(ManualColumnMove, _BasePlugin);\n\n  function ManualColumnMove(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, ManualColumnMove);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManualColumnMove).call(this, hotInstance));\n    /**\n     * Set up WeakMap of plugin to sharing private parameters;\n     */\n\n    privatePool.set(_assertThisInitialized(_this), {\n      columnsToMove: [],\n      countCols: 0,\n      fixedColumns: 0,\n      pressed: void 0,\n      disallowMoving: void 0,\n      target: {\n        eventPageX: void 0,\n        coords: void 0,\n        TD: void 0,\n        col: void 0\n      }\n    });\n    /**\n     * List of last removed row indexes.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.removedColumns = [];\n    /**\n     * Object containing visual row indexes mapped to data source indexes.\n     *\n     * @private\n     * @type {RowsMapper}\n     */\n\n    _this.columnsMapper = new ColumnsMapper(_assertThisInitialized(_this));\n    /**\n     * Event Manager object.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.eventManager = new EventManager(_assertThisInitialized(_this));\n    /**\n     * Backlight UI object.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.backlight = new BacklightUI(hotInstance);\n    /**\n     * Guideline UI object.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.guideline = new GuidelineUI(hotInstance);\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link ManualColumnMove#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(ManualColumnMove, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().manualColumnMove;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.addHook('beforeOnCellMouseDown', function (event, coords, TD, blockCalculations) {\n        return _this2.onBeforeOnCellMouseDown(event, coords, TD, blockCalculations);\n      });\n      this.addHook('beforeOnCellMouseOver', function (event, coords, TD, blockCalculations) {\n        return _this2.onBeforeOnCellMouseOver(event, coords, TD, blockCalculations);\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.onAfterScrollVertically();\n      });\n      this.addHook('modifyCol', function (row, source) {\n        return _this2.onModifyCol(row, source);\n      });\n      this.addHook('beforeRemoveCol', function (index, amount) {\n        return _this2.onBeforeRemoveCol(index, amount);\n      });\n      this.addHook('afterRemoveCol', function () {\n        return _this2.onAfterRemoveCol();\n      });\n      this.addHook('afterCreateCol', function (index, amount) {\n        return _this2.onAfterCreateCol(index, amount);\n      });\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData();\n      });\n      this.addHook('unmodifyCol', function (column) {\n        return _this2.onUnmodifyCol(column);\n      });\n      this.registerEvents(); // TODO: move adding plugin classname to BasePlugin.\n\n      addClass(this.hot.rootElement, CSS_PLUGIN);\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.onAfterPluginsInitialized();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      var pluginSettings = this.hot.getSettings().manualColumnMove;\n\n      if (Array.isArray(pluginSettings)) {\n        this.columnsMapper.clearMap();\n      }\n\n      removeClass(this.hot.rootElement, CSS_PLUGIN);\n      this.unregisterEvents();\n      this.backlight.destroy();\n      this.guideline.destroy();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Moves a single column.\n     *\n     * @param {Number} column Visual column index to be moved.\n     * @param {Number} target Visual column index being a target for the moved column.\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     */\n\n  }, {\n    key: \"moveColumn\",\n    value: function moveColumn(column, target) {\n      this.moveColumns([column], target);\n    }\n    /**\n     * Moves a multiple columns.\n     *\n     * @param {Array} columns Array of visual column indexes to be moved.\n     * @param {Number} target Visual column index being a target for the moved columns.\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     */\n\n  }, {\n    key: \"moveColumns\",\n    value: function moveColumns(columns, target) {\n      var _this3 = this;\n\n      var visualColumns = _toConsumableArray(columns);\n\n      var priv = privatePool.get(this);\n      var beforeColumnHook = this.hot.runHooks('beforeColumnMove', visualColumns, target);\n      priv.disallowMoving = !beforeColumnHook;\n\n      if (beforeColumnHook !== false) {\n        // first we need to rewrite an visual indexes to physical for save reference after move\n        arrayEach(columns, function (column, index, array) {\n          array[index] = _this3.columnsMapper.getValueByIndex(column);\n        }); // next, when we have got an physical indexes, we can move columns\n\n        arrayEach(columns, function (column, index) {\n          var actualPosition = _this3.columnsMapper.getIndexByValue(column);\n\n          if (actualPosition !== target) {\n            _this3.columnsMapper.moveColumn(actualPosition, target + index);\n          }\n        }); // after moving we have to clear columnsMapper from null entries\n\n        this.columnsMapper.clearNull();\n        this.hot.runHooks('afterColumnMove', visualColumns, target);\n      }\n    }\n    /**\n     * Correct the cell selection after the move action. Fired only when action was made with a mouse.\n     * That means that changing the column order using the API won't correct the selection.\n     *\n     * @private\n     * @param {Number} startColumn Visual column index for the start of the selection.\n     * @param {Number} endColumn Visual column index for the end of the selection.\n     */\n\n  }, {\n    key: \"changeSelection\",\n    value: function changeSelection(startColumn, endColumn) {\n      this.hot.selectColumns(startColumn, endColumn);\n    }\n    /**\n     * Gets the sum of the widths of columns in the provided range.\n     *\n     * @private\n     * @param {Number} from Visual column index.\n     * @param {Number} to Visual column index.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getColumnsWidth\",\n    value: function getColumnsWidth(from, to) {\n      var width = 0;\n\n      for (var i = from; i < to; i++) {\n        var columnWidth = 0;\n\n        if (i < 0) {\n          columnWidth = this.hot.view.wt.wtViewport.getRowHeaderWidth() || 0;\n        } else {\n          columnWidth = this.hot.view.wt.wtTable.getStretchedColumnWidth(i) || 0;\n        }\n\n        width += columnWidth;\n      }\n\n      return width;\n    }\n    /**\n     * Loads initial settings when persistent state is saved or when plugin was initialized as an array.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"initialSettings\",\n    value: function initialSettings() {\n      var pluginSettings = this.hot.getSettings().manualColumnMove;\n\n      if (Array.isArray(pluginSettings)) {\n        this.moveColumns(pluginSettings, 0);\n      } else if (pluginSettings !== void 0) {\n        this.persistentStateLoad();\n      }\n    }\n    /**\n     * Checks if the provided column is in the fixedColumnsLeft section.\n     *\n     * @private\n     * @param {Number} column Visual column index to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isFixedColumnsLeft\",\n    value: function isFixedColumnsLeft(column) {\n      return column < this.hot.getSettings().fixedColumnsLeft;\n    }\n    /**\n     * Saves the manual column positions to the persistent state (the {@link Options#persistentState} option has to be enabled).\n     */\n\n  }, {\n    key: \"persistentStateSave\",\n    value: function persistentStateSave() {\n      this.hot.runHooks('persistentStateSave', 'manualColumnMove', this.columnsMapper._arrayMap);\n    }\n    /**\n     * Loads the manual column positions from the persistent state (the {@link Options#persistentState} option has to be enabled).\n     */\n\n  }, {\n    key: \"persistentStateLoad\",\n    value: function persistentStateLoad() {\n      var storedState = {};\n      this.hot.runHooks('persistentStateLoad', 'manualColumnMove', storedState);\n\n      if (storedState.value) {\n        this.columnsMapper._arrayMap = storedState.value;\n      }\n    }\n    /**\n     * Prepares an array of indexes based on actual selection.\n     *\n     * @private\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"prepareColumnsToMoving\",\n    value: function prepareColumnsToMoving(start, end) {\n      var selectedColumns = [];\n      rangeEach(start, end, function (i) {\n        selectedColumns.push(i);\n      });\n      return selectedColumns;\n    }\n    /**\n     * Updates the UI visual position.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"refreshPositions\",\n    value: function refreshPositions() {\n      var priv = privatePool.get(this);\n      var firstVisible = this.hot.view.wt.wtTable.getFirstVisibleColumn();\n      var lastVisible = this.hot.view.wt.wtTable.getLastVisibleColumn();\n      var wtTable = this.hot.view.wt.wtTable;\n      var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n      var scrollLeft = typeof scrollableElement.scrollX === 'number' ? scrollableElement.scrollX : scrollableElement.scrollLeft;\n      var tdOffsetLeft = this.hot.view.THEAD.offsetLeft + this.getColumnsWidth(0, priv.coordsColumn);\n      var mouseOffsetLeft = priv.target.eventPageX - (priv.rootElementOffset - (scrollableElement.scrollX === void 0 ? scrollLeft : 0));\n      var hiderWidth = wtTable.hider.offsetWidth;\n      var tbodyOffsetLeft = wtTable.TBODY.offsetLeft;\n      var backlightElemMarginLeft = this.backlight.getOffset().left;\n      var backlightElemWidth = this.backlight.getSize().width;\n      var rowHeaderWidth = 0;\n\n      if (priv.rootElementOffset + wtTable.holder.offsetWidth + scrollLeft < priv.target.eventPageX) {\n        if (priv.coordsColumn < priv.countCols) {\n          priv.coordsColumn += 1;\n        }\n      }\n\n      if (priv.hasRowHeaders) {\n        rowHeaderWidth = this.hot.view.wt.wtOverlays.leftOverlay.clone.wtTable.getColumnHeader(-1).offsetWidth;\n      }\n\n      if (this.isFixedColumnsLeft(priv.coordsColumn)) {\n        tdOffsetLeft += scrollLeft;\n      }\n\n      tdOffsetLeft += rowHeaderWidth;\n\n      if (priv.coordsColumn < 0) {\n        // if hover on rowHeader\n        if (priv.fixedColumns > 0) {\n          priv.target.col = 0;\n        } else {\n          priv.target.col = firstVisible > 0 ? firstVisible - 1 : firstVisible;\n        }\n      } else if (priv.target.TD.offsetWidth / 2 + tdOffsetLeft <= mouseOffsetLeft) {\n        var newCoordsCol = priv.coordsColumn >= priv.countCols ? priv.countCols - 1 : priv.coordsColumn; // if hover on right part of TD\n\n        priv.target.col = newCoordsCol + 1; // unfortunately first column is bigger than rest\n\n        tdOffsetLeft += priv.target.TD.offsetWidth;\n\n        if (priv.target.col > lastVisible && lastVisible < priv.countCols) {\n          this.hot.scrollViewportTo(void 0, lastVisible + 1, void 0, true);\n        }\n      } else {\n        // elsewhere on table\n        priv.target.col = priv.coordsColumn;\n\n        if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n          this.hot.scrollViewportTo(void 0, firstVisible - 1);\n        }\n      }\n\n      if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n        this.hot.scrollViewportTo(void 0, firstVisible - 1);\n      }\n\n      var backlightLeft = mouseOffsetLeft;\n      var guidelineLeft = tdOffsetLeft;\n\n      if (mouseOffsetLeft + backlightElemWidth + backlightElemMarginLeft >= hiderWidth) {\n        // prevent display backlight on the right side of the table\n        backlightLeft = hiderWidth - backlightElemWidth - backlightElemMarginLeft;\n      } else if (mouseOffsetLeft + backlightElemMarginLeft < tbodyOffsetLeft + rowHeaderWidth) {\n        // prevent display backlight on the left side of the table\n        backlightLeft = tbodyOffsetLeft + rowHeaderWidth + Math.abs(backlightElemMarginLeft);\n      }\n\n      if (tdOffsetLeft >= hiderWidth - 1) {\n        // prevent display guideline outside the table\n        guidelineLeft = hiderWidth - 1;\n      } else if (guidelineLeft === 0) {\n        // guideline has got `margin-left: -1px` as default\n        guidelineLeft = 1;\n      } else if (scrollableElement.scrollX !== void 0 && priv.coordsColumn < priv.fixedColumns) {\n        guidelineLeft -= priv.rootElementOffset <= scrollableElement.scrollX ? priv.rootElementOffset : 0;\n      }\n\n      this.backlight.setPosition(null, backlightLeft);\n      this.guideline.setPosition(null, guidelineLeft);\n    }\n    /**\n     * This method checks arrayMap from columnsMapper and updates the columnsMapper if it's necessary.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"updateColumnsMapper\",\n    value: function updateColumnsMapper() {\n      var countCols = this.hot.countSourceCols();\n      var columnsMapperLen = this.columnsMapper._arrayMap.length;\n\n      if (columnsMapperLen === 0) {\n        this.columnsMapper.createMap(countCols || this.hot.getSettings().startCols);\n      } else if (columnsMapperLen < countCols) {\n        var diff = countCols - columnsMapperLen;\n        this.columnsMapper.insertItems(columnsMapperLen, diff);\n      } else if (columnsMapperLen > countCols) {\n        var maxIndex = countCols - 1;\n        var columnsToRemove = [];\n        arrayEach(this.columnsMapper._arrayMap, function (value, index) {\n          if (value > maxIndex) {\n            columnsToRemove.push(index);\n          }\n        });\n        this.columnsMapper.removeItems(columnsToRemove);\n      }\n    }\n    /**\n     * Binds the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this4 = this;\n\n      var documentElement = this.hot.rootDocument.documentElement;\n      this.eventManager.addEventListener(documentElement, 'mousemove', function (event) {\n        return _this4.onMouseMove(event);\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function () {\n        return _this4.onMouseUp();\n      });\n    }\n    /**\n     * Unbinds the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"unregisterEvents\",\n    value: function unregisterEvents() {\n      this.eventManager.clear();\n    }\n    /**\n     * Changes the behavior of selection / dragging.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {Object} blockCalculations Object which contains information about blockCalculation for row, column or cells.\n     */\n\n  }, {\n    key: \"onBeforeOnCellMouseDown\",\n    value: function onBeforeOnCellMouseDown(event, coords, TD, blockCalculations) {\n      var wtTable = this.hot.view.wt.wtTable;\n      var isHeaderSelection = this.hot.selection.isSelectedByColumnHeader();\n      var selection = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this); // This block action shouldn't be handled below.\n\n      var isSortingElement = hasClass(event.realTarget, 'sortAction');\n\n      if (!selection || !isHeaderSelection || priv.pressed || event.button !== 0 || isSortingElement) {\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n        removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI]);\n        return;\n      }\n\n      var guidelineIsNotReady = this.guideline.isBuilt() && !this.guideline.isAppended();\n      var backlightIsNotReady = this.backlight.isBuilt() && !this.backlight.isAppended();\n\n      if (guidelineIsNotReady && backlightIsNotReady) {\n        this.guideline.appendTo(wtTable.hider);\n        this.backlight.appendTo(wtTable.hider);\n      }\n\n      var from = selection.from,\n          to = selection.to;\n      var start = Math.min(from.col, to.col);\n      var end = Math.max(from.col, to.col);\n\n      if (coords.row < 0 && coords.col >= start && coords.col <= end) {\n        blockCalculations.column = true;\n        priv.pressed = true;\n        priv.target.eventPageX = event.pageX;\n        priv.coordsColumn = coords.col;\n        priv.target.TD = TD;\n        priv.target.col = coords.col;\n        priv.columnsToMove = this.prepareColumnsToMoving(start, end);\n        priv.hasRowHeaders = !!this.hot.getSettings().rowHeaders;\n        priv.countCols = this.hot.countCols();\n        priv.fixedColumns = this.hot.getSettings().fixedColumnsLeft;\n        priv.rootElementOffset = offset(this.hot.rootElement).left;\n        var countColumnsFrom = priv.hasRowHeaders ? -1 : 0;\n        var topPos = wtTable.holder.scrollTop + wtTable.getColumnHeaderHeight(0) + 1;\n        var fixedColumns = coords.col < priv.fixedColumns;\n        var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n        var wrapperIsWindow = scrollableElement.scrollX ? scrollableElement.scrollX - priv.rootElementOffset : 0;\n        var mouseOffset = event.layerX - (fixedColumns ? wrapperIsWindow : 0);\n        var leftOffset = Math.abs(this.getColumnsWidth(start, coords.col) + mouseOffset);\n        this.backlight.setPosition(topPos, this.getColumnsWidth(countColumnsFrom, start) + leftOffset);\n        this.backlight.setSize(this.getColumnsWidth(start, end + 1), wtTable.hider.offsetHeight - topPos);\n        this.backlight.setOffset(null, leftOffset * -1);\n        addClass(this.hot.rootElement, CSS_ON_MOVING);\n      } else {\n        removeClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n      }\n    }\n    /**\n     * 'mouseMove' event callback. Fired when pointer move on document.documentElement.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var priv = privatePool.get(this);\n\n      if (!priv.pressed) {\n        return;\n      } // callback for browser which doesn't supports CSS pointer-event: none\n\n\n      if (event.realTarget === this.backlight.element) {\n        var width = this.backlight.getSize().width;\n        this.backlight.setSize(0);\n        setTimeout(function () {\n          this.backlight.setPosition(width);\n        });\n      }\n\n      priv.target.eventPageX = event.pageX;\n      this.refreshPositions();\n    }\n    /**\n     * 'beforeOnCellMouseOver' hook callback. Fired when pointer was over cell.\n     *\n     * @private\n     * @param {MouseEvent} event `mouseover` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {Object} blockCalculations Object which contains information about blockCalculation for row, column or cells.\n     */\n\n  }, {\n    key: \"onBeforeOnCellMouseOver\",\n    value: function onBeforeOnCellMouseOver(event, coords, TD, blockCalculations) {\n      var selectedRange = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this);\n\n      if (!selectedRange || !priv.pressed) {\n        return;\n      }\n\n      if (priv.columnsToMove.indexOf(coords.col) > -1) {\n        removeClass(this.hot.rootElement, CSS_SHOW_UI);\n      } else {\n        addClass(this.hot.rootElement, CSS_SHOW_UI);\n      }\n\n      blockCalculations.row = true;\n      blockCalculations.column = true;\n      blockCalculations.cell = true;\n      priv.coordsColumn = coords.col;\n      priv.target.TD = TD;\n    }\n    /**\n     * `onMouseUp` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      var priv = privatePool.get(this);\n      priv.coordsColumn = void 0;\n      priv.pressed = false;\n      priv.backlightWidth = 0;\n      removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI, CSS_AFTER_SELECTION]);\n\n      if (this.hot.selection.isSelectedByColumnHeader()) {\n        addClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n      }\n\n      if (priv.columnsToMove.length < 1 || priv.target.col === void 0 || priv.columnsToMove.indexOf(priv.target.col) > -1) {\n        return;\n      }\n\n      this.moveColumns(priv.columnsToMove, priv.target.col);\n      this.persistentStateSave();\n      this.hot.render();\n      this.hot.view.wt.wtOverlays.adjustElementsSize(true);\n\n      if (!priv.disallowMoving) {\n        var selectionStart = this.columnsMapper.getIndexByValue(priv.columnsToMove[0]);\n        var selectionEnd = this.columnsMapper.getIndexByValue(priv.columnsToMove[priv.columnsToMove.length - 1]);\n        this.changeSelection(selectionStart, selectionEnd);\n      }\n\n      priv.columnsToMove.length = 0;\n    }\n    /**\n     * `afterScrollHorizontally` hook callback. Fired the table was scrolled horizontally.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterScrollVertically\",\n    value: function onAfterScrollVertically() {\n      var wtTable = this.hot.view.wt.wtTable;\n      var headerHeight = wtTable.getColumnHeaderHeight(0) + 1;\n      var scrollTop = wtTable.holder.scrollTop;\n      var posTop = headerHeight + scrollTop;\n      this.backlight.setPosition(posTop);\n      this.backlight.setSize(null, wtTable.hider.offsetHeight - posTop);\n    }\n    /**\n     * `afterCreateCol` hook callback.\n     *\n     * @private\n     * @param {Number} index Visual index of the created column.\n     * @param {Number} amount Amount of created columns.\n     */\n\n  }, {\n    key: \"onAfterCreateCol\",\n    value: function onAfterCreateCol(index, amount) {\n      this.columnsMapper.shiftItems(index, amount);\n    }\n    /**\n     * On before remove column listener.\n     *\n     * @private\n     * @param {Number} index Visual column index.\n     * @param {Number} amount Defines how many columns removed.\n     */\n\n  }, {\n    key: \"onBeforeRemoveCol\",\n    value: function onBeforeRemoveCol(index, amount) {\n      var _this5 = this;\n\n      this.removedColumns.length = 0;\n\n      if (index !== false) {\n        // Collect physical row index.\n        rangeEach(index, index + amount - 1, function (removedIndex) {\n          _this5.removedColumns.push(_this5.hot.runHooks('modifyCol', removedIndex, _this5.pluginName));\n        });\n      }\n    }\n    /**\n     * `afterRemoveCol` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterRemoveCol\",\n    value: function onAfterRemoveCol() {\n      this.columnsMapper.unshiftItems(this.removedColumns);\n    }\n    /**\n     * `afterLoadData` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      this.updateColumnsMapper();\n    }\n    /**\n     * 'modifyRow' hook callback.\n     *\n     * @private\n     * @param {Number} column Visual column index.\n     * @returns {Number} Physical column index.\n     */\n\n  }, {\n    key: \"onModifyCol\",\n    value: function onModifyCol(column, source) {\n      var physicalColumn = column;\n\n      if (source !== this.pluginName) {\n        // ugly fix for try to insert new, needed columns after pasting data\n        var columnInMapper = this.columnsMapper.getValueByIndex(physicalColumn);\n        physicalColumn = columnInMapper === null ? physicalColumn : columnInMapper;\n      }\n\n      return physicalColumn;\n    }\n    /**\n     * 'unmodifyCol' hook callback.\n     *\n     * @private\n     * @param {Number} column Physical column index.\n     * @returns {Number} Visual column index.\n     */\n\n  }, {\n    key: \"onUnmodifyCol\",\n    value: function onUnmodifyCol(column) {\n      var indexInMapper = this.columnsMapper.getIndexByValue(column);\n      return indexInMapper === null ? column : indexInMapper;\n    }\n    /**\n     * `afterPluginsInitialized` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterPluginsInitialized\",\n    value: function onAfterPluginsInitialized() {\n      this.updateColumnsMapper();\n      this.initialSettings();\n      this.backlight.build();\n      this.guideline.build();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.backlight.destroy();\n      this.guideline.destroy();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return ManualColumnMove;\n}(BasePlugin);\n\nregisterPlugin('ManualColumnMove', ManualColumnMove);\nexport default ManualColumnMove;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/node_modules/handsontable/es/plugins/manualColumnMove/manualColumnMove.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Object","toString","call","Array","from","isArray","i","arr2","length","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","value","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","Hooks","arrayEach","addClass","removeClass","offset","hasClass","rangeEach","EventManager","registerPlugin","ColumnsMapper","BacklightUI","GuidelineUI","getSingleton","register","privatePool","WeakMap","CSS_PLUGIN","CSS_SHOW_UI","CSS_ON_MOVING","CSS_AFTER_SELECTION","ManualColumnMove","_BasePlugin","hotInstance","_this","set","columnsToMove","countCols","fixedColumns","pressed","disallowMoving","eventPageX","coords","TD","col","removedColumns","columnsMapper","eventManager","backlight","guideline","isEnabled","hot","getSettings","manualColumnMove","enablePlugin","_this2","enabled","addHook","event","blockCalculations","onBeforeOnCellMouseDown","onBeforeOnCellMouseOver","onAfterScrollVertically","row","source","onModifyCol","index","amount","onBeforeRemoveCol","onAfterRemoveCol","onAfterCreateCol","onAfterLoadData","column","onUnmodifyCol","registerEvents","rootElement","updatePlugin","disablePlugin","onAfterPluginsInitialized","pluginSettings","clearMap","unregisterEvents","destroy","moveColumn","moveColumns","columns","_this3","visualColumns","priv","beforeColumnHook","runHooks","array","getValueByIndex","actualPosition","getIndexByValue","clearNull","changeSelection","startColumn","endColumn","selectColumns","getColumnsWidth","to","width","columnWidth","view","wt","wtViewport","getRowHeaderWidth","wtTable","getStretchedColumnWidth","initialSettings","persistentStateLoad","isFixedColumnsLeft","fixedColumnsLeft","persistentStateSave","_arrayMap","storedState","prepareColumnsToMoving","start","end","selectedColumns","push","refreshPositions","firstVisible","getFirstVisibleColumn","lastVisible","getLastVisibleColumn","scrollableElement","wtOverlays","scrollLeft","scrollX","tdOffsetLeft","THEAD","offsetLeft","coordsColumn","mouseOffsetLeft","rootElementOffset","hiderWidth","hider","offsetWidth","tbodyOffsetLeft","TBODY","backlightElemMarginLeft","getOffset","left","backlightElemWidth","getSize","rowHeaderWidth","holder","hasRowHeaders","leftOverlay","clone","getColumnHeader","newCoordsCol","scrollViewportTo","backlightLeft","guidelineLeft","Math","abs","setPosition","updateColumnsMapper","countSourceCols","columnsMapperLen","createMap","startCols","diff","insertItems","maxIndex","columnsToRemove","removeItems","_this4","documentElement","rootDocument","addEventListener","onMouseMove","onMouseUp","clear","isHeaderSelection","selection","isSelectedByColumnHeader","getSelectedRangeLast","isSortingElement","realTarget","button","guidelineIsNotReady","isBuilt","isAppended","backlightIsNotReady","appendTo","min","max","pageX","rowHeaders","countColumnsFrom","topPos","scrollTop","getColumnHeaderHeight","wrapperIsWindow","mouseOffset","layerX","leftOffset","setSize","offsetHeight","setOffset","element","setTimeout","selectedRange","indexOf","cell","backlightWidth","render","adjustElementsSize","selectionStart","selectionEnd","headerHeight","posTop","shiftItems","_this5","removedIndex","pluginName","unshiftItems","physicalColumn","columnInMapper","indexInMapper","build"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.weak-map\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.timers\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from './../_base';\nimport Hooks from './../../pluginHooks';\nimport { arrayEach } from './../../helpers/array';\nimport { addClass, removeClass, offset, hasClass } from './../../helpers/dom/element';\nimport { rangeEach } from './../../helpers/number';\nimport EventManager from './../../eventManager';\nimport { registerPlugin } from './../../plugins';\nimport ColumnsMapper from './columnsMapper';\nimport BacklightUI from './ui/backlight';\nimport GuidelineUI from './ui/guideline';\nHooks.getSingleton().register('beforeColumnMove');\nHooks.getSingleton().register('afterColumnMove');\nHooks.getSingleton().register('unmodifyCol');\nvar privatePool = new WeakMap();\nvar CSS_PLUGIN = 'ht__manualColumnMove';\nvar CSS_SHOW_UI = 'show-ui';\nvar CSS_ON_MOVING = 'on-moving--columns';\nvar CSS_AFTER_SELECTION = 'after-selection--columns';\n/**\n * @plugin ManualColumnMove\n *\n * @description\n * This plugin allows to change columns order. To make columns order persistent the {@link Options#persistentState}\n * plugin should be enabled.\n *\n * API:\n * - moveColumn - move single column to the new position.\n * - moveColumns - move many columns (as an array of indexes) to the new position.\n *\n * If you want apply visual changes, you have to call manually the render() method on the instance of Handsontable.\n *\n * The plugin creates additional components to make moving possibly using user interface:\n * - backlight - highlight of selected columns.\n * - guideline - line which shows where rows has been moved.\n *\n * @class ManualColumnMove\n * @plugin ManualColumnMove\n */\n\nvar ManualColumnMove =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(ManualColumnMove, _BasePlugin);\n\n  function ManualColumnMove(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, ManualColumnMove);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManualColumnMove).call(this, hotInstance));\n    /**\n     * Set up WeakMap of plugin to sharing private parameters;\n     */\n\n    privatePool.set(_assertThisInitialized(_this), {\n      columnsToMove: [],\n      countCols: 0,\n      fixedColumns: 0,\n      pressed: void 0,\n      disallowMoving: void 0,\n      target: {\n        eventPageX: void 0,\n        coords: void 0,\n        TD: void 0,\n        col: void 0\n      }\n    });\n    /**\n     * List of last removed row indexes.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.removedColumns = [];\n    /**\n     * Object containing visual row indexes mapped to data source indexes.\n     *\n     * @private\n     * @type {RowsMapper}\n     */\n\n    _this.columnsMapper = new ColumnsMapper(_assertThisInitialized(_this));\n    /**\n     * Event Manager object.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.eventManager = new EventManager(_assertThisInitialized(_this));\n    /**\n     * Backlight UI object.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.backlight = new BacklightUI(hotInstance);\n    /**\n     * Guideline UI object.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.guideline = new GuidelineUI(hotInstance);\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link ManualColumnMove#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(ManualColumnMove, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().manualColumnMove;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.addHook('beforeOnCellMouseDown', function (event, coords, TD, blockCalculations) {\n        return _this2.onBeforeOnCellMouseDown(event, coords, TD, blockCalculations);\n      });\n      this.addHook('beforeOnCellMouseOver', function (event, coords, TD, blockCalculations) {\n        return _this2.onBeforeOnCellMouseOver(event, coords, TD, blockCalculations);\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.onAfterScrollVertically();\n      });\n      this.addHook('modifyCol', function (row, source) {\n        return _this2.onModifyCol(row, source);\n      });\n      this.addHook('beforeRemoveCol', function (index, amount) {\n        return _this2.onBeforeRemoveCol(index, amount);\n      });\n      this.addHook('afterRemoveCol', function () {\n        return _this2.onAfterRemoveCol();\n      });\n      this.addHook('afterCreateCol', function (index, amount) {\n        return _this2.onAfterCreateCol(index, amount);\n      });\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData();\n      });\n      this.addHook('unmodifyCol', function (column) {\n        return _this2.onUnmodifyCol(column);\n      });\n      this.registerEvents(); // TODO: move adding plugin classname to BasePlugin.\n\n      addClass(this.hot.rootElement, CSS_PLUGIN);\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.onAfterPluginsInitialized();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      var pluginSettings = this.hot.getSettings().manualColumnMove;\n\n      if (Array.isArray(pluginSettings)) {\n        this.columnsMapper.clearMap();\n      }\n\n      removeClass(this.hot.rootElement, CSS_PLUGIN);\n      this.unregisterEvents();\n      this.backlight.destroy();\n      this.guideline.destroy();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Moves a single column.\n     *\n     * @param {Number} column Visual column index to be moved.\n     * @param {Number} target Visual column index being a target for the moved column.\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     */\n\n  }, {\n    key: \"moveColumn\",\n    value: function moveColumn(column, target) {\n      this.moveColumns([column], target);\n    }\n    /**\n     * Moves a multiple columns.\n     *\n     * @param {Array} columns Array of visual column indexes to be moved.\n     * @param {Number} target Visual column index being a target for the moved columns.\n     * @fires Hooks#beforeColumnMove\n     * @fires Hooks#afterColumnMove\n     */\n\n  }, {\n    key: \"moveColumns\",\n    value: function moveColumns(columns, target) {\n      var _this3 = this;\n\n      var visualColumns = _toConsumableArray(columns);\n\n      var priv = privatePool.get(this);\n      var beforeColumnHook = this.hot.runHooks('beforeColumnMove', visualColumns, target);\n      priv.disallowMoving = !beforeColumnHook;\n\n      if (beforeColumnHook !== false) {\n        // first we need to rewrite an visual indexes to physical for save reference after move\n        arrayEach(columns, function (column, index, array) {\n          array[index] = _this3.columnsMapper.getValueByIndex(column);\n        }); // next, when we have got an physical indexes, we can move columns\n\n        arrayEach(columns, function (column, index) {\n          var actualPosition = _this3.columnsMapper.getIndexByValue(column);\n\n          if (actualPosition !== target) {\n            _this3.columnsMapper.moveColumn(actualPosition, target + index);\n          }\n        }); // after moving we have to clear columnsMapper from null entries\n\n        this.columnsMapper.clearNull();\n        this.hot.runHooks('afterColumnMove', visualColumns, target);\n      }\n    }\n    /**\n     * Correct the cell selection after the move action. Fired only when action was made with a mouse.\n     * That means that changing the column order using the API won't correct the selection.\n     *\n     * @private\n     * @param {Number} startColumn Visual column index for the start of the selection.\n     * @param {Number} endColumn Visual column index for the end of the selection.\n     */\n\n  }, {\n    key: \"changeSelection\",\n    value: function changeSelection(startColumn, endColumn) {\n      this.hot.selectColumns(startColumn, endColumn);\n    }\n    /**\n     * Gets the sum of the widths of columns in the provided range.\n     *\n     * @private\n     * @param {Number} from Visual column index.\n     * @param {Number} to Visual column index.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getColumnsWidth\",\n    value: function getColumnsWidth(from, to) {\n      var width = 0;\n\n      for (var i = from; i < to; i++) {\n        var columnWidth = 0;\n\n        if (i < 0) {\n          columnWidth = this.hot.view.wt.wtViewport.getRowHeaderWidth() || 0;\n        } else {\n          columnWidth = this.hot.view.wt.wtTable.getStretchedColumnWidth(i) || 0;\n        }\n\n        width += columnWidth;\n      }\n\n      return width;\n    }\n    /**\n     * Loads initial settings when persistent state is saved or when plugin was initialized as an array.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"initialSettings\",\n    value: function initialSettings() {\n      var pluginSettings = this.hot.getSettings().manualColumnMove;\n\n      if (Array.isArray(pluginSettings)) {\n        this.moveColumns(pluginSettings, 0);\n      } else if (pluginSettings !== void 0) {\n        this.persistentStateLoad();\n      }\n    }\n    /**\n     * Checks if the provided column is in the fixedColumnsLeft section.\n     *\n     * @private\n     * @param {Number} column Visual column index to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isFixedColumnsLeft\",\n    value: function isFixedColumnsLeft(column) {\n      return column < this.hot.getSettings().fixedColumnsLeft;\n    }\n    /**\n     * Saves the manual column positions to the persistent state (the {@link Options#persistentState} option has to be enabled).\n     */\n\n  }, {\n    key: \"persistentStateSave\",\n    value: function persistentStateSave() {\n      this.hot.runHooks('persistentStateSave', 'manualColumnMove', this.columnsMapper._arrayMap);\n    }\n    /**\n     * Loads the manual column positions from the persistent state (the {@link Options#persistentState} option has to be enabled).\n     */\n\n  }, {\n    key: \"persistentStateLoad\",\n    value: function persistentStateLoad() {\n      var storedState = {};\n      this.hot.runHooks('persistentStateLoad', 'manualColumnMove', storedState);\n\n      if (storedState.value) {\n        this.columnsMapper._arrayMap = storedState.value;\n      }\n    }\n    /**\n     * Prepares an array of indexes based on actual selection.\n     *\n     * @private\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"prepareColumnsToMoving\",\n    value: function prepareColumnsToMoving(start, end) {\n      var selectedColumns = [];\n      rangeEach(start, end, function (i) {\n        selectedColumns.push(i);\n      });\n      return selectedColumns;\n    }\n    /**\n     * Updates the UI visual position.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"refreshPositions\",\n    value: function refreshPositions() {\n      var priv = privatePool.get(this);\n      var firstVisible = this.hot.view.wt.wtTable.getFirstVisibleColumn();\n      var lastVisible = this.hot.view.wt.wtTable.getLastVisibleColumn();\n      var wtTable = this.hot.view.wt.wtTable;\n      var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n      var scrollLeft = typeof scrollableElement.scrollX === 'number' ? scrollableElement.scrollX : scrollableElement.scrollLeft;\n      var tdOffsetLeft = this.hot.view.THEAD.offsetLeft + this.getColumnsWidth(0, priv.coordsColumn);\n      var mouseOffsetLeft = priv.target.eventPageX - (priv.rootElementOffset - (scrollableElement.scrollX === void 0 ? scrollLeft : 0));\n      var hiderWidth = wtTable.hider.offsetWidth;\n      var tbodyOffsetLeft = wtTable.TBODY.offsetLeft;\n      var backlightElemMarginLeft = this.backlight.getOffset().left;\n      var backlightElemWidth = this.backlight.getSize().width;\n      var rowHeaderWidth = 0;\n\n      if (priv.rootElementOffset + wtTable.holder.offsetWidth + scrollLeft < priv.target.eventPageX) {\n        if (priv.coordsColumn < priv.countCols) {\n          priv.coordsColumn += 1;\n        }\n      }\n\n      if (priv.hasRowHeaders) {\n        rowHeaderWidth = this.hot.view.wt.wtOverlays.leftOverlay.clone.wtTable.getColumnHeader(-1).offsetWidth;\n      }\n\n      if (this.isFixedColumnsLeft(priv.coordsColumn)) {\n        tdOffsetLeft += scrollLeft;\n      }\n\n      tdOffsetLeft += rowHeaderWidth;\n\n      if (priv.coordsColumn < 0) {\n        // if hover on rowHeader\n        if (priv.fixedColumns > 0) {\n          priv.target.col = 0;\n        } else {\n          priv.target.col = firstVisible > 0 ? firstVisible - 1 : firstVisible;\n        }\n      } else if (priv.target.TD.offsetWidth / 2 + tdOffsetLeft <= mouseOffsetLeft) {\n        var newCoordsCol = priv.coordsColumn >= priv.countCols ? priv.countCols - 1 : priv.coordsColumn; // if hover on right part of TD\n\n        priv.target.col = newCoordsCol + 1; // unfortunately first column is bigger than rest\n\n        tdOffsetLeft += priv.target.TD.offsetWidth;\n\n        if (priv.target.col > lastVisible && lastVisible < priv.countCols) {\n          this.hot.scrollViewportTo(void 0, lastVisible + 1, void 0, true);\n        }\n      } else {\n        // elsewhere on table\n        priv.target.col = priv.coordsColumn;\n\n        if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n          this.hot.scrollViewportTo(void 0, firstVisible - 1);\n        }\n      }\n\n      if (priv.target.col <= firstVisible && priv.target.col >= priv.fixedColumns && firstVisible > 0) {\n        this.hot.scrollViewportTo(void 0, firstVisible - 1);\n      }\n\n      var backlightLeft = mouseOffsetLeft;\n      var guidelineLeft = tdOffsetLeft;\n\n      if (mouseOffsetLeft + backlightElemWidth + backlightElemMarginLeft >= hiderWidth) {\n        // prevent display backlight on the right side of the table\n        backlightLeft = hiderWidth - backlightElemWidth - backlightElemMarginLeft;\n      } else if (mouseOffsetLeft + backlightElemMarginLeft < tbodyOffsetLeft + rowHeaderWidth) {\n        // prevent display backlight on the left side of the table\n        backlightLeft = tbodyOffsetLeft + rowHeaderWidth + Math.abs(backlightElemMarginLeft);\n      }\n\n      if (tdOffsetLeft >= hiderWidth - 1) {\n        // prevent display guideline outside the table\n        guidelineLeft = hiderWidth - 1;\n      } else if (guidelineLeft === 0) {\n        // guideline has got `margin-left: -1px` as default\n        guidelineLeft = 1;\n      } else if (scrollableElement.scrollX !== void 0 && priv.coordsColumn < priv.fixedColumns) {\n        guidelineLeft -= priv.rootElementOffset <= scrollableElement.scrollX ? priv.rootElementOffset : 0;\n      }\n\n      this.backlight.setPosition(null, backlightLeft);\n      this.guideline.setPosition(null, guidelineLeft);\n    }\n    /**\n     * This method checks arrayMap from columnsMapper and updates the columnsMapper if it's necessary.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"updateColumnsMapper\",\n    value: function updateColumnsMapper() {\n      var countCols = this.hot.countSourceCols();\n      var columnsMapperLen = this.columnsMapper._arrayMap.length;\n\n      if (columnsMapperLen === 0) {\n        this.columnsMapper.createMap(countCols || this.hot.getSettings().startCols);\n      } else if (columnsMapperLen < countCols) {\n        var diff = countCols - columnsMapperLen;\n        this.columnsMapper.insertItems(columnsMapperLen, diff);\n      } else if (columnsMapperLen > countCols) {\n        var maxIndex = countCols - 1;\n        var columnsToRemove = [];\n        arrayEach(this.columnsMapper._arrayMap, function (value, index) {\n          if (value > maxIndex) {\n            columnsToRemove.push(index);\n          }\n        });\n        this.columnsMapper.removeItems(columnsToRemove);\n      }\n    }\n    /**\n     * Binds the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this4 = this;\n\n      var documentElement = this.hot.rootDocument.documentElement;\n      this.eventManager.addEventListener(documentElement, 'mousemove', function (event) {\n        return _this4.onMouseMove(event);\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function () {\n        return _this4.onMouseUp();\n      });\n    }\n    /**\n     * Unbinds the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"unregisterEvents\",\n    value: function unregisterEvents() {\n      this.eventManager.clear();\n    }\n    /**\n     * Changes the behavior of selection / dragging.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {Object} blockCalculations Object which contains information about blockCalculation for row, column or cells.\n     */\n\n  }, {\n    key: \"onBeforeOnCellMouseDown\",\n    value: function onBeforeOnCellMouseDown(event, coords, TD, blockCalculations) {\n      var wtTable = this.hot.view.wt.wtTable;\n      var isHeaderSelection = this.hot.selection.isSelectedByColumnHeader();\n      var selection = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this); // This block action shouldn't be handled below.\n\n      var isSortingElement = hasClass(event.realTarget, 'sortAction');\n\n      if (!selection || !isHeaderSelection || priv.pressed || event.button !== 0 || isSortingElement) {\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n        removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI]);\n        return;\n      }\n\n      var guidelineIsNotReady = this.guideline.isBuilt() && !this.guideline.isAppended();\n      var backlightIsNotReady = this.backlight.isBuilt() && !this.backlight.isAppended();\n\n      if (guidelineIsNotReady && backlightIsNotReady) {\n        this.guideline.appendTo(wtTable.hider);\n        this.backlight.appendTo(wtTable.hider);\n      }\n\n      var from = selection.from,\n          to = selection.to;\n      var start = Math.min(from.col, to.col);\n      var end = Math.max(from.col, to.col);\n\n      if (coords.row < 0 && coords.col >= start && coords.col <= end) {\n        blockCalculations.column = true;\n        priv.pressed = true;\n        priv.target.eventPageX = event.pageX;\n        priv.coordsColumn = coords.col;\n        priv.target.TD = TD;\n        priv.target.col = coords.col;\n        priv.columnsToMove = this.prepareColumnsToMoving(start, end);\n        priv.hasRowHeaders = !!this.hot.getSettings().rowHeaders;\n        priv.countCols = this.hot.countCols();\n        priv.fixedColumns = this.hot.getSettings().fixedColumnsLeft;\n        priv.rootElementOffset = offset(this.hot.rootElement).left;\n        var countColumnsFrom = priv.hasRowHeaders ? -1 : 0;\n        var topPos = wtTable.holder.scrollTop + wtTable.getColumnHeaderHeight(0) + 1;\n        var fixedColumns = coords.col < priv.fixedColumns;\n        var scrollableElement = this.hot.view.wt.wtOverlays.scrollableElement;\n        var wrapperIsWindow = scrollableElement.scrollX ? scrollableElement.scrollX - priv.rootElementOffset : 0;\n        var mouseOffset = event.layerX - (fixedColumns ? wrapperIsWindow : 0);\n        var leftOffset = Math.abs(this.getColumnsWidth(start, coords.col) + mouseOffset);\n        this.backlight.setPosition(topPos, this.getColumnsWidth(countColumnsFrom, start) + leftOffset);\n        this.backlight.setSize(this.getColumnsWidth(start, end + 1), wtTable.hider.offsetHeight - topPos);\n        this.backlight.setOffset(null, leftOffset * -1);\n        addClass(this.hot.rootElement, CSS_ON_MOVING);\n      } else {\n        removeClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n        priv.pressed = false;\n        priv.columnsToMove.length = 0;\n      }\n    }\n    /**\n     * 'mouseMove' event callback. Fired when pointer move on document.documentElement.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var priv = privatePool.get(this);\n\n      if (!priv.pressed) {\n        return;\n      } // callback for browser which doesn't supports CSS pointer-event: none\n\n\n      if (event.realTarget === this.backlight.element) {\n        var width = this.backlight.getSize().width;\n        this.backlight.setSize(0);\n        setTimeout(function () {\n          this.backlight.setPosition(width);\n        });\n      }\n\n      priv.target.eventPageX = event.pageX;\n      this.refreshPositions();\n    }\n    /**\n     * 'beforeOnCellMouseOver' hook callback. Fired when pointer was over cell.\n     *\n     * @private\n     * @param {MouseEvent} event `mouseover` event properties.\n     * @param {CellCoords} coords Visual cell coordinates where was fired event.\n     * @param {HTMLElement} TD Cell represented as HTMLElement.\n     * @param {Object} blockCalculations Object which contains information about blockCalculation for row, column or cells.\n     */\n\n  }, {\n    key: \"onBeforeOnCellMouseOver\",\n    value: function onBeforeOnCellMouseOver(event, coords, TD, blockCalculations) {\n      var selectedRange = this.hot.getSelectedRangeLast();\n      var priv = privatePool.get(this);\n\n      if (!selectedRange || !priv.pressed) {\n        return;\n      }\n\n      if (priv.columnsToMove.indexOf(coords.col) > -1) {\n        removeClass(this.hot.rootElement, CSS_SHOW_UI);\n      } else {\n        addClass(this.hot.rootElement, CSS_SHOW_UI);\n      }\n\n      blockCalculations.row = true;\n      blockCalculations.column = true;\n      blockCalculations.cell = true;\n      priv.coordsColumn = coords.col;\n      priv.target.TD = TD;\n    }\n    /**\n     * `onMouseUp` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      var priv = privatePool.get(this);\n      priv.coordsColumn = void 0;\n      priv.pressed = false;\n      priv.backlightWidth = 0;\n      removeClass(this.hot.rootElement, [CSS_ON_MOVING, CSS_SHOW_UI, CSS_AFTER_SELECTION]);\n\n      if (this.hot.selection.isSelectedByColumnHeader()) {\n        addClass(this.hot.rootElement, CSS_AFTER_SELECTION);\n      }\n\n      if (priv.columnsToMove.length < 1 || priv.target.col === void 0 || priv.columnsToMove.indexOf(priv.target.col) > -1) {\n        return;\n      }\n\n      this.moveColumns(priv.columnsToMove, priv.target.col);\n      this.persistentStateSave();\n      this.hot.render();\n      this.hot.view.wt.wtOverlays.adjustElementsSize(true);\n\n      if (!priv.disallowMoving) {\n        var selectionStart = this.columnsMapper.getIndexByValue(priv.columnsToMove[0]);\n        var selectionEnd = this.columnsMapper.getIndexByValue(priv.columnsToMove[priv.columnsToMove.length - 1]);\n        this.changeSelection(selectionStart, selectionEnd);\n      }\n\n      priv.columnsToMove.length = 0;\n    }\n    /**\n     * `afterScrollHorizontally` hook callback. Fired the table was scrolled horizontally.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterScrollVertically\",\n    value: function onAfterScrollVertically() {\n      var wtTable = this.hot.view.wt.wtTable;\n      var headerHeight = wtTable.getColumnHeaderHeight(0) + 1;\n      var scrollTop = wtTable.holder.scrollTop;\n      var posTop = headerHeight + scrollTop;\n      this.backlight.setPosition(posTop);\n      this.backlight.setSize(null, wtTable.hider.offsetHeight - posTop);\n    }\n    /**\n     * `afterCreateCol` hook callback.\n     *\n     * @private\n     * @param {Number} index Visual index of the created column.\n     * @param {Number} amount Amount of created columns.\n     */\n\n  }, {\n    key: \"onAfterCreateCol\",\n    value: function onAfterCreateCol(index, amount) {\n      this.columnsMapper.shiftItems(index, amount);\n    }\n    /**\n     * On before remove column listener.\n     *\n     * @private\n     * @param {Number} index Visual column index.\n     * @param {Number} amount Defines how many columns removed.\n     */\n\n  }, {\n    key: \"onBeforeRemoveCol\",\n    value: function onBeforeRemoveCol(index, amount) {\n      var _this5 = this;\n\n      this.removedColumns.length = 0;\n\n      if (index !== false) {\n        // Collect physical row index.\n        rangeEach(index, index + amount - 1, function (removedIndex) {\n          _this5.removedColumns.push(_this5.hot.runHooks('modifyCol', removedIndex, _this5.pluginName));\n        });\n      }\n    }\n    /**\n     * `afterRemoveCol` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterRemoveCol\",\n    value: function onAfterRemoveCol() {\n      this.columnsMapper.unshiftItems(this.removedColumns);\n    }\n    /**\n     * `afterLoadData` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      this.updateColumnsMapper();\n    }\n    /**\n     * 'modifyRow' hook callback.\n     *\n     * @private\n     * @param {Number} column Visual column index.\n     * @returns {Number} Physical column index.\n     */\n\n  }, {\n    key: \"onModifyCol\",\n    value: function onModifyCol(column, source) {\n      var physicalColumn = column;\n\n      if (source !== this.pluginName) {\n        // ugly fix for try to insert new, needed columns after pasting data\n        var columnInMapper = this.columnsMapper.getValueByIndex(physicalColumn);\n        physicalColumn = columnInMapper === null ? physicalColumn : columnInMapper;\n      }\n\n      return physicalColumn;\n    }\n    /**\n     * 'unmodifyCol' hook callback.\n     *\n     * @private\n     * @param {Number} column Physical column index.\n     * @returns {Number} Visual column index.\n     */\n\n  }, {\n    key: \"onUnmodifyCol\",\n    value: function onUnmodifyCol(column) {\n      var indexInMapper = this.columnsMapper.getIndexByValue(column);\n      return indexInMapper === null ? column : indexInMapper;\n    }\n    /**\n     * `afterPluginsInitialized` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterPluginsInitialized\",\n    value: function onAfterPluginsInitialized() {\n      this.updateColumnsMapper();\n      this.initialSettings();\n      this.backlight.build();\n      this.guideline.build();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.backlight.destroy();\n      this.guideline.destroy();\n\n      _get(_getPrototypeOf(ManualColumnMove.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return ManualColumnMove;\n}(BasePlugin);\n\nregisterPlugin('ManualColumnMove', ManualColumnMove);\nexport default ManualColumnMove;"]},"metadata":{},"sourceType":"module"}