{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport React from 'react';\nimport DataSheet from 'react-datasheet';\nimport './gradeEntry.css';\n\nconst SheetRenderer = props => {\n  const {\n    as: Tag,\n    headerAs: Header,\n    bodyAs: Body,\n    rowAs: Row,\n    cellAs: Cell,\n    className,\n    columns,\n    selections,\n    onSelectAllChanged\n  } = props;\n  return /*#__PURE__*/React.createElement(Tag, {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    className: \"data-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Cell, {\n    className: \"action-cell cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: selections.every(s => s),\n    onChange: e => onSelectAllChanged(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  })), columns.map(column => /*#__PURE__*/React.createElement(Cell, {\n    className: \"cell\",\n    style: {\n      width: column.width\n    },\n    key: column.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 34\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(Body, {\n    className: \"data-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, props.children));\n};\n\nconst RowRenderer = props => {\n  const {\n    as: Tag,\n    cellAs: Cell,\n    className,\n    row,\n    selected,\n    onSelectChanged\n  } = props;\n  return /*#__PURE__*/React.createElement(Tag, {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Cell, {\n    className: \"action-cell cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: selected,\n    onChange: e => onSelectChanged(row, e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), props.children);\n};\n\nconst CellRenderer = props => {\n  const {\n    as: Tag,\n    cell,\n    row,\n    col,\n    columns,\n    attributesRenderer,\n    selected,\n    editing,\n    updated,\n    style,\n    ...rest\n  } = props; // hey, how about some custom attributes on our cell?\n\n  const attributes = cell.attributes || {}; // ignore default style handed to us by the component and roll our own\n\n  attributes.style = {\n    width: columns[col].width\n  };\n\n  if (col === 0) {\n    attributes.title = cell.label;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, Object.assign({}, rest, attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }), props.children);\n};\n\nexport default class OverrideEverythingSheet extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleSelectAllChanged = this.handleSelectAllChanged.bind(this);\n    this.handleSelectChanged = this.handleSelectChanged.bind(this);\n    this.handleCellsChanged = this.handleCellsChanged.bind(this);\n    this.sheetRenderer = this.sheetRenderer.bind(this);\n    this.rowRenderer = this.rowRenderer.bind(this);\n    this.cellRenderer = this.cellRenderer.bind(this);\n    this.state = {\n      as: 'table',\n      columns: [{\n        label: 'Style',\n        width: '30%'\n      }, {\n        label: 'IBUs',\n        width: '20%'\n      }, {\n        label: 'Color (SRM)',\n        width: '20%'\n      }, {\n        label: 'Rating',\n        width: '20%'\n      }],\n      grid: [[{\n        value: 'Ordinary Bitter'\n      }, {\n        value: '20 - 35'\n      }, {\n        value: '5 - 12'\n      }, {\n        value: 4,\n        attributes: {\n          'data-foo': 'bar'\n        }\n      }], [{\n        value: 'Special Bitter'\n      }, {\n        value: '28 - 40'\n      }, {\n        value: '6 - 14'\n      }, {\n        value: 4\n      }], [{\n        value: 'ESB'\n      }, {\n        value: '30 - 45'\n      }, {\n        value: '6 - 14'\n      }, {\n        value: 5\n      }], [{\n        value: 'Scottish Light'\n      }, {\n        value: '9 - 20'\n      }, {\n        value: '6 - 15'\n      }, {\n        value: 3\n      }], [{\n        value: 'Scottish Heavy'\n      }, {\n        value: '12 - 20'\n      }, {\n        value: '8 - 30'\n      }, {\n        value: 4\n      }], [{\n        value: 'Scottish Export'\n      }, {\n        value: '15 - 25'\n      }, {\n        value: '9 - 19'\n      }, {\n        value: 4\n      }], [{\n        value: 'English Summer Ale'\n      }, {\n        value: '20 - 30'\n      }, {\n        value: '3 - 7'\n      }, {\n        value: 3\n      }], [{\n        value: 'English Pale Ale'\n      }, {\n        value: '20 - 40'\n      }, {\n        value: '5 - 12'\n      }, {\n        value: 4\n      }], [{\n        value: 'English IPA'\n      }, {\n        value: '35 - 63'\n      }, {\n        value: '6 - 14'\n      }, {\n        value: 4\n      }], [{\n        value: 'Strong Ale'\n      }, {\n        value: '30 - 65'\n      }, {\n        value: '8 - 21'\n      }, {\n        value: 4\n      }], [{\n        value: 'Old Ale'\n      }, {\n        value: '30 -65'\n      }, {\n        value: '12 - 30'\n      }, {\n        value: 4\n      }], [{\n        value: 'Pale Mild Ale'\n      }, {\n        value: '10 - 20'\n      }, {\n        value: '6 - 9'\n      }, {\n        value: 3\n      }], [{\n        value: 'Dark Mild Ale'\n      }, {\n        value: '10 - 24'\n      }, {\n        value: '17 - 34'\n      }, {\n        value: 3\n      }], [{\n        value: 'Brown Ale'\n      }, {\n        value: '12 - 25'\n      }, {\n        value: '12 - 17'\n      }, {\n        value: 3\n      }]],\n      selections: [false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n    };\n  }\n\n  handleSelect(e) {\n    this.setState({\n      as: e.target.value\n    });\n  }\n\n  handleSelectAllChanged(selected) {\n    const selections = this.state.selections.map(s => selected);\n    this.setState({\n      selections\n    });\n  }\n\n  handleSelectChanged(index, selected) {\n    const selections = [...this.state.selections];\n    selections[index] = selected;\n    this.setState({\n      selections\n    });\n  }\n\n  handleCellsChanged(changes, additions) {\n    const grid = this.state.grid.map(row => [...row]);\n    changes.forEach(({\n      cell,\n      row,\n      col,\n      value\n    }) => {\n      grid[row][col] = { ...grid[row][col],\n        value\n      };\n    }); // paste extended beyond end, so add a new row\n\n    additions && additions.forEach(({\n      cell,\n      row,\n      col,\n      value\n    }) => {\n      if (!grid[row]) {\n        grid[row] = [{\n          value: ''\n        }, {\n          value: ''\n        }, {\n          value: ''\n        }, {\n          value: 0\n        }];\n      }\n\n      if (grid[row][col]) {\n        grid[row][col] = { ...grid[row][col],\n          value\n        };\n      }\n    });\n    this.setState({\n      grid\n    });\n  }\n\n  sheetRenderer(props) {\n    const {\n      columns,\n      selections\n    } = this.state;\n\n    switch (this.state.as) {\n      case 'list':\n        return /*#__PURE__*/React.createElement(SheetRenderer, Object.assign({\n          columns: columns,\n          selections: selections,\n          onSelectAllChanged: this.handleSelectAllChanged,\n          as: \"segment\",\n          headerAs: \"div\",\n          bodyAs: \"ul\",\n          rowAs: \"div\",\n          cellAs: \"div\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 16\n          }\n        }));\n\n      case 'div':\n        return /*#__PURE__*/React.createElement(SheetRenderer, Object.assign({\n          columns: columns,\n          selections: selections,\n          onSelectAllChanged: this.handleSelectAllChanged,\n          as: \"div\",\n          headerAs: \"div\",\n          bodyAs: \"div\",\n          rowAs: \"div\",\n          cellAs: \"div\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 16\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(SheetRenderer, Object.assign({\n          columns: columns,\n          selections: selections,\n          onSelectAllChanged: this.handleSelectAllChanged,\n          as: \"table\",\n          headerAs: \"thead\",\n          bodyAs: \"tbody\",\n          rowAs: \"tr\",\n          cellAs: \"th\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 16\n          }\n        }));\n    }\n  }\n\n  rowRenderer(props) {\n    const {\n      selections\n    } = this.state;\n\n    switch (this.state.as) {\n      case 'list':\n        return /*#__PURE__*/React.createElement(RowRenderer, Object.assign({\n          as: \"li\",\n          cellAs: \"div\",\n          selected: selections[props.row],\n          onSelectChanged: this.handleSelectChanged,\n          className: \"data-row\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 16\n          }\n        }));\n\n      case 'div':\n        return /*#__PURE__*/React.createElement(RowRenderer, Object.assign({\n          as: \"div\",\n          cellAs: \"div\",\n          selected: selections[props.row],\n          onSelectChanged: this.handleSelectChanged,\n          className: \"data-row\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 16\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(RowRenderer, Object.assign({\n          as: \"tr\",\n          cellAs: \"td\",\n          selected: selections[props.row],\n          onSelectChanged: this.handleSelectChanged,\n          className: \"data-row\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 16\n          }\n        }));\n    }\n  }\n\n  cellRenderer(props) {\n    switch (this.state.as) {\n      case 'list':\n        return /*#__PURE__*/React.createElement(CellRenderer, Object.assign({\n          as: \"div\",\n          columns: this.state.columns\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 16\n          }\n        }));\n\n      case 'div':\n        return /*#__PURE__*/React.createElement(CellRenderer, Object.assign({\n          as: \"div\",\n          columns: this.state.columns\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 16\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(CellRenderer, Object.assign({\n          as: \"td\",\n          columns: this.state.columns\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 16\n          }\n        }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, \"Render with:\\xA0\", /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.as,\n      onChange: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, \"Table\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, \"List\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, \"Div\")))), /*#__PURE__*/React.createElement(DataSheet, {\n      data: this.state.grid,\n      className: \"custom-sheet\",\n      sheetRenderer: this.sheetRenderer,\n      headerRenderer: this.headerRenderer,\n      bodyRenderer: this.bodyRenderer,\n      rowRenderer: this.rowRenderer,\n      cellRenderer: this.cellRenderer,\n      onCellsChanged: this.handleCellsChanged,\n      valueRenderer: cell => cell.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/src/components/utility-boxes/gradeEntry/Table.js"],"names":["React","DataSheet","SheetRenderer","props","as","Tag","headerAs","Header","bodyAs","Body","rowAs","Row","cellAs","Cell","className","columns","selections","onSelectAllChanged","every","s","e","target","checked","map","column","width","label","children","RowRenderer","row","selected","onSelectChanged","CellRenderer","cell","col","attributesRenderer","editing","updated","style","rest","attributes","title","OverrideEverythingSheet","PureComponent","constructor","handleSelect","bind","handleSelectAllChanged","handleSelectChanged","handleCellsChanged","sheetRenderer","rowRenderer","cellRenderer","state","grid","value","setState","index","changes","additions","forEach","render","headerRenderer","bodyRenderer"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport DataSheet from 'react-datasheet'\r\nimport './gradeEntry.css'\r\n\r\nconst SheetRenderer = props => {\r\n  const {as: Tag, headerAs: Header, bodyAs: Body, rowAs: Row, cellAs: Cell,\r\n    className, columns, selections, onSelectAllChanged} = props\r\n  return (\r\n    <Tag className={className}>\r\n      <Header className='data-header'>\r\n        <Row>\r\n          <Cell className='action-cell cell'>\r\n            <input\r\n              type='checkbox'\r\n              checked={selections.every(s => s)}\r\n              onChange={e => onSelectAllChanged(e.target.checked)}\r\n            />\r\n          </Cell>\r\n          {columns.map(column => <Cell className='cell' style={{ width: column.width }} key={column.label}>{column.label}</Cell>)}\r\n        </Row>\r\n      </Header>\r\n      <Body className='data-body'>\r\n        {props.children}\r\n      </Body>\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst RowRenderer = props => {\r\n  const {as: Tag, cellAs: Cell, className, row, selected, onSelectChanged} = props\r\n  return (\r\n    <Tag className={className}>\r\n      <Cell className='action-cell cell'>\r\n        <input\r\n          type='checkbox'\r\n          checked={selected}\r\n          onChange={e => onSelectChanged(row, e.target.checked)}\r\n        />\r\n      </Cell>\r\n      {props.children}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CellRenderer = props => {\r\n  const {\r\n    as: Tag, cell, row, col, columns, attributesRenderer,\r\n    selected, editing, updated, style,\r\n    ...rest\r\n  } = props\r\n\r\n  // hey, how about some custom attributes on our cell?\r\n  const attributes = cell.attributes || {}\r\n  // ignore default style handed to us by the component and roll our own\r\n  attributes.style = { width: columns[col].width }\r\n  if (col === 0) {\r\n    attributes.title = cell.label\r\n  }\r\n\r\n  return (\r\n    <Tag {...rest} {...attributes}>\r\n      {props.children}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default class OverrideEverythingSheet extends PureComponent {\r\n  constructor (props) {\r\n    super(props)\r\n    this.handleSelect = this.handleSelect.bind(this)\r\n    this.handleSelectAllChanged = this.handleSelectAllChanged.bind(this)\r\n    this.handleSelectChanged = this.handleSelectChanged.bind(this)\r\n    this.handleCellsChanged = this.handleCellsChanged.bind(this)\r\n\r\n    this.sheetRenderer = this.sheetRenderer.bind(this)\r\n    this.rowRenderer = this.rowRenderer.bind(this)\r\n    this.cellRenderer = this.cellRenderer.bind(this)\r\n\r\n    this.state = {\r\n      as: 'table',\r\n      columns: [\r\n        { label: 'Style', width: '30%' },\r\n        { label: 'IBUs', width: '20%' },\r\n        { label: 'Color (SRM)', width: '20%' },\r\n        { label: 'Rating', width: '20%' }\r\n      ],\r\n      grid: [\r\n        [{ value: 'Ordinary Bitter' }, { value: '20 - 35' }, { value: '5 - 12' }, { value: 4, attributes: {'data-foo': 'bar' } }],\r\n        [{ value: 'Special Bitter' }, { value: '28 - 40' }, { value: '6 - 14' }, { value: 4 }],\r\n        [{ value: 'ESB' }, { value: '30 - 45' }, { value: '6 - 14' }, { value: 5 }],\r\n        [{ value: 'Scottish Light' }, { value: '9 - 20' }, { value: '6 - 15' }, { value: 3 }],\r\n        [{ value: 'Scottish Heavy' }, { value: '12 - 20' }, { value: '8 - 30' }, { value: 4 }],\r\n        [{ value: 'Scottish Export' }, { value: '15 - 25' }, { value: '9 - 19' }, { value: 4 }],\r\n        [{ value: 'English Summer Ale' }, { value: '20 - 30' }, { value: '3 - 7' }, { value: 3 }],\r\n        [{ value: 'English Pale Ale' }, { value: '20 - 40' }, { value: '5 - 12' }, { value: 4 }],\r\n        [{ value: 'English IPA' }, { value: '35 - 63' }, { value: '6 - 14' }, { value: 4 }],\r\n        [{ value: 'Strong Ale' }, { value: '30 - 65' }, { value: '8 - 21' }, { value: 4 }],\r\n        [{ value: 'Old Ale' }, { value: '30 -65' }, { value: '12 - 30' }, { value: 4 }],\r\n        [{ value: 'Pale Mild Ale' }, { value: '10 - 20' }, { value: '6 - 9' }, { value: 3 }],\r\n        [{ value: 'Dark Mild Ale' }, { value: '10 - 24' }, { value: '17 - 34' }, { value: 3 }],\r\n        [{ value: 'Brown Ale' }, { value: '12 - 25' }, { value: '12 - 17' }, { value: 3 }]\r\n      ],\r\n      selections: [false, false, false, false, false, false, false, false, false, false, false, false, false, false]\r\n    }\r\n  }\r\n\r\n  handleSelect (e) {\r\n    this.setState({as: e.target.value})\r\n  }\r\n\r\n  handleSelectAllChanged (selected) {\r\n    const selections = this.state.selections.map(s => selected)\r\n    this.setState({selections})\r\n  }\r\n\r\n  handleSelectChanged (index, selected) {\r\n    const selections = [...this.state.selections]\r\n    selections[index] = selected\r\n    this.setState({selections})\r\n  }\r\n\r\n  handleCellsChanged (changes, additions) {\r\n    const grid = this.state.grid.map(row => [...row])\r\n    changes.forEach(({cell, row, col, value}) => {\r\n      grid[row][col] = {...grid[row][col], value}\r\n    })\r\n    // paste extended beyond end, so add a new row\r\n    additions && additions.forEach(({cell, row, col, value}) => {\r\n      if (!grid[row]) {\r\n        grid[row] = [{value: ''}, {value: ''}, {value: ''}, {value: 0}]\r\n      }\r\n      if (grid[row][col]) {\r\n        grid[row][col] = {...grid[row][col], value}\r\n      }\r\n    })\r\n    this.setState({grid})\r\n  }\r\n\r\n  sheetRenderer (props) {\r\n    const {columns, selections} = this.state\r\n    switch (this.state.as) {\r\n      case 'list':\r\n        return <SheetRenderer columns={columns} selections={selections} onSelectAllChanged={this.handleSelectAllChanged} as='segment' headerAs='div' bodyAs='ul' rowAs='div' cellAs='div' {...props} />\r\n      case 'div':\r\n        return <SheetRenderer columns={columns} selections={selections} onSelectAllChanged={this.handleSelectAllChanged} as='div' headerAs='div' bodyAs='div' rowAs='div' cellAs='div' {...props} />\r\n      default:\r\n        return <SheetRenderer columns={columns} selections={selections} onSelectAllChanged={this.handleSelectAllChanged} as='table' headerAs='thead' bodyAs='tbody' rowAs='tr' cellAs='th' {...props} />\r\n    }\r\n  }\r\n\r\n  rowRenderer (props) {\r\n    const {selections} = this.state\r\n    switch (this.state.as) {\r\n      case 'list':\r\n        return <RowRenderer as='li' cellAs='div' selected={selections[props.row]} onSelectChanged={this.handleSelectChanged} className='data-row' {...props} />\r\n      case 'div':\r\n        return <RowRenderer as='div' cellAs='div' selected={selections[props.row]} onSelectChanged={this.handleSelectChanged} className='data-row' {...props} />\r\n      default:\r\n        return <RowRenderer as='tr' cellAs='td' selected={selections[props.row]} onSelectChanged={this.handleSelectChanged} className='data-row' {...props} />\r\n    }\r\n  }\r\n\r\n  cellRenderer (props) {\r\n    switch (this.state.as) {\r\n      case 'list':\r\n        return <CellRenderer as='div' columns={this.state.columns} {...props} />\r\n      case 'div':\r\n        return <CellRenderer as='div' columns={this.state.columns} {...props} />\r\n      default:\r\n        return <CellRenderer as='td' columns={this.state.columns} {...props} />\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <label>\r\n            Render with:&nbsp;\r\n            <select value={this.state.as} onChange={this.handleSelect}>\r\n              <option value='table'>Table</option>\r\n              <option value='list'>List</option>\r\n              <option value='div'>Div</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n\r\n        <DataSheet\r\n          data={this.state.grid}\r\n          className='custom-sheet'\r\n          sheetRenderer={this.sheetRenderer}\r\n          headerRenderer={this.headerRenderer}\r\n          bodyRenderer={this.bodyRenderer}\r\n          rowRenderer={this.rowRenderer}\r\n          cellRenderer={this.cellRenderer}\r\n          onCellsChanged={this.handleCellsChanged}\r\n          valueRenderer={(cell) => cell.value}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}