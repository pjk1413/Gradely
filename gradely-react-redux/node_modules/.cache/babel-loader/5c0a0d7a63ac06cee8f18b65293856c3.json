{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\GradeEntryTable.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport _ from 'lodash'; //import Datasheet from '../lib/DataSheet'\n\nimport { Datasheet } from 'react-datasheet';\nexport default class ComponentSheet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = [{\n      label: 'Bread',\n      value: 2.35\n    }, {\n      label: 'Berries',\n      value: 3.05\n    }, {\n      label: 'Milk',\n      value: 3.99\n    }, {\n      label: 'Apples',\n      value: 4.35\n    }, {\n      label: 'Chicken',\n      value: 9.95\n    }, {\n      label: 'Yoghurt',\n      value: 4.65\n    }, {\n      label: 'Onions',\n      value: 3.45\n    }, {\n      label: 'Salad',\n      value: 1.55\n    }];\n    this.state = {\n      grocery: {},\n      items: 3\n    };\n  }\n\n  generateGrid() {\n    const groceryValue = id => {\n      if (this.state.grocery[id]) {\n        const {\n          label,\n          value\n        } = this.state.grocery[id];\n        return `${label} (${value})`;\n      } else {\n        return '';\n      }\n    };\n\n    const component = id => {\n      return /*#__PURE__*/React.createElement(Select, {\n        autofocus: true,\n        openOnFocus: true,\n        value: this.state && this.state.grocery[id],\n        onChange: opt => this.setState({\n          grocery: _.assign(this.state.grocery, {\n            [id]: opt\n          })\n        }),\n        options: this.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      });\n    };\n\n    const total = _.reduce(_.values(this.state.grocery), (res, val, key) => {\n      res += val && val.value || 0;\n      return res;\n    }, 0);\n\n    let rows = [[{\n      readOnly: true,\n      colSpan: 2,\n      value: 'Shopping List'\n    }], [{\n      readOnly: true,\n      value: ''\n    }, {\n      value: 'Grocery Item',\n      component: /*#__PURE__*/React.createElement(\"div\", {\n        className: 'add-grocery',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, \" Grocery List\", /*#__PURE__*/React.createElement(\"div\", {\n        className: 'add-button',\n        onClick: () => {\n          console.log('add');\n          this.setState({\n            items: this.state.items + 1\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, \" add item\")),\n      forceComponent: true\n    }]];\n    rows = rows.concat(_.range(1, this.state.items + 1).map(id => [{\n      readOnly: true,\n      value: `Item ${id}`\n    }, {\n      value: groceryValue(id),\n      component: component(id)\n    }]));\n    rows = rows.concat([[{\n      readOnly: true,\n      value: 'Total'\n    }, {\n      readOnly: true,\n      value: `${total.toFixed(2)} $`\n    }]]);\n    console.log(rows);\n    return rows;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Datasheet, {\n      data: this.generateGrid(),\n      valueRenderer: cell => cell.value,\n      onChange: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/src/components/utility-boxes/gradeEntry/GradeEntryTable.js"],"names":["React","Select","_","Datasheet","ComponentSheet","Component","constructor","props","options","label","value","state","grocery","items","generateGrid","groceryValue","id","component","opt","setState","assign","total","reduce","values","res","val","key","rows","readOnly","colSpan","console","log","forceComponent","concat","range","map","toFixed","render","cell"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Select from 'react-select'\r\nimport _ from 'lodash'\r\n//import Datasheet from '../lib/DataSheet'\r\nimport { Datasheet } from 'react-datasheet';\r\n\r\nexport default class ComponentSheet extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.options = [\r\n      { label: 'Bread', value: 2.35 },\r\n      { label: 'Berries', value: 3.05 },\r\n      { label: 'Milk', value: 3.99 },\r\n      { label: 'Apples', value: 4.35 },\r\n      { label: 'Chicken', value: 9.95 },\r\n      { label: 'Yoghurt', value: 4.65 },\r\n      { label: 'Onions', value: 3.45 },\r\n      { label: 'Salad', value: 1.55 }\r\n    ]\r\n    this.state = {\r\n      grocery: {},\r\n      items: 3\r\n    }\r\n  }\r\n\r\n  generateGrid () {\r\n    const groceryValue = (id) => {\r\n      if (this.state.grocery[id]) {\r\n        const {label, value} = this.state.grocery[id]\r\n        return `${label} (${value})`\r\n      } else {\r\n        return ''\r\n      }\r\n    }\r\n    const component = (id) => {\r\n      return (\r\n        <Select\r\n          autofocus\r\n          openOnFocus\r\n          value={this.state && this.state.grocery[id]}\r\n          onChange={(opt) => this.setState({grocery: _.assign(this.state.grocery, {[id]: opt})})}\r\n          options={this.options}\r\n        />\r\n      )\r\n    }\r\n    const total = _.reduce(_.values(this.state.grocery), (res, val, key) => {\r\n      res += (val && val.value) || 0\r\n      return res\r\n    }, 0)\r\n    let rows = [\r\n      [{readOnly: true, colSpan: 2, value: 'Shopping List'}],\r\n      [\r\n        {readOnly: true, value: ''},\r\n        {\r\n          value: 'Grocery Item',\r\n          component: (\r\n            <div className={'add-grocery'}> Grocery List\r\n              <div className={'add-button'} onClick={() => { console.log('add'); this.setState({items: this.state.items + 1}) }}> add item</div>\r\n            </div>\r\n          ),\r\n          forceComponent: true\r\n        }]\r\n    ]\r\n    rows = rows.concat(_.range(1, this.state.items + 1).map(id => [{readOnly: true, value: `Item ${id}`}, {value: groceryValue(id), component: component(id)}]))\r\n\r\n    rows = rows.concat([[{readOnly: true, value: 'Total'}, {readOnly: true, value: `${total.toFixed(2)} $`}]])\r\n    console.log(rows)\r\n    return rows\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Datasheet\r\n        data={this.generateGrid()}\r\n        valueRenderer={(cell) => cell.value}\r\n        onChange={() => {}}\r\n      />\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}