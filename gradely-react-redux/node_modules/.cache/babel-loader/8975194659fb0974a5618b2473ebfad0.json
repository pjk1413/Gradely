{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport BasePlugin from '../_base';\nimport { addClass, removeClass } from '../../helpers/dom/element';\nimport { rangeEach } from '../../helpers/number';\nimport { arrayEach, arrayMap } from '../../helpers/array';\nimport { registerPlugin } from '../../plugins';\nimport Hooks from '../../pluginHooks';\nimport hideRowItem from './contextMenuItem/hideRow';\nimport showRowItem from './contextMenuItem/showRow';\nHooks.getSingleton().register('beforeHideRows');\nHooks.getSingleton().register('afterHideRows');\nHooks.getSingleton().register('beforeUnhideRows');\nHooks.getSingleton().register('afterUnhideRows');\n/**\n * @plugin HiddenRows\n *\n * @description\n * Plugin allows to hide certain rows. The hiding is achieved by rendering the rows with height set as 0px.\n * The plugin not modifies the source data and do not participate in data transformation (the shape of data returned\n * by `getData*` methods stays intact).\n *\n * Possible plugin settings:\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\n *  * `rows` as `Array`\n *  * `indicators` as `Boolean` (default `false`)\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   date: getData(),\n *   hiddenRows: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     rows: [1, 2, 5]\n *   }\n * });\n *\n * // access to hiddenRows plugin instance\n * const hiddenRowsPlugin = hot.getPlugin('hiddenRows');\n *\n * // show single row\n * hiddenRowsPlugin.showRow(1);\n *\n * // show multiple rows\n * hiddenRowsPlugin.showRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.showRows([1, 2, 9]);\n *\n * // hide single row\n * hiddenRowsPlugin.hideRow(1);\n *\n * // hide multiple rows\n * hiddenRowsPlugin.hideRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.hideRows([1, 2, 9]);\n *\n * // rerender the table to see all changes\n * hot.render();\n * ```\n */\n\nvar HiddenRows = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(HiddenRows, _BasePlugin);\n\n  function HiddenRows(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, HiddenRows);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HiddenRows).call(this, hotInstance));\n    /**\n     * Cached settings from Handsontable settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.settings = {};\n    /**\n     * List of hidden rows indexes.\n     *\n     * @private\n     * @type {Number[]}\n     */\n\n    _this.hiddenRows = [];\n    /**\n     * Last selected row index.\n     *\n     * @private\n     * @type {Number}\n     * @default -1\n     */\n\n    _this.lastSelectedRow = -1;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link HiddenRows#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(HiddenRows, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().hiddenRows;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (this.hot.hasRowHeaders()) {\n        this.addHook('afterGetRowHeader', function (row, TH) {\n          return _this2.onAfterGetRowHeader(row, TH);\n        });\n      } else {\n        this.addHook('afterRenderer', function (TD, row) {\n          return _this2.onAfterGetRowHeader(row, TD);\n        });\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.onModifyRowHeight(height, row);\n      });\n      this.addHook('beforeSetRangeStartOnly', function (coords) {\n        return _this2.onBeforeSetRangeStartOnly(coords);\n      });\n      this.addHook('beforeSetRangeStart', function (coords) {\n        return _this2.onBeforeSetRangeStart(coords);\n      });\n      this.addHook('beforeSetRangeEnd', function (coords) {\n        return _this2.onBeforeSetRangeEnd(coords);\n      });\n      this.addHook('hiddenRow', function (row) {\n        return _this2.isHidden(row);\n      });\n      this.addHook('afterCreateRow', function (index, amount) {\n        return _this2.onAfterCreateRow(index, amount);\n      });\n      this.addHook('afterRemoveRow', function (index, amount) {\n        return _this2.onAfterRemoveRow(index, amount);\n      });\n      this.addHook('init', function () {\n        return _this2.onInit();\n      }); // Dirty workaround - the section below runs only if the HOT instance is already prepared.\n\n      if (this.hot.view) {\n        this.onInit();\n      }\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.onInit();\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.settings = {};\n      this.hiddenRows = [];\n      this.lastSelectedRow = -1;\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"disablePlugin\", this).call(this);\n\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the rows provided in the array.\n     *\n     * @param {Number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"showRows\",\n    value: function showRows(rows) {\n      var _this3 = this;\n\n      var currentHideConfig = this.hiddenRows;\n      var validRows = this.isRowDataValid(rows);\n      var physicalRows = arrayMap(rows, function (visualRowIndex) {\n        return _this3.hot.toPhysicalRow(visualRowIndex);\n      });\n      var destinationHideConfig = currentHideConfig;\n\n      if (validRows) {\n        destinationHideConfig = this.hiddenRows.filter(function (hiddenRow) {\n          return physicalRows.includes(hiddenRow) === false;\n        });\n      }\n\n      var continueHiding = this.hot.runHooks('beforeUnhideRows', currentHideConfig, destinationHideConfig, validRows);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validRows) {\n        this.hiddenRows = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterUnhideRows', currentHideConfig, destinationHideConfig, validRows, validRows && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows the row provided as row index (counting from 0).\n     *\n     * @param {...Number} row Visual row index.\n     */\n\n  }, {\n    key: \"showRow\",\n    value: function showRow() {\n      for (var _len = arguments.length, row = new Array(_len), _key = 0; _key < _len; _key++) {\n        row[_key] = arguments[_key];\n      }\n\n      this.showRows(row);\n    }\n    /**\n     * Hides the rows provided in the array.\n     *\n     * @param {Number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"hideRows\",\n    value: function hideRows(rows) {\n      var _this4 = this;\n\n      var currentHideConfig = this.hiddenRows;\n      var validRows = this.isRowDataValid(rows);\n      var physicalRows = arrayMap(rows, function (visualRowIndex) {\n        return _this4.hot.toPhysicalRow(visualRowIndex);\n      });\n      var destinationHideConfig = currentHideConfig;\n\n      if (validRows) {\n        // Creating unique list of indexes.\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(physicalRows)));\n      }\n\n      var continueHiding = this.hot.runHooks('beforeHideRows', currentHideConfig, destinationHideConfig, validRows);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validRows) {\n        this.hiddenRows = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterHideRows', currentHideConfig, destinationHideConfig, validRows, validRows && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides the row provided as row index (counting from 0).\n     *\n     * @param {...Number} row Visual row index.\n     */\n\n  }, {\n    key: \"hideRow\",\n    value: function hideRow() {\n      for (var _len2 = arguments.length, row = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        row[_key2] = arguments[_key2];\n      }\n\n      this.hideRows(row);\n    }\n    /**\n     * Checks if given row is hidden.\n     *\n     * @param {Number} row Row index.\n     * @param {Boolean} isPhysicalIndex flag which determines type of index.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(row) {\n      var isPhysicalIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var physicalRow = row;\n\n      if (!isPhysicalIndex) {\n        physicalRow = this.hot.toPhysicalRow(row);\n      }\n\n      return this.hiddenRows.includes(physicalRow);\n    }\n    /**\n     * Check whether all of the provided row indexes are within the bounds of the table.\n     *\n     * @param {Array} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"isRowDataValid\",\n    value: function isRowDataValid(rows) {\n      var _this5 = this;\n\n      return rows.every(function (row) {\n        return Number.isInteger(row) && row >= 0 && row < _this5.hot.countRows();\n      });\n    }\n    /**\n     * Resets all rendered cells meta.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipRowOnPaste = false;\n        }\n      });\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {Number} col Column index.\n     * @param {Object} cellProperties Cell meta object properties.\n     *\n     * @fires Hooks#unmodifyRow\n     */\n\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, col, cellProperties) {\n      var visualRow = this.hot.runHooks('unmodifyRow', row);\n\n      if (this.settings.copyPasteEnabled === false && this.isHidden(visualRow)) {\n        cellProperties.skipRowOnPaste = true;\n      } else {\n        cellProperties.skipRowOnPaste = false;\n      }\n\n      if (this.isHidden(visualRow - 1)) {\n        var firstSectionHidden = true;\n        var i = visualRow - 1;\n        cellProperties.className = cellProperties.className || '';\n\n        if (cellProperties.className.indexOf('afterHiddenRow') === -1) {\n          cellProperties.className += ' afterHiddenRow';\n        }\n\n        do {\n          if (!this.isHidden(i)) {\n            firstSectionHidden = false;\n            break;\n          }\n\n          i -= 1;\n        } while (i >= 0);\n\n        if (firstSectionHidden && cellProperties.className.indexOf('firstVisibleRow') === -1) {\n          cellProperties.className += ' firstVisibleRow';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n\n        if (classArr.length) {\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenRow');\n\n          if (containAfterHiddenColumn > -1) {\n            classArr.splice(containAfterHiddenColumn, 1);\n          }\n\n          var containFirstVisible = classArr.indexOf('firstVisibleRow');\n\n          if (containFirstVisible > -1) {\n            classArr.splice(containFirstVisible, 1);\n          }\n\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {HTMLElement} th Table header element.\n     */\n\n  }, {\n    key: \"onAfterGetRowHeader\",\n    value: function onAfterGetRowHeader(row, th) {\n      var tr = th.parentNode;\n\n      if (tr) {\n        if (this.isHidden(row)) {\n          addClass(tr, 'hide');\n        } else {\n          removeClass(tr, 'hide');\n        }\n      }\n\n      var firstSectionHidden = true;\n      var i = row - 1;\n\n      do {\n        if (!this.isHidden(i)) {\n          firstSectionHidden = false;\n          break;\n        }\n\n        i -= 1;\n      } while (i >= 0);\n\n      if (firstSectionHidden) {\n        addClass(th, 'firstVisibleRow');\n      }\n\n      if (this.settings.indicators && this.hot.hasRowHeaders()) {\n        if (this.isHidden(row - 1)) {\n          addClass(th, 'afterHiddenRow');\n        }\n\n        if (this.isHidden(row + 1)) {\n          addClass(th, 'beforeHiddenRow');\n        }\n      }\n    }\n    /**\n     * Adds the additional row height for the hidden row indicators.\n     *\n     * @private\n     * @param {Number} height Row height.\n     * @param {Number} row Row index.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onModifyRowHeight\",\n    value: function onModifyRowHeight(height, row) {\n      if (this.isHidden(row)) {\n        return 0.1;\n      }\n\n      return height;\n    }\n    /**\n     * On modify copyable range listener.\n     *\n     * @private\n     * @param {Array} ranges Array of selected copyable text.\n     * @returns {Array} Returns modyfied range.\n     */\n\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this6 = this;\n\n      var newRanges = [];\n\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (_this6.isHidden(row)) {\n            if (!isHidden) {\n              pushRange(rangeStart, row - 1, range.startCol, range.endCol);\n            }\n\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = row;\n            }\n\n            if (row === range.endRow) {\n              pushRange(rangeStart, row, range.startCol, range.endCol);\n            }\n\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * On before set range start listener, when selection was triggered by the cell.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeStart\",\n    value: function onBeforeSetRangeStart(coords) {\n      var _this7 = this;\n\n      var actualSelection = this.hot.getSelectedLast() || false;\n      var lastPossibleIndex = this.hot.countRows() - 1;\n\n      var getNextRow = function getNextRow(row) {\n        var direction = 0;\n        var visualRow = row;\n\n        if (actualSelection) {\n          direction = visualRow > actualSelection[0] ? 1 : -1;\n          _this7.lastSelectedRow = actualSelection[0];\n        }\n\n        if (lastPossibleIndex < visualRow || visualRow < 0) {\n          return _this7.lastSelectedRow;\n        }\n\n        if (_this7.isHidden(visualRow)) {\n          visualRow = getNextRow(visualRow + direction);\n        }\n\n        return visualRow;\n      };\n\n      coords.row = getNextRow(coords.row);\n    }\n    /**\n     * On before set range start listener, when selection was triggered by the headers.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeStartOnly\",\n    value: function onBeforeSetRangeStartOnly(coords) {\n      var _this8 = this;\n\n      if (coords.row > 0) {\n        return;\n      }\n\n      coords.row = 0;\n\n      var getNextRow = function getNextRow(row) {\n        var visualRow = row;\n\n        if (_this8.isHidden(visualRow)) {\n          visualRow += 1;\n          visualRow = getNextRow(visualRow);\n        }\n\n        return visualRow;\n      };\n\n      coords.row = getNextRow(coords.row);\n    }\n    /**\n     * On before set range end listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeEnd\",\n    value: function onBeforeSetRangeEnd(coords) {\n      var _this9 = this;\n\n      var rowCount = this.hot.countRows();\n\n      var getNextRow = function getNextRow(row) {\n        var visualRow = row;\n\n        if (_this9.isHidden(visualRow)) {\n          if (_this9.lastSelectedRow > visualRow || coords.row === rowCount - 1) {\n            if (visualRow > 0) {\n              visualRow -= 1;\n              visualRow = getNextRow(visualRow);\n            } else {\n              rangeEach(0, _this9.lastSelectedRow, function (i) {\n                if (!_this9.isHidden(i)) {\n                  visualRow = i;\n                  return false;\n                }\n              });\n            }\n          } else {\n            visualRow += 1;\n            visualRow = getNextRow(visualRow);\n          }\n        }\n\n        return visualRow;\n      };\n\n      coords.row = getNextRow(coords.row);\n      this.lastSelectedRow = coords.row;\n    }\n    /**\n     * Adds Show-hide columns to context menu.\n     *\n     * @private\n     * @param {Object} options\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: '---------'\n      }, hideRowItem(this), showRowItem(this));\n    }\n    /**\n     * Recalculates index of hidden rows after add row action\n     *\n     * @private\n     * @param {Number} index\n     * @param {Number} amount\n     */\n\n  }, {\n    key: \"onAfterCreateRow\",\n    value: function onAfterCreateRow(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenRows, function (row) {\n        var visualRow = row;\n\n        if (visualRow >= index) {\n          visualRow += amount;\n        }\n\n        tempHidden.push(visualRow);\n      });\n      this.hiddenRows = tempHidden;\n    }\n    /**\n     * Recalculates index of hidden rows after remove row action\n     *\n     * @private\n     * @param {Number} index\n     * @param {Number} amount\n     */\n\n  }, {\n    key: \"onAfterRemoveRow\",\n    value: function onAfterRemoveRow(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenRows, function (row) {\n        var visualRow = row;\n\n        if (visualRow >= index) {\n          visualRow -= amount;\n        }\n\n        tempHidden.push(visualRow);\n      });\n      this.hiddenRows = tempHidden;\n    }\n    /**\n     * `afterPluginsInitialized` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onInit\",\n    value: function onInit() {\n      var _this10 = this;\n\n      var settings = this.hot.getSettings().hiddenRows;\n\n      if (_typeof(settings) === 'object') {\n        this.settings = settings;\n\n        if (settings.copyPasteEnabled === void 0) {\n          settings.copyPasteEnabled = true;\n        }\n\n        if (Array.isArray(settings.rows)) {\n          this.hideRows(settings.rows);\n        }\n\n        if (!settings.copyPasteEnabled) {\n          this.addHook('modifyCopyableRange', function (ranges) {\n            return _this10.onModifyCopyableRange(ranges);\n          });\n        }\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(HiddenRows.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return HiddenRows;\n}(BasePlugin);\n\nregisterPlugin('hiddenRows', HiddenRows);\nexport default HiddenRows;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/plugins/hiddenRows/hiddenRows.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","value","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","addClass","removeClass","rangeEach","arrayEach","arrayMap","registerPlugin","Hooks","hideRowItem","showRowItem","getSingleton","register","HiddenRows","_BasePlugin","hotInstance","_this","settings","hiddenRows","lastSelectedRow","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","hasRowHeaders","addHook","row","TH","onAfterGetRowHeader","TD","options","onAfterContextMenuDefaultOptions","col","cellProperties","onAfterGetCellMeta","height","onModifyRowHeight","coords","onBeforeSetRangeStartOnly","onBeforeSetRangeStart","onBeforeSetRangeEnd","isHidden","index","amount","onAfterCreateRow","onAfterRemoveRow","onInit","view","updatePlugin","disablePlugin","resetCellsMeta","showRows","rows","_this3","currentHideConfig","validRows","isRowDataValid","physicalRows","visualRowIndex","toPhysicalRow","destinationHideConfig","filter","hiddenRow","includes","continueHiding","runHooks","showRow","_len","arguments","Array","_key","hideRows","_this4","from","Set","concat","hideRow","_len2","_key2","isPhysicalIndex","undefined","physicalRow","_this5","every","Number","isInteger","countRows","getCellsMeta","meta","skipRowOnPaste","visualRow","copyPasteEnabled","firstSectionHidden","className","indexOf","classArr","split","containAfterHiddenColumn","splice","containFirstVisible","join","th","tr","parentNode","indicators","onModifyCopyableRange","ranges","_this6","newRanges","pushRange","startRow","endRow","startCol","endCol","push","range","rangeStart","_this7","actualSelection","getSelectedLast","lastPossibleIndex","getNextRow","direction","_this8","_this9","rowCount","items","name","tempHidden","_this10","isArray","destroy"],"mappings":"AA0BA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1X,SAASK,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,QAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4BC,IAAAA,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;AAA4D;AAAE;;AAE7T,SAASO,YAAT,CAAsBd,WAAtB,EAAmCe,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBb,iBAAiB,CAACF,WAAW,CAACH,SAAb,EAAwBkB,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBd,iBAAiB,CAACF,WAAD,EAAcgB,WAAd,CAAjB;AAA6C,SAAOhB,WAAP;AAAqB;;AAEvN,SAASiB,0BAAT,CAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;AAAE,MAAIA,IAAI,KAAK3B,OAAO,CAAC2B,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAP,KAAgB,UAAnD,CAAR,EAAwE;AAAE,WAAOA,IAAP;AAAc;;AAAC,SAAOC,sBAAsB,CAACF,IAAD,CAA7B;AAAsC;;AAEjL,SAASE,sBAAT,CAAgCF,IAAhC,EAAsC;AAAE,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAE,UAAM,IAAIG,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOH,IAAP;AAAc;;AAEtK,SAASI,IAAT,CAAcnB,MAAd,EAAsBoB,QAAtB,EAAgCC,QAAhC,EAA0C;AAAE,MAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,GAA9C,EAAmD;AAAEJ,IAAAA,IAAI,GAAGG,OAAO,CAACC,GAAf;AAAqB,GAA1E,MAAgF;AAAEJ,IAAAA,IAAI,GAAG,SAASA,IAAT,CAAcnB,MAAd,EAAsBoB,QAAtB,EAAgCC,QAAhC,EAA0C;AAAE,UAAIG,IAAI,GAAGC,cAAc,CAACzB,MAAD,EAASoB,QAAT,CAAzB;;AAA6C,UAAI,CAACI,IAAL,EAAW;AAAQ,UAAIE,IAAI,GAAGlB,MAAM,CAACmB,wBAAP,CAAgCH,IAAhC,EAAsCJ,QAAtC,CAAX;;AAA4D,UAAIM,IAAI,CAACH,GAAT,EAAc;AAAE,eAAOG,IAAI,CAACH,GAAL,CAASP,IAAT,CAAcK,QAAd,CAAP;AAAiC;;AAAC,aAAOK,IAAI,CAACE,KAAZ;AAAoB,KAArP;AAAwP;;AAAC,SAAOT,IAAI,CAACnB,MAAD,EAASoB,QAAT,EAAmBC,QAAQ,IAAIrB,MAA/B,CAAX;AAAoD;;AAE3a,SAASyB,cAAT,CAAwBI,MAAxB,EAAgCT,QAAhC,EAA0C;AAAE,SAAO,CAACZ,MAAM,CAACd,SAAP,CAAiBoC,cAAjB,CAAgCd,IAAhC,CAAqCa,MAArC,EAA6CT,QAA7C,CAAR,EAAgE;AAAES,IAAAA,MAAM,GAAGE,eAAe,CAACF,MAAD,CAAxB;AAAkC,QAAIA,MAAM,KAAK,IAAf,EAAqB;AAAQ;;AAAC,SAAOA,MAAP;AAAgB;;AAE9L,SAASE,eAAT,CAAyBC,CAAzB,EAA4B;AAAED,EAAAA,eAAe,GAAGvB,MAAM,CAACyB,cAAP,GAAwBzB,MAAM,CAAC0B,cAA/B,GAAgD,SAASH,eAAT,CAAyBC,CAAzB,EAA4B;AAAE,WAAOA,CAAC,CAACG,SAAF,IAAe3B,MAAM,CAAC0B,cAAP,CAAsBF,CAAtB,CAAtB;AAAiD,GAAjJ;AAAmJ,SAAOD,eAAe,CAACC,CAAD,CAAtB;AAA4B;;AAE7M,SAASI,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIxC,SAAJ,CAAc,oDAAd,CAAN;AAA4E;;AAACuC,EAAAA,QAAQ,CAAC3C,SAAT,GAAqBc,MAAM,CAAC+B,MAAP,CAAcD,UAAU,IAAIA,UAAU,CAAC5C,SAAvC,EAAkD;AAAED,IAAAA,WAAW,EAAE;AAAEmC,MAAAA,KAAK,EAAES,QAAT;AAAmB9B,MAAAA,QAAQ,EAAE,IAA7B;AAAmCD,MAAAA,YAAY,EAAE;AAAjD;AAAf,GAAlD,CAArB;AAAkJ,MAAIgC,UAAJ,EAAgBE,eAAe,CAACH,QAAD,EAAWC,UAAX,CAAf;AAAwC;;AAEjY,SAASE,eAAT,CAAyBR,CAAzB,EAA4BS,CAA5B,EAA+B;AAAED,EAAAA,eAAe,GAAGhC,MAAM,CAACyB,cAAP,IAAyB,SAASO,eAAT,CAAyBR,CAAzB,EAA4BS,CAA5B,EAA+B;AAAET,IAAAA,CAAC,CAACG,SAAF,GAAcM,CAAd;AAAiB,WAAOT,CAAP;AAAW,GAAxG;;AAA0G,SAAOQ,eAAe,CAACR,CAAD,EAAIS,CAAJ,CAAtB;AAA+B;;AAE1K,OAAOC,UAAP,MAAuB,UAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,2BAAtC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,qBAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACAF,KAAK,CAACG,YAAN,GAAqBC,QAArB,CAA8B,gBAA9B;AACAJ,KAAK,CAACG,YAAN,GAAqBC,QAArB,CAA8B,eAA9B;AACAJ,KAAK,CAACG,YAAN,GAAqBC,QAArB,CAA8B,kBAA9B;AACAJ,KAAK,CAACG,YAAN,GAAqBC,QAArB,CAA8B,iBAA9B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,IAAIC,UAAU,GACd,aACA,UAAUC,WAAV,EAAuB;AACrBnB,EAAAA,SAAS,CAACkB,UAAD,EAAaC,WAAb,CAAT;;AAEA,WAASD,UAAT,CAAoBE,WAApB,EAAiC;AAC/B,QAAIC,KAAJ;;AAEA9D,IAAAA,eAAe,CAAC,IAAD,EAAO2D,UAAP,CAAf;;AAEAG,IAAAA,KAAK,GAAG3C,0BAA0B,CAAC,IAAD,EAAOiB,eAAe,CAACuB,UAAD,CAAf,CAA4BtC,IAA5B,CAAiC,IAAjC,EAAuCwC,WAAvC,CAAP,CAAlC;AACA;;;;;;;AAOAC,IAAAA,KAAK,CAACC,QAAN,GAAiB,EAAjB;AACA;;;;;;;AAOAD,IAAAA,KAAK,CAACE,UAAN,GAAmB,EAAnB;AACA;;;;;;;;AAQAF,IAAAA,KAAK,CAACG,eAAN,GAAwB,CAAC,CAAzB;AACA,WAAOH,KAAP;AACD;AACD;;;;;;;;AAQA9C,EAAAA,YAAY,CAAC2C,UAAD,EAAa,CAAC;AACxB5C,IAAAA,GAAG,EAAE,WADmB;AAExBkB,IAAAA,KAAK,EAAE,SAASiC,SAAT,GAAqB;AAC1B,aAAO,CAAC,CAAC,KAAKC,GAAL,CAASC,WAAT,GAAuBJ,UAAhC;AACD;AACD;;;;AALwB,GAAD,EAStB;AACDjD,IAAAA,GAAG,EAAE,cADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASoC,YAAT,GAAwB;AAC7B,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAI,KAAKC,OAAT,EAAkB;AAChB;AACD;;AAED,UAAI,KAAKJ,GAAL,CAASK,aAAT,EAAJ,EAA8B;AAC5B,aAAKC,OAAL,CAAa,mBAAb,EAAkC,UAAUC,GAAV,EAAeC,EAAf,EAAmB;AACnD,iBAAOL,MAAM,CAACM,mBAAP,CAA2BF,GAA3B,EAAgCC,EAAhC,CAAP;AACD,SAFD;AAGD,OAJD,MAIO;AACL,aAAKF,OAAL,CAAa,eAAb,EAA8B,UAAUI,EAAV,EAAcH,GAAd,EAAmB;AAC/C,iBAAOJ,MAAM,CAACM,mBAAP,CAA2BF,GAA3B,EAAgCG,EAAhC,CAAP;AACD,SAFD;AAGD;;AAED,WAAKJ,OAAL,CAAa,gCAAb,EAA+C,UAAUK,OAAV,EAAmB;AAChE,eAAOR,MAAM,CAACS,gCAAP,CAAwCD,OAAxC,CAAP;AACD,OAFD;AAGA,WAAKL,OAAL,CAAa,kBAAb,EAAiC,UAAUC,GAAV,EAAeM,GAAf,EAAoBC,cAApB,EAAoC;AACnE,eAAOX,MAAM,CAACY,kBAAP,CAA0BR,GAA1B,EAA+BM,GAA/B,EAAoCC,cAApC,CAAP;AACD,OAFD;AAGA,WAAKR,OAAL,CAAa,iBAAb,EAAgC,UAAUU,MAAV,EAAkBT,GAAlB,EAAuB;AACrD,eAAOJ,MAAM,CAACc,iBAAP,CAAyBD,MAAzB,EAAiCT,GAAjC,CAAP;AACD,OAFD;AAGA,WAAKD,OAAL,CAAa,yBAAb,EAAwC,UAAUY,MAAV,EAAkB;AACxD,eAAOf,MAAM,CAACgB,yBAAP,CAAiCD,MAAjC,CAAP;AACD,OAFD;AAGA,WAAKZ,OAAL,CAAa,qBAAb,EAAoC,UAAUY,MAAV,EAAkB;AACpD,eAAOf,MAAM,CAACiB,qBAAP,CAA6BF,MAA7B,CAAP;AACD,OAFD;AAGA,WAAKZ,OAAL,CAAa,mBAAb,EAAkC,UAAUY,MAAV,EAAkB;AAClD,eAAOf,MAAM,CAACkB,mBAAP,CAA2BH,MAA3B,CAAP;AACD,OAFD;AAGA,WAAKZ,OAAL,CAAa,WAAb,EAA0B,UAAUC,GAAV,EAAe;AACvC,eAAOJ,MAAM,CAACmB,QAAP,CAAgBf,GAAhB,CAAP;AACD,OAFD;AAGA,WAAKD,OAAL,CAAa,gBAAb,EAA+B,UAAUiB,KAAV,EAAiBC,MAAjB,EAAyB;AACtD,eAAOrB,MAAM,CAACsB,gBAAP,CAAwBF,KAAxB,EAA+BC,MAA/B,CAAP;AACD,OAFD;AAGA,WAAKlB,OAAL,CAAa,gBAAb,EAA+B,UAAUiB,KAAV,EAAiBC,MAAjB,EAAyB;AACtD,eAAOrB,MAAM,CAACuB,gBAAP,CAAwBH,KAAxB,EAA+BC,MAA/B,CAAP;AACD,OAFD;AAGA,WAAKlB,OAAL,CAAa,MAAb,EAAqB,YAAY;AAC/B,eAAOH,MAAM,CAACwB,MAAP,EAAP;AACD,OAFD,EA5C6B,CA8CzB;;AAEJ,UAAI,KAAK3B,GAAL,CAAS4B,IAAb,EAAmB;AACjB,aAAKD,MAAL;AACD;;AAEDtE,MAAAA,IAAI,CAACY,eAAe,CAACuB,UAAU,CAAC5D,SAAZ,CAAhB,EAAwC,cAAxC,EAAwD,IAAxD,CAAJ,CAAkEsB,IAAlE,CAAuE,IAAvE;AACD;AACD;;;;AAxDC,GATsB,EAqEtB;AACDN,IAAAA,GAAG,EAAE,cADJ;AAEDkB,IAAAA,KAAK,EAAE,SAAS+D,YAAT,GAAwB;AAC7B,WAAKC,aAAL;AACA,WAAK5B,YAAL;AACA,WAAKyB,MAAL;;AAEAtE,MAAAA,IAAI,CAACY,eAAe,CAACuB,UAAU,CAAC5D,SAAZ,CAAhB,EAAwC,cAAxC,EAAwD,IAAxD,CAAJ,CAAkEsB,IAAlE,CAAuE,IAAvE;AACD;AACD;;;;AATC,GArEsB,EAkFtB;AACDN,IAAAA,GAAG,EAAE,eADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASgE,aAAT,GAAyB;AAC9B,WAAKlC,QAAL,GAAgB,EAAhB;AACA,WAAKC,UAAL,GAAkB,EAAlB;AACA,WAAKC,eAAL,GAAuB,CAAC,CAAxB;;AAEAzC,MAAAA,IAAI,CAACY,eAAe,CAACuB,UAAU,CAAC5D,SAAZ,CAAhB,EAAwC,eAAxC,EAAyD,IAAzD,CAAJ,CAAmEsB,IAAnE,CAAwE,IAAxE;;AAEA,WAAK6E,cAAL;AACD;AACD;;;;;;AAXC,GAlFsB,EAmGtB;AACDnF,IAAAA,GAAG,EAAE,UADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASkE,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAIC,iBAAiB,GAAG,KAAKtC,UAA7B;AACA,UAAIuC,SAAS,GAAG,KAAKC,cAAL,CAAoBJ,IAApB,CAAhB;AACA,UAAIK,YAAY,GAAGrD,QAAQ,CAACgD,IAAD,EAAO,UAAUM,cAAV,EAA0B;AAC1D,eAAOL,MAAM,CAAClC,GAAP,CAAWwC,aAAX,CAAyBD,cAAzB,CAAP;AACD,OAF0B,CAA3B;AAGA,UAAIE,qBAAqB,GAAGN,iBAA5B;;AAEA,UAAIC,SAAJ,EAAe;AACbK,QAAAA,qBAAqB,GAAG,KAAK5C,UAAL,CAAgB6C,MAAhB,CAAuB,UAAUC,SAAV,EAAqB;AAClE,iBAAOL,YAAY,CAACM,QAAb,CAAsBD,SAAtB,MAAqC,KAA5C;AACD,SAFuB,CAAxB;AAGD;;AAED,UAAIE,cAAc,GAAG,KAAK7C,GAAL,CAAS8C,QAAT,CAAkB,kBAAlB,EAAsCX,iBAAtC,EAAyDM,qBAAzD,EAAgFL,SAAhF,CAArB;;AAEA,UAAIS,cAAc,KAAK,KAAvB,EAA8B;AAC5B;AACD;;AAED,UAAIT,SAAJ,EAAe;AACb,aAAKvC,UAAL,GAAkB4C,qBAAlB;AACD;;AAED,WAAKzC,GAAL,CAAS8C,QAAT,CAAkB,iBAAlB,EAAqCX,iBAArC,EAAwDM,qBAAxD,EAA+EL,SAA/E,EAA0FA,SAAS,IAAIK,qBAAqB,CAACpG,MAAtB,GAA+B8F,iBAAiB,CAAC9F,MAAxJ;AACD;AACD;;;;;;AA9BC,GAnGsB,EAuItB;AACDO,IAAAA,GAAG,EAAE,SADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASiF,OAAT,GAAmB;AACxB,WAAK,IAAIC,IAAI,GAAGC,SAAS,CAAC5G,MAArB,EAA6BkE,GAAG,GAAG,IAAI2C,KAAJ,CAAUF,IAAV,CAAnC,EAAoDG,IAAI,GAAG,CAAhE,EAAmEA,IAAI,GAAGH,IAA1E,EAAgFG,IAAI,EAApF,EAAwF;AACtF5C,QAAAA,GAAG,CAAC4C,IAAD,CAAH,GAAYF,SAAS,CAACE,IAAD,CAArB;AACD;;AAED,WAAKnB,QAAL,CAAczB,GAAd;AACD;AACD;;;;;;AATC,GAvIsB,EAsJtB;AACD3D,IAAAA,GAAG,EAAE,UADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASsF,QAAT,CAAkBnB,IAAlB,EAAwB;AAC7B,UAAIoB,MAAM,GAAG,IAAb;;AAEA,UAAIlB,iBAAiB,GAAG,KAAKtC,UAA7B;AACA,UAAIuC,SAAS,GAAG,KAAKC,cAAL,CAAoBJ,IAApB,CAAhB;AACA,UAAIK,YAAY,GAAGrD,QAAQ,CAACgD,IAAD,EAAO,UAAUM,cAAV,EAA0B;AAC1D,eAAOc,MAAM,CAACrD,GAAP,CAAWwC,aAAX,CAAyBD,cAAzB,CAAP;AACD,OAF0B,CAA3B;AAGA,UAAIE,qBAAqB,GAAGN,iBAA5B;;AAEA,UAAIC,SAAJ,EAAe;AACb;AACAK,QAAAA,qBAAqB,GAAGS,KAAK,CAACI,IAAN,CAAW,IAAIC,GAAJ,CAAQpB,iBAAiB,CAACqB,MAAlB,CAAyBlB,YAAzB,CAAR,CAAX,CAAxB;AACD;;AAED,UAAIO,cAAc,GAAG,KAAK7C,GAAL,CAAS8C,QAAT,CAAkB,gBAAlB,EAAoCX,iBAApC,EAAuDM,qBAAvD,EAA8EL,SAA9E,CAArB;;AAEA,UAAIS,cAAc,KAAK,KAAvB,EAA8B;AAC5B;AACD;;AAED,UAAIT,SAAJ,EAAe;AACb,aAAKvC,UAAL,GAAkB4C,qBAAlB;AACD;;AAED,WAAKzC,GAAL,CAAS8C,QAAT,CAAkB,eAAlB,EAAmCX,iBAAnC,EAAsDM,qBAAtD,EAA6EL,SAA7E,EAAwFA,SAAS,IAAIK,qBAAqB,CAACpG,MAAtB,GAA+B8F,iBAAiB,CAAC9F,MAAtJ;AACD;AACD;;;;;;AA7BC,GAtJsB,EAyLtB;AACDO,IAAAA,GAAG,EAAE,SADJ;AAEDkB,IAAAA,KAAK,EAAE,SAAS2F,OAAT,GAAmB;AACxB,WAAK,IAAIC,KAAK,GAAGT,SAAS,CAAC5G,MAAtB,EAA8BkE,GAAG,GAAG,IAAI2C,KAAJ,CAAUQ,KAAV,CAApC,EAAsDC,KAAK,GAAG,CAAnE,EAAsEA,KAAK,GAAGD,KAA9E,EAAqFC,KAAK,EAA1F,EAA8F;AAC5FpD,QAAAA,GAAG,CAACoD,KAAD,CAAH,GAAaV,SAAS,CAACU,KAAD,CAAtB;AACD;;AAED,WAAKP,QAAL,CAAc7C,GAAd;AACD;AACD;;;;;;;;AATC,GAzLsB,EA0MtB;AACD3D,IAAAA,GAAG,EAAE,UADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASwD,QAAT,CAAkBf,GAAlB,EAAuB;AAC5B,UAAIqD,eAAe,GAAGX,SAAS,CAAC5G,MAAV,GAAmB,CAAnB,IAAwB4G,SAAS,CAAC,CAAD,CAAT,KAAiBY,SAAzC,GAAqDZ,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA1F;AACA,UAAIa,WAAW,GAAGvD,GAAlB;;AAEA,UAAI,CAACqD,eAAL,EAAsB;AACpBE,QAAAA,WAAW,GAAG,KAAK9D,GAAL,CAASwC,aAAT,CAAuBjC,GAAvB,CAAd;AACD;;AAED,aAAO,KAAKV,UAAL,CAAgB+C,QAAhB,CAAyBkB,WAAzB,CAAP;AACD;AACD;;;;;;AAZC,GA1MsB,EA4NtB;AACDlH,IAAAA,GAAG,EAAE,gBADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASuE,cAAT,CAAwBJ,IAAxB,EAA8B;AACnC,UAAI8B,MAAM,GAAG,IAAb;;AAEA,aAAO9B,IAAI,CAAC+B,KAAL,CAAW,UAAUzD,GAAV,EAAe;AAC/B,eAAO0D,MAAM,CAACC,SAAP,CAAiB3D,GAAjB,KAAyBA,GAAG,IAAI,CAAhC,IAAqCA,GAAG,GAAGwD,MAAM,CAAC/D,GAAP,CAAWmE,SAAX,EAAlD;AACD,OAFM,CAAP;AAGD;AACD;;;;;;AATC,GA5NsB,EA2OtB;AACDvH,IAAAA,GAAG,EAAE,gBADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASiE,cAAT,GAA0B;AAC/B/C,MAAAA,SAAS,CAAC,KAAKgB,GAAL,CAASoE,YAAT,EAAD,EAA0B,UAAUC,IAAV,EAAgB;AACjD,YAAIA,IAAJ,EAAU;AACRA,UAAAA,IAAI,CAACC,cAAL,GAAsB,KAAtB;AACD;AACF,OAJQ,CAAT;AAKD;AACD;;;;;;;;;;;AATC,GA3OsB,EA+PtB;AACD1H,IAAAA,GAAG,EAAE,oBADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASiD,kBAAT,CAA4BR,GAA5B,EAAiCM,GAAjC,EAAsCC,cAAtC,EAAsD;AAC3D,UAAIyD,SAAS,GAAG,KAAKvE,GAAL,CAAS8C,QAAT,CAAkB,aAAlB,EAAiCvC,GAAjC,CAAhB;;AAEA,UAAI,KAAKX,QAAL,CAAc4E,gBAAd,KAAmC,KAAnC,IAA4C,KAAKlD,QAAL,CAAciD,SAAd,CAAhD,EAA0E;AACxEzD,QAAAA,cAAc,CAACwD,cAAf,GAAgC,IAAhC;AACD,OAFD,MAEO;AACLxD,QAAAA,cAAc,CAACwD,cAAf,GAAgC,KAAhC;AACD;;AAED,UAAI,KAAKhD,QAAL,CAAciD,SAAS,GAAG,CAA1B,CAAJ,EAAkC;AAChC,YAAIE,kBAAkB,GAAG,IAAzB;AACA,YAAIrI,CAAC,GAAGmI,SAAS,GAAG,CAApB;AACAzD,QAAAA,cAAc,CAAC4D,SAAf,GAA2B5D,cAAc,CAAC4D,SAAf,IAA4B,EAAvD;;AAEA,YAAI5D,cAAc,CAAC4D,SAAf,CAAyBC,OAAzB,CAAiC,gBAAjC,MAAuD,CAAC,CAA5D,EAA+D;AAC7D7D,UAAAA,cAAc,CAAC4D,SAAf,IAA4B,iBAA5B;AACD;;AAED,WAAG;AACD,cAAI,CAAC,KAAKpD,QAAL,CAAclF,CAAd,CAAL,EAAuB;AACrBqI,YAAAA,kBAAkB,GAAG,KAArB;AACA;AACD;;AAEDrI,UAAAA,CAAC,IAAI,CAAL;AACD,SAPD,QAOSA,CAAC,IAAI,CAPd;;AASA,YAAIqI,kBAAkB,IAAI3D,cAAc,CAAC4D,SAAf,CAAyBC,OAAzB,CAAiC,iBAAjC,MAAwD,CAAC,CAAnF,EAAsF;AACpF7D,UAAAA,cAAc,CAAC4D,SAAf,IAA4B,kBAA5B;AACD;AACF,OArBD,MAqBO,IAAI5D,cAAc,CAAC4D,SAAnB,EAA8B;AACnC,YAAIE,QAAQ,GAAG9D,cAAc,CAAC4D,SAAf,CAAyBG,KAAzB,CAA+B,GAA/B,CAAf;;AAEA,YAAID,QAAQ,CAACvI,MAAb,EAAqB;AACnB,cAAIyI,wBAAwB,GAAGF,QAAQ,CAACD,OAAT,CAAiB,gBAAjB,CAA/B;;AAEA,cAAIG,wBAAwB,GAAG,CAAC,CAAhC,EAAmC;AACjCF,YAAAA,QAAQ,CAACG,MAAT,CAAgBD,wBAAhB,EAA0C,CAA1C;AACD;;AAED,cAAIE,mBAAmB,GAAGJ,QAAQ,CAACD,OAAT,CAAiB,iBAAjB,CAA1B;;AAEA,cAAIK,mBAAmB,GAAG,CAAC,CAA3B,EAA8B;AAC5BJ,YAAAA,QAAQ,CAACG,MAAT,CAAgBC,mBAAhB,EAAqC,CAArC;AACD;;AAEDlE,UAAAA,cAAc,CAAC4D,SAAf,GAA2BE,QAAQ,CAACK,IAAT,CAAc,GAAd,CAA3B;AACD;AACF;AACF;AACD;;;;;;;;AApDC,GA/PsB,EA2TtB;AACDrI,IAAAA,GAAG,EAAE,qBADJ;AAEDkB,IAAAA,KAAK,EAAE,SAAS2C,mBAAT,CAA6BF,GAA7B,EAAkC2E,EAAlC,EAAsC;AAC3C,UAAIC,EAAE,GAAGD,EAAE,CAACE,UAAZ;;AAEA,UAAID,EAAJ,EAAQ;AACN,YAAI,KAAK7D,QAAL,CAAcf,GAAd,CAAJ,EAAwB;AACtB1B,UAAAA,QAAQ,CAACsG,EAAD,EAAK,MAAL,CAAR;AACD,SAFD,MAEO;AACLrG,UAAAA,WAAW,CAACqG,EAAD,EAAK,MAAL,CAAX;AACD;AACF;;AAED,UAAIV,kBAAkB,GAAG,IAAzB;AACA,UAAIrI,CAAC,GAAGmE,GAAG,GAAG,CAAd;;AAEA,SAAG;AACD,YAAI,CAAC,KAAKe,QAAL,CAAclF,CAAd,CAAL,EAAuB;AACrBqI,UAAAA,kBAAkB,GAAG,KAArB;AACA;AACD;;AAEDrI,QAAAA,CAAC,IAAI,CAAL;AACD,OAPD,QAOSA,CAAC,IAAI,CAPd;;AASA,UAAIqI,kBAAJ,EAAwB;AACtB5F,QAAAA,QAAQ,CAACqG,EAAD,EAAK,iBAAL,CAAR;AACD;;AAED,UAAI,KAAKtF,QAAL,CAAcyF,UAAd,IAA4B,KAAKrF,GAAL,CAASK,aAAT,EAAhC,EAA0D;AACxD,YAAI,KAAKiB,QAAL,CAAcf,GAAG,GAAG,CAApB,CAAJ,EAA4B;AAC1B1B,UAAAA,QAAQ,CAACqG,EAAD,EAAK,gBAAL,CAAR;AACD;;AAED,YAAI,KAAK5D,QAAL,CAAcf,GAAG,GAAG,CAApB,CAAJ,EAA4B;AAC1B1B,UAAAA,QAAQ,CAACqG,EAAD,EAAK,iBAAL,CAAR;AACD;AACF;AACF;AACD;;;;;;;;;AAvCC,GA3TsB,EA2WtB;AACDtI,IAAAA,GAAG,EAAE,mBADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASmD,iBAAT,CAA2BD,MAA3B,EAAmCT,GAAnC,EAAwC;AAC7C,UAAI,KAAKe,QAAL,CAAcf,GAAd,CAAJ,EAAwB;AACtB,eAAO,GAAP;AACD;;AAED,aAAOS,MAAP;AACD;AACD;;;;;;;;AATC,GA3WsB,EA4XtB;AACDpE,IAAAA,GAAG,EAAE,uBADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASwH,qBAAT,CAA+BC,MAA/B,EAAuC;AAC5C,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAIC,SAAS,GAAG,EAAhB;;AAEA,UAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,QAAnB,EAA6BC,MAA7B,EAAqCC,QAArC,EAA+CC,MAA/C,EAAuD;AACrEL,QAAAA,SAAS,CAACM,IAAV,CAAe;AACbJ,UAAAA,QAAQ,EAAEA,QADG;AAEbC,UAAAA,MAAM,EAAEA,MAFK;AAGbC,UAAAA,QAAQ,EAAEA,QAHG;AAIbC,UAAAA,MAAM,EAAEA;AAJK,SAAf;AAMD,OAPD;;AASA9G,MAAAA,SAAS,CAACuG,MAAD,EAAS,UAAUS,KAAV,EAAiB;AACjC,YAAI1E,QAAQ,GAAG,IAAf;AACA,YAAI2E,UAAU,GAAG,CAAjB;AACAlH,QAAAA,SAAS,CAACiH,KAAK,CAACL,QAAP,EAAiBK,KAAK,CAACJ,MAAvB,EAA+B,UAAUrF,GAAV,EAAe;AACrD,cAAIiF,MAAM,CAAClE,QAAP,CAAgBf,GAAhB,CAAJ,EAA0B;AACxB,gBAAI,CAACe,QAAL,EAAe;AACboE,cAAAA,SAAS,CAACO,UAAD,EAAa1F,GAAG,GAAG,CAAnB,EAAsByF,KAAK,CAACH,QAA5B,EAAsCG,KAAK,CAACF,MAA5C,CAAT;AACD;;AAEDxE,YAAAA,QAAQ,GAAG,IAAX;AACD,WAND,MAMO;AACL,gBAAIA,QAAJ,EAAc;AACZ2E,cAAAA,UAAU,GAAG1F,GAAb;AACD;;AAED,gBAAIA,GAAG,KAAKyF,KAAK,CAACJ,MAAlB,EAA0B;AACxBF,cAAAA,SAAS,CAACO,UAAD,EAAa1F,GAAb,EAAkByF,KAAK,CAACH,QAAxB,EAAkCG,KAAK,CAACF,MAAxC,CAAT;AACD;;AAEDxE,YAAAA,QAAQ,GAAG,KAAX;AACD;AACF,SAlBQ,CAAT;AAmBD,OAtBQ,CAAT;AAuBA,aAAOmE,SAAP;AACD;AACD;;;;;;;AAzCC,GA5XsB,EA4atB;AACD7I,IAAAA,GAAG,EAAE,uBADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASsD,qBAAT,CAA+BF,MAA/B,EAAuC;AAC5C,UAAIgF,MAAM,GAAG,IAAb;;AAEA,UAAIC,eAAe,GAAG,KAAKnG,GAAL,CAASoG,eAAT,MAA8B,KAApD;AACA,UAAIC,iBAAiB,GAAG,KAAKrG,GAAL,CAASmE,SAAT,KAAuB,CAA/C;;AAEA,UAAImC,UAAU,GAAG,SAASA,UAAT,CAAoB/F,GAApB,EAAyB;AACxC,YAAIgG,SAAS,GAAG,CAAhB;AACA,YAAIhC,SAAS,GAAGhE,GAAhB;;AAEA,YAAI4F,eAAJ,EAAqB;AACnBI,UAAAA,SAAS,GAAGhC,SAAS,GAAG4B,eAAe,CAAC,CAAD,CAA3B,GAAiC,CAAjC,GAAqC,CAAC,CAAlD;AACAD,UAAAA,MAAM,CAACpG,eAAP,GAAyBqG,eAAe,CAAC,CAAD,CAAxC;AACD;;AAED,YAAIE,iBAAiB,GAAG9B,SAApB,IAAiCA,SAAS,GAAG,CAAjD,EAAoD;AAClD,iBAAO2B,MAAM,CAACpG,eAAd;AACD;;AAED,YAAIoG,MAAM,CAAC5E,QAAP,CAAgBiD,SAAhB,CAAJ,EAAgC;AAC9BA,UAAAA,SAAS,GAAG+B,UAAU,CAAC/B,SAAS,GAAGgC,SAAb,CAAtB;AACD;;AAED,eAAOhC,SAAP;AACD,OAlBD;;AAoBArD,MAAAA,MAAM,CAACX,GAAP,GAAa+F,UAAU,CAACpF,MAAM,CAACX,GAAR,CAAvB;AACD;AACD;;;;;;;AA9BC,GA5asB,EAidtB;AACD3D,IAAAA,GAAG,EAAE,2BADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASqD,yBAAT,CAAmCD,MAAnC,EAA2C;AAChD,UAAIsF,MAAM,GAAG,IAAb;;AAEA,UAAItF,MAAM,CAACX,GAAP,GAAa,CAAjB,EAAoB;AAClB;AACD;;AAEDW,MAAAA,MAAM,CAACX,GAAP,GAAa,CAAb;;AAEA,UAAI+F,UAAU,GAAG,SAASA,UAAT,CAAoB/F,GAApB,EAAyB;AACxC,YAAIgE,SAAS,GAAGhE,GAAhB;;AAEA,YAAIiG,MAAM,CAAClF,QAAP,CAAgBiD,SAAhB,CAAJ,EAAgC;AAC9BA,UAAAA,SAAS,IAAI,CAAb;AACAA,UAAAA,SAAS,GAAG+B,UAAU,CAAC/B,SAAD,CAAtB;AACD;;AAED,eAAOA,SAAP;AACD,OATD;;AAWArD,MAAAA,MAAM,CAACX,GAAP,GAAa+F,UAAU,CAACpF,MAAM,CAACX,GAAR,CAAvB;AACD;AACD;;;;;;;AAxBC,GAjdsB,EAgftB;AACD3D,IAAAA,GAAG,EAAE,qBADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASuD,mBAAT,CAA6BH,MAA7B,EAAqC;AAC1C,UAAIuF,MAAM,GAAG,IAAb;;AAEA,UAAIC,QAAQ,GAAG,KAAK1G,GAAL,CAASmE,SAAT,EAAf;;AAEA,UAAImC,UAAU,GAAG,SAASA,UAAT,CAAoB/F,GAApB,EAAyB;AACxC,YAAIgE,SAAS,GAAGhE,GAAhB;;AAEA,YAAIkG,MAAM,CAACnF,QAAP,CAAgBiD,SAAhB,CAAJ,EAAgC;AAC9B,cAAIkC,MAAM,CAAC3G,eAAP,GAAyByE,SAAzB,IAAsCrD,MAAM,CAACX,GAAP,KAAemG,QAAQ,GAAG,CAApE,EAAuE;AACrE,gBAAInC,SAAS,GAAG,CAAhB,EAAmB;AACjBA,cAAAA,SAAS,IAAI,CAAb;AACAA,cAAAA,SAAS,GAAG+B,UAAU,CAAC/B,SAAD,CAAtB;AACD,aAHD,MAGO;AACLxF,cAAAA,SAAS,CAAC,CAAD,EAAI0H,MAAM,CAAC3G,eAAX,EAA4B,UAAU1D,CAAV,EAAa;AAChD,oBAAI,CAACqK,MAAM,CAACnF,QAAP,CAAgBlF,CAAhB,CAAL,EAAyB;AACvBmI,kBAAAA,SAAS,GAAGnI,CAAZ;AACA,yBAAO,KAAP;AACD;AACF,eALQ,CAAT;AAMD;AACF,WAZD,MAYO;AACLmI,YAAAA,SAAS,IAAI,CAAb;AACAA,YAAAA,SAAS,GAAG+B,UAAU,CAAC/B,SAAD,CAAtB;AACD;AACF;;AAED,eAAOA,SAAP;AACD,OAvBD;;AAyBArD,MAAAA,MAAM,CAACX,GAAP,GAAa+F,UAAU,CAACpF,MAAM,CAACX,GAAR,CAAvB;AACA,WAAKT,eAAL,GAAuBoB,MAAM,CAACX,GAA9B;AACD;AACD;;;;;;;AAnCC,GAhfsB,EA0hBtB;AACD3D,IAAAA,GAAG,EAAE,kCADJ;AAEDkB,IAAAA,KAAK,EAAE,SAAS8C,gCAAT,CAA0CD,OAA1C,EAAmD;AACxDA,MAAAA,OAAO,CAACgG,KAAR,CAAcZ,IAAd,CAAmB;AACjBa,QAAAA,IAAI,EAAE;AADW,OAAnB,EAEGxH,WAAW,CAAC,IAAD,CAFd,EAEsBC,WAAW,CAAC,IAAD,CAFjC;AAGD;AACD;;;;;;;;AAPC,GA1hBsB,EAyiBtB;AACDzC,IAAAA,GAAG,EAAE,kBADJ;AAEDkB,IAAAA,KAAK,EAAE,SAAS2D,gBAAT,CAA0BF,KAA1B,EAAiCC,MAAjC,EAAyC;AAC9C,UAAIqF,UAAU,GAAG,EAAjB;AACA7H,MAAAA,SAAS,CAAC,KAAKa,UAAN,EAAkB,UAAUU,GAAV,EAAe;AACxC,YAAIgE,SAAS,GAAGhE,GAAhB;;AAEA,YAAIgE,SAAS,IAAIhD,KAAjB,EAAwB;AACtBgD,UAAAA,SAAS,IAAI/C,MAAb;AACD;;AAEDqF,QAAAA,UAAU,CAACd,IAAX,CAAgBxB,SAAhB;AACD,OARQ,CAAT;AASA,WAAK1E,UAAL,GAAkBgH,UAAlB;AACD;AACD;;;;;;;;AAfC,GAziBsB,EAgkBtB;AACDjK,IAAAA,GAAG,EAAE,kBADJ;AAEDkB,IAAAA,KAAK,EAAE,SAAS4D,gBAAT,CAA0BH,KAA1B,EAAiCC,MAAjC,EAAyC;AAC9C,UAAIqF,UAAU,GAAG,EAAjB;AACA7H,MAAAA,SAAS,CAAC,KAAKa,UAAN,EAAkB,UAAUU,GAAV,EAAe;AACxC,YAAIgE,SAAS,GAAGhE,GAAhB;;AAEA,YAAIgE,SAAS,IAAIhD,KAAjB,EAAwB;AACtBgD,UAAAA,SAAS,IAAI/C,MAAb;AACD;;AAEDqF,QAAAA,UAAU,CAACd,IAAX,CAAgBxB,SAAhB;AACD,OARQ,CAAT;AASA,WAAK1E,UAAL,GAAkBgH,UAAlB;AACD;AACD;;;;;;AAfC,GAhkBsB,EAqlBtB;AACDjK,IAAAA,GAAG,EAAE,QADJ;AAEDkB,IAAAA,KAAK,EAAE,SAAS6D,MAAT,GAAkB;AACvB,UAAImF,OAAO,GAAG,IAAd;;AAEA,UAAIlH,QAAQ,GAAG,KAAKI,GAAL,CAASC,WAAT,GAAuBJ,UAAtC;;AAEA,UAAItE,OAAO,CAACqE,QAAD,CAAP,KAAsB,QAA1B,EAAoC;AAClC,aAAKA,QAAL,GAAgBA,QAAhB;;AAEA,YAAIA,QAAQ,CAAC4E,gBAAT,KAA8B,KAAK,CAAvC,EAA0C;AACxC5E,UAAAA,QAAQ,CAAC4E,gBAAT,GAA4B,IAA5B;AACD;;AAED,YAAItB,KAAK,CAAC6D,OAAN,CAAcnH,QAAQ,CAACqC,IAAvB,CAAJ,EAAkC;AAChC,eAAKmB,QAAL,CAAcxD,QAAQ,CAACqC,IAAvB;AACD;;AAED,YAAI,CAACrC,QAAQ,CAAC4E,gBAAd,EAAgC;AAC9B,eAAKlE,OAAL,CAAa,qBAAb,EAAoC,UAAUiF,MAAV,EAAkB;AACpD,mBAAOuB,OAAO,CAACxB,qBAAR,CAA8BC,MAA9B,CAAP;AACD,WAFD;AAGD;AACF;AACF;AACD;;;;AAzBC,GArlBsB,EAknBtB;AACD3I,IAAAA,GAAG,EAAE,SADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASkJ,OAAT,GAAmB;AACxB3J,MAAAA,IAAI,CAACY,eAAe,CAACuB,UAAU,CAAC5D,SAAZ,CAAhB,EAAwC,SAAxC,EAAmD,IAAnD,CAAJ,CAA6DsB,IAA7D,CAAkE,IAAlE;AACD;AAJA,GAlnBsB,CAAb,CAAZ;;AAynBA,SAAOsC,UAAP;AACD,CAtqBD,CAsqBEZ,UAtqBF,CAFA;;AA0qBAM,cAAc,CAAC,YAAD,EAAeM,UAAf,CAAd;AACA,eAAeA,UAAf","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.every\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.number.constructor\";\nimport \"core-js/modules/es.number.is-integer\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.set\";\nimport \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.split\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from '../_base';\nimport { addClass, removeClass } from '../../helpers/dom/element';\nimport { rangeEach } from '../../helpers/number';\nimport { arrayEach, arrayMap } from '../../helpers/array';\nimport { registerPlugin } from '../../plugins';\nimport Hooks from '../../pluginHooks';\nimport hideRowItem from './contextMenuItem/hideRow';\nimport showRowItem from './contextMenuItem/showRow';\nHooks.getSingleton().register('beforeHideRows');\nHooks.getSingleton().register('afterHideRows');\nHooks.getSingleton().register('beforeUnhideRows');\nHooks.getSingleton().register('afterUnhideRows');\n/**\n * @plugin HiddenRows\n *\n * @description\n * Plugin allows to hide certain rows. The hiding is achieved by rendering the rows with height set as 0px.\n * The plugin not modifies the source data and do not participate in data transformation (the shape of data returned\n * by `getData*` methods stays intact).\n *\n * Possible plugin settings:\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\n *  * `rows` as `Array`\n *  * `indicators` as `Boolean` (default `false`)\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   date: getData(),\n *   hiddenRows: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     rows: [1, 2, 5]\n *   }\n * });\n *\n * // access to hiddenRows plugin instance\n * const hiddenRowsPlugin = hot.getPlugin('hiddenRows');\n *\n * // show single row\n * hiddenRowsPlugin.showRow(1);\n *\n * // show multiple rows\n * hiddenRowsPlugin.showRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.showRows([1, 2, 9]);\n *\n * // hide single row\n * hiddenRowsPlugin.hideRow(1);\n *\n * // hide multiple rows\n * hiddenRowsPlugin.hideRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.hideRows([1, 2, 9]);\n *\n * // rerender the table to see all changes\n * hot.render();\n * ```\n */\n\nvar HiddenRows =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(HiddenRows, _BasePlugin);\n\n  function HiddenRows(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, HiddenRows);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HiddenRows).call(this, hotInstance));\n    /**\n     * Cached settings from Handsontable settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.settings = {};\n    /**\n     * List of hidden rows indexes.\n     *\n     * @private\n     * @type {Number[]}\n     */\n\n    _this.hiddenRows = [];\n    /**\n     * Last selected row index.\n     *\n     * @private\n     * @type {Number}\n     * @default -1\n     */\n\n    _this.lastSelectedRow = -1;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link HiddenRows#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(HiddenRows, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().hiddenRows;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (this.hot.hasRowHeaders()) {\n        this.addHook('afterGetRowHeader', function (row, TH) {\n          return _this2.onAfterGetRowHeader(row, TH);\n        });\n      } else {\n        this.addHook('afterRenderer', function (TD, row) {\n          return _this2.onAfterGetRowHeader(row, TD);\n        });\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.onModifyRowHeight(height, row);\n      });\n      this.addHook('beforeSetRangeStartOnly', function (coords) {\n        return _this2.onBeforeSetRangeStartOnly(coords);\n      });\n      this.addHook('beforeSetRangeStart', function (coords) {\n        return _this2.onBeforeSetRangeStart(coords);\n      });\n      this.addHook('beforeSetRangeEnd', function (coords) {\n        return _this2.onBeforeSetRangeEnd(coords);\n      });\n      this.addHook('hiddenRow', function (row) {\n        return _this2.isHidden(row);\n      });\n      this.addHook('afterCreateRow', function (index, amount) {\n        return _this2.onAfterCreateRow(index, amount);\n      });\n      this.addHook('afterRemoveRow', function (index, amount) {\n        return _this2.onAfterRemoveRow(index, amount);\n      });\n      this.addHook('init', function () {\n        return _this2.onInit();\n      }); // Dirty workaround - the section below runs only if the HOT instance is already prepared.\n\n      if (this.hot.view) {\n        this.onInit();\n      }\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.onInit();\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.settings = {};\n      this.hiddenRows = [];\n      this.lastSelectedRow = -1;\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"disablePlugin\", this).call(this);\n\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the rows provided in the array.\n     *\n     * @param {Number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"showRows\",\n    value: function showRows(rows) {\n      var _this3 = this;\n\n      var currentHideConfig = this.hiddenRows;\n      var validRows = this.isRowDataValid(rows);\n      var physicalRows = arrayMap(rows, function (visualRowIndex) {\n        return _this3.hot.toPhysicalRow(visualRowIndex);\n      });\n      var destinationHideConfig = currentHideConfig;\n\n      if (validRows) {\n        destinationHideConfig = this.hiddenRows.filter(function (hiddenRow) {\n          return physicalRows.includes(hiddenRow) === false;\n        });\n      }\n\n      var continueHiding = this.hot.runHooks('beforeUnhideRows', currentHideConfig, destinationHideConfig, validRows);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validRows) {\n        this.hiddenRows = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterUnhideRows', currentHideConfig, destinationHideConfig, validRows, validRows && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows the row provided as row index (counting from 0).\n     *\n     * @param {...Number} row Visual row index.\n     */\n\n  }, {\n    key: \"showRow\",\n    value: function showRow() {\n      for (var _len = arguments.length, row = new Array(_len), _key = 0; _key < _len; _key++) {\n        row[_key] = arguments[_key];\n      }\n\n      this.showRows(row);\n    }\n    /**\n     * Hides the rows provided in the array.\n     *\n     * @param {Number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"hideRows\",\n    value: function hideRows(rows) {\n      var _this4 = this;\n\n      var currentHideConfig = this.hiddenRows;\n      var validRows = this.isRowDataValid(rows);\n      var physicalRows = arrayMap(rows, function (visualRowIndex) {\n        return _this4.hot.toPhysicalRow(visualRowIndex);\n      });\n      var destinationHideConfig = currentHideConfig;\n\n      if (validRows) {\n        // Creating unique list of indexes.\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(physicalRows)));\n      }\n\n      var continueHiding = this.hot.runHooks('beforeHideRows', currentHideConfig, destinationHideConfig, validRows);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validRows) {\n        this.hiddenRows = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterHideRows', currentHideConfig, destinationHideConfig, validRows, validRows && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides the row provided as row index (counting from 0).\n     *\n     * @param {...Number} row Visual row index.\n     */\n\n  }, {\n    key: \"hideRow\",\n    value: function hideRow() {\n      for (var _len2 = arguments.length, row = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        row[_key2] = arguments[_key2];\n      }\n\n      this.hideRows(row);\n    }\n    /**\n     * Checks if given row is hidden.\n     *\n     * @param {Number} row Row index.\n     * @param {Boolean} isPhysicalIndex flag which determines type of index.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(row) {\n      var isPhysicalIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var physicalRow = row;\n\n      if (!isPhysicalIndex) {\n        physicalRow = this.hot.toPhysicalRow(row);\n      }\n\n      return this.hiddenRows.includes(physicalRow);\n    }\n    /**\n     * Check whether all of the provided row indexes are within the bounds of the table.\n     *\n     * @param {Array} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"isRowDataValid\",\n    value: function isRowDataValid(rows) {\n      var _this5 = this;\n\n      return rows.every(function (row) {\n        return Number.isInteger(row) && row >= 0 && row < _this5.hot.countRows();\n      });\n    }\n    /**\n     * Resets all rendered cells meta.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipRowOnPaste = false;\n        }\n      });\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {Number} col Column index.\n     * @param {Object} cellProperties Cell meta object properties.\n     *\n     * @fires Hooks#unmodifyRow\n     */\n\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, col, cellProperties) {\n      var visualRow = this.hot.runHooks('unmodifyRow', row);\n\n      if (this.settings.copyPasteEnabled === false && this.isHidden(visualRow)) {\n        cellProperties.skipRowOnPaste = true;\n      } else {\n        cellProperties.skipRowOnPaste = false;\n      }\n\n      if (this.isHidden(visualRow - 1)) {\n        var firstSectionHidden = true;\n        var i = visualRow - 1;\n        cellProperties.className = cellProperties.className || '';\n\n        if (cellProperties.className.indexOf('afterHiddenRow') === -1) {\n          cellProperties.className += ' afterHiddenRow';\n        }\n\n        do {\n          if (!this.isHidden(i)) {\n            firstSectionHidden = false;\n            break;\n          }\n\n          i -= 1;\n        } while (i >= 0);\n\n        if (firstSectionHidden && cellProperties.className.indexOf('firstVisibleRow') === -1) {\n          cellProperties.className += ' firstVisibleRow';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n\n        if (classArr.length) {\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenRow');\n\n          if (containAfterHiddenColumn > -1) {\n            classArr.splice(containAfterHiddenColumn, 1);\n          }\n\n          var containFirstVisible = classArr.indexOf('firstVisibleRow');\n\n          if (containFirstVisible > -1) {\n            classArr.splice(containFirstVisible, 1);\n          }\n\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {HTMLElement} th Table header element.\n     */\n\n  }, {\n    key: \"onAfterGetRowHeader\",\n    value: function onAfterGetRowHeader(row, th) {\n      var tr = th.parentNode;\n\n      if (tr) {\n        if (this.isHidden(row)) {\n          addClass(tr, 'hide');\n        } else {\n          removeClass(tr, 'hide');\n        }\n      }\n\n      var firstSectionHidden = true;\n      var i = row - 1;\n\n      do {\n        if (!this.isHidden(i)) {\n          firstSectionHidden = false;\n          break;\n        }\n\n        i -= 1;\n      } while (i >= 0);\n\n      if (firstSectionHidden) {\n        addClass(th, 'firstVisibleRow');\n      }\n\n      if (this.settings.indicators && this.hot.hasRowHeaders()) {\n        if (this.isHidden(row - 1)) {\n          addClass(th, 'afterHiddenRow');\n        }\n\n        if (this.isHidden(row + 1)) {\n          addClass(th, 'beforeHiddenRow');\n        }\n      }\n    }\n    /**\n     * Adds the additional row height for the hidden row indicators.\n     *\n     * @private\n     * @param {Number} height Row height.\n     * @param {Number} row Row index.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onModifyRowHeight\",\n    value: function onModifyRowHeight(height, row) {\n      if (this.isHidden(row)) {\n        return 0.1;\n      }\n\n      return height;\n    }\n    /**\n     * On modify copyable range listener.\n     *\n     * @private\n     * @param {Array} ranges Array of selected copyable text.\n     * @returns {Array} Returns modyfied range.\n     */\n\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this6 = this;\n\n      var newRanges = [];\n\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (_this6.isHidden(row)) {\n            if (!isHidden) {\n              pushRange(rangeStart, row - 1, range.startCol, range.endCol);\n            }\n\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = row;\n            }\n\n            if (row === range.endRow) {\n              pushRange(rangeStart, row, range.startCol, range.endCol);\n            }\n\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * On before set range start listener, when selection was triggered by the cell.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeStart\",\n    value: function onBeforeSetRangeStart(coords) {\n      var _this7 = this;\n\n      var actualSelection = this.hot.getSelectedLast() || false;\n      var lastPossibleIndex = this.hot.countRows() - 1;\n\n      var getNextRow = function getNextRow(row) {\n        var direction = 0;\n        var visualRow = row;\n\n        if (actualSelection) {\n          direction = visualRow > actualSelection[0] ? 1 : -1;\n          _this7.lastSelectedRow = actualSelection[0];\n        }\n\n        if (lastPossibleIndex < visualRow || visualRow < 0) {\n          return _this7.lastSelectedRow;\n        }\n\n        if (_this7.isHidden(visualRow)) {\n          visualRow = getNextRow(visualRow + direction);\n        }\n\n        return visualRow;\n      };\n\n      coords.row = getNextRow(coords.row);\n    }\n    /**\n     * On before set range start listener, when selection was triggered by the headers.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeStartOnly\",\n    value: function onBeforeSetRangeStartOnly(coords) {\n      var _this8 = this;\n\n      if (coords.row > 0) {\n        return;\n      }\n\n      coords.row = 0;\n\n      var getNextRow = function getNextRow(row) {\n        var visualRow = row;\n\n        if (_this8.isHidden(visualRow)) {\n          visualRow += 1;\n          visualRow = getNextRow(visualRow);\n        }\n\n        return visualRow;\n      };\n\n      coords.row = getNextRow(coords.row);\n    }\n    /**\n     * On before set range end listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeEnd\",\n    value: function onBeforeSetRangeEnd(coords) {\n      var _this9 = this;\n\n      var rowCount = this.hot.countRows();\n\n      var getNextRow = function getNextRow(row) {\n        var visualRow = row;\n\n        if (_this9.isHidden(visualRow)) {\n          if (_this9.lastSelectedRow > visualRow || coords.row === rowCount - 1) {\n            if (visualRow > 0) {\n              visualRow -= 1;\n              visualRow = getNextRow(visualRow);\n            } else {\n              rangeEach(0, _this9.lastSelectedRow, function (i) {\n                if (!_this9.isHidden(i)) {\n                  visualRow = i;\n                  return false;\n                }\n              });\n            }\n          } else {\n            visualRow += 1;\n            visualRow = getNextRow(visualRow);\n          }\n        }\n\n        return visualRow;\n      };\n\n      coords.row = getNextRow(coords.row);\n      this.lastSelectedRow = coords.row;\n    }\n    /**\n     * Adds Show-hide columns to context menu.\n     *\n     * @private\n     * @param {Object} options\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: '---------'\n      }, hideRowItem(this), showRowItem(this));\n    }\n    /**\n     * Recalculates index of hidden rows after add row action\n     *\n     * @private\n     * @param {Number} index\n     * @param {Number} amount\n     */\n\n  }, {\n    key: \"onAfterCreateRow\",\n    value: function onAfterCreateRow(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenRows, function (row) {\n        var visualRow = row;\n\n        if (visualRow >= index) {\n          visualRow += amount;\n        }\n\n        tempHidden.push(visualRow);\n      });\n      this.hiddenRows = tempHidden;\n    }\n    /**\n     * Recalculates index of hidden rows after remove row action\n     *\n     * @private\n     * @param {Number} index\n     * @param {Number} amount\n     */\n\n  }, {\n    key: \"onAfterRemoveRow\",\n    value: function onAfterRemoveRow(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenRows, function (row) {\n        var visualRow = row;\n\n        if (visualRow >= index) {\n          visualRow -= amount;\n        }\n\n        tempHidden.push(visualRow);\n      });\n      this.hiddenRows = tempHidden;\n    }\n    /**\n     * `afterPluginsInitialized` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onInit\",\n    value: function onInit() {\n      var _this10 = this;\n\n      var settings = this.hot.getSettings().hiddenRows;\n\n      if (_typeof(settings) === 'object') {\n        this.settings = settings;\n\n        if (settings.copyPasteEnabled === void 0) {\n          settings.copyPasteEnabled = true;\n        }\n\n        if (Array.isArray(settings.rows)) {\n          this.hideRows(settings.rows);\n        }\n\n        if (!settings.copyPasteEnabled) {\n          this.addHook('modifyCopyableRange', function (ranges) {\n            return _this10.onModifyCopyableRange(ranges);\n          });\n        }\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(HiddenRows.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return HiddenRows;\n}(BasePlugin);\n\nregisterPlugin('hiddenRows', HiddenRows);\nexport default HiddenRows;"]},"metadata":{},"sourceType":"module"}