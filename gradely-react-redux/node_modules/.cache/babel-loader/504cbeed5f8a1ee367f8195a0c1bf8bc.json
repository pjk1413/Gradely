{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport React, { Component } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport 'handsontable/dist/handsontable.full.css';\nimport { connect } from 'react-redux';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.data = [[], [], []];\n    this.state = {};\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    let data = [];\n    let columnAssignmentLabel = [];\n    let colHeaders = [];\n    let rowHeaders = [];\n    let rowStudentLabel = [];\n\n    if (this.props.editCourse && this.props.editCourse.assignments) {\n      colHeaders = this.props.editCourse.assignments.map(assignment => {\n        columnAssignmentLabel.push({\n          assignment: assignment\n        });\n        return assignment.name + \" (\" + assignment.totalPoints + \")\";\n      });\n      rowHeaders = this.props.editCourse.students.map(student => {\n        rowStudentLabel.push({\n          student: student\n        });\n        const firstName = student.user && student.user.firstName;\n        const lastName = student.user && student.user.lastName;\n        return firstName + \" \" + lastName;\n      });\n      rowStudentLabel.forEach(student => {\n        const studentScores = this.props.editCourse.assignments.map(assignment => {\n          let tempScore = 0;\n          console.log(assignment.studentAssignment);\n          return student.student && student.student.studentAssignment && student.student.studentAssignment.filter(score => {\n            return assignment.id === score.assignmentId;\n          });\n        });\n        data.push(studentScores);\n      });\n    }\n\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      data: data,\n      colHeaders: colHeaders,\n      rowHeaders: rowHeaders,\n      rowHeaderWidth: 150,\n      columns: columnAssignmentLabel,\n      row: rowStudentLabel,\n      // width: \"600\", \n      // height: \"300\",\n      headerTooltips: {\n        rows: true,\n        columns: true,\n        onlyTrimmed: false\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hot-app\",\n      className: \"table table-hover table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HotTable, {\n      id: \"example1\",\n      className: \"my-3\",\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  grid: state.temp.grid\n});\n\nexport default connect(mapStateToProps, {})(Table);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/Table.js"],"names":["React","Component","HotTable","connect","Table","constructor","data","state","componentDidUpdate","render","columnAssignmentLabel","colHeaders","rowHeaders","rowStudentLabel","props","editCourse","assignments","map","assignment","push","name","totalPoints","students","student","firstName","user","lastName","forEach","studentScores","tempScore","console","log","studentAssignment","filter","score","id","assignmentId","settings","licenseKey","rowHeaderWidth","columns","row","headerTooltips","rows","onlyTrimmed","mapStateToProps","temp","grid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { HotTable } from '@handsontable/react'\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport 'handsontable/dist/handsontable.full.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Table extends Component {\r\n    constructor() {\r\n        super()\r\n        this.data = [\r\n            [], [], []\r\n        ]\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        let data = []\r\n        let columnAssignmentLabel = []\r\n        let colHeaders = []\r\n        let rowHeaders = []\r\n        let rowStudentLabel = []\r\n\r\n        if (this.props.editCourse && this.props.editCourse.assignments) {\r\n\r\n            \r\n\r\n            colHeaders = this.props.editCourse.assignments.map(assignment => {\r\n                columnAssignmentLabel.push({ assignment: assignment })\r\n                return assignment.name + \" (\" + assignment.totalPoints + \")\"\r\n            })\r\n\r\n            \r\n            rowHeaders = this.props.editCourse.students.map(student => {\r\n                rowStudentLabel.push({ student: student })\r\n                const firstName = student.user && student.user.firstName\r\n                const lastName = student.user && student.user.lastName\r\n                return firstName + \" \" + lastName\r\n            })\r\n\r\n            rowStudentLabel.forEach(student => {\r\n\r\n                const studentScores = this.props.editCourse.assignments.map(assignment => {\r\n                    let tempScore = 0\r\n                    console.log(assignment.studentAssignment)\r\n\r\n                    return student.student && student.student.studentAssignment && student.student.studentAssignment.filter(score => {\r\n                      \r\n                        return assignment.id === score.assignmentId\r\n                    })\r\n\r\n                })\r\n                data.push(studentScores)\r\n            });\r\n        }\r\n\r\n        const settings = {\r\n            licenseKey: 'non-commercial-and-evaluation',\r\n            data: data,\r\n            colHeaders: colHeaders,\r\n            rowHeaders: rowHeaders,\r\n            rowHeaderWidth: 150,\r\n            columns: columnAssignmentLabel,\r\n            row: rowStudentLabel,\r\n            // width: \"600\", \r\n            // height: \"300\",\r\n            headerTooltips: {\r\n                rows: true,\r\n                columns: true,\r\n                onlyTrimmed: false\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id=\"hot-app\" className=\"table table-hover table-sm\">\r\n                <HotTable id=\"example1\" className=\"my-3\" settings={settings} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    editCourse: state.temp.editCourse,\r\n    grid: state.temp.grid,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Table)"]},"metadata":{},"sourceType":"module"}