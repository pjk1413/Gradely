{"ast":null,"code":"import { GET_USER, UPDATE_USER, UPDATE_MESSAGES, GET_ALL_USERS, SEND_MESSAGE, ADD_CALENDAR_ITEM, REMOVE_CALENDAR_ITEM, ADD_TODO_ITEM, REMOVE_TODO_ITEM } from './types';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux'; //dispatch is part of thunk, it sends the data off to the reducer\n\nexport const getAdminUser = id => dispatch => {\n  axios.get(\"http://localhost:8080/admin/find/\" + id).then(response => {\n    dispatch({\n      type: GET_USER,\n      payload: response.data\n    });\n  });\n};\nexport const getStudentUser = id => dispatch => {\n  axios.get(\"http://localhost:8080/student/find/\" + id).then(response => {\n    dispatch({\n      type: GET_USER,\n      payload: response.data\n    });\n  });\n};\nexport const getTeacherUser = id => dispatch => {\n  axios.get(\"http://localhost:8080/teacher/find/\" + id).then(response => {\n    dispatch({\n      type: GET_USER,\n      payload: response.data\n    });\n  });\n};\nexport const removeUserFromMessage = (userId, messageId) => dispatch => {\n  axios.get(`http://localhost:8080/message/remove/${userId}/from/${messageId}/`).then(response => ({\n    type: UPDATE_MESSAGES,\n    payload: response.data\n  }));\n};\nexport const sendMessage = message => dispatch => {\n  axios.post(\"http://localhost:8080/message/send\", message).then(response => ({\n    type: SEND_MESSAGE\n  }));\n};\nexport const getAllMessages = id => dispatch => {\n  axios.get(\"http://localhost:8080/message/get/\" + id).then(response => {\n    dispatch({\n      type: UPDATE_MESSAGES,\n      payload: response.data\n    });\n  });\n}; //CRUD FOR USER DETAILS\n\nexport const editUserDetails = user => dispatch => {\n  axios.post(\"http://localhost:8080/user/update/details\", user).then(response => {\n    dispatch({\n      type: UPDATE_USER,\n      payload: response.data\n    });\n  });\n};\nexport const addContact = user => dispatch => {\n  axios.post(\"http://localhost:8080/user/add/contact\", user).then(response => {\n    dispatch({\n      type: UPDATE_USER,\n      payload: response.data\n    });\n  });\n};\nexport const deleteContact = (contactId, userId) => dispatch => {\n  axios.post(`http://localhost:8080/user/delete/contact/?contactId=${contactId}&userId=${userId}`).then(response => {\n    dispatch({\n      type: UPDATE_USER,\n      payload: response.data\n    });\n  });\n};\nexport const deletePhone = (number, id) => dispatch => {\n  axios.post(`http://localhost:8080/user/delete/phone/?phone=${number}&userId=${id}`).then(response => {\n    dispatch({\n      type: UPDATE_USER,\n      payload: response.data\n    });\n  });\n};\nexport const addPhone = (number, id) => dispatch => {\n  axios.post(`http://localhost:8080/user/add/phone/?phone=${number}&userId=${id}`).then(response => {\n    dispatch({\n      type: UPDATE_USER,\n      payload: response.data\n    });\n  });\n};\nexport const getAllUsers = () => dispatch => {\n  axios.get(\"http://localhost:8080/user/all\").then(response => {\n    dispatch({\n      type: GET_ALL_USERS,\n      payload: response.data\n    });\n  });\n};\nexport const removeCalendarItem = calendarId => dispatch => {\n  axios.get(\"http://localhost:8080/user/removeCalendarItem/\" + calendarId).then(response => {\n    dispatch({\n      type: REMOVE_CALENDAR_ITEM,\n      payload: calendarId\n    });\n  });\n};\nexport const addCalendarItem = (calendar, id) => dispatch => {\n  axios.post(`http://localhost:8080/user/addCalendarItem/?userId=${id}`, calendar).then(response => {\n    dispatch({\n      type: ADD_CALENDAR_ITEM,\n      payload: calendar\n    });\n  });\n};\nexport const addToDoItem = item => dispatch => {\n  axios.post(\"http://localhost:8080/user/addToDoItem/\", item).then(response => {\n    dispatch({\n      type: ADD_TODO_ITEM,\n      payload: response.data\n    });\n  });\n};\nexport const removeToDoItem = id => dispatch => {\n  axios.get(\"http://localhost:8080/user/removeToDoItem/\" + id).then(response => {\n    dispatch({\n      type: REMOVE_TODO_ITEM,\n      payload: id\n    });\n  });\n};\nexport const updateToDoItem = id => dispatch => {\n  axios.get(\"http://localhost:8080/user/updateToDoItem/\" + id).then(response => {\n    dispatch({\n      type: UPDATE_TODO_ITEM,\n      payload: bindActionCreators.payload\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/action/userActions.js"],"names":["GET_USER","UPDATE_USER","UPDATE_MESSAGES","GET_ALL_USERS","SEND_MESSAGE","ADD_CALENDAR_ITEM","REMOVE_CALENDAR_ITEM","ADD_TODO_ITEM","REMOVE_TODO_ITEM","axios","bindActionCreators","getAdminUser","id","dispatch","get","then","response","type","payload","data","getStudentUser","getTeacherUser","removeUserFromMessage","userId","messageId","sendMessage","message","post","getAllMessages","editUserDetails","user","addContact","deleteContact","contactId","deletePhone","number","addPhone","getAllUsers","removeCalendarItem","calendarId","addCalendarItem","calendar","addToDoItem","item","removeToDoItem","updateToDoItem","UPDATE_TODO_ITEM"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,eAAhC,EAAiDC,aAAjD,EAAgEC,YAAhE,EACIC,iBADJ,EACuBC,oBADvB,EAC6CC,aAD7C,EAC4DC,gBAD5D,QACoF,SADpF;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAIC,EAAD,IAAQC,QAAQ,IAAI;AAC5CJ,EAAAA,KAAK,CAACK,GAAN,CAAU,sCAAsCF,EAAhD,EACKG,IADL,CACUC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEjB,QADD;AAELkB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GANL;AAOH,CARM;AAUP,OAAO,MAAMC,cAAc,GAAIR,EAAD,IAAQC,QAAQ,IAAI;AAC9CJ,EAAAA,KAAK,CAACK,GAAN,CAAU,wCAAwCF,EAAlD,EACCG,IADD,CACMC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEjB,QADD;AAELkB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAME,cAAc,GAAIT,EAAD,IAAQC,QAAQ,IAAI;AAC9CJ,EAAAA,KAAK,CAACK,GAAN,CAAU,wCAAwCF,EAAlD,EACKG,IADL,CACUC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEjB,QADD;AAELkB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GANL;AAOH,CARM;AAUP,OAAO,MAAMG,qBAAqB,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuBX,QAAQ,IAAI;AACpEJ,EAAAA,KAAK,CAACK,GAAN,CAAW,wCAAuCS,MAAO,SAAQC,SAAU,GAA3E,EACCT,IADD,CACMC,QAAQ,KAAK;AACfC,IAAAA,IAAI,EAAEf,eADS;AAEfgB,IAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFH,GAAL,CADd;AAKH,CANM;AAQP,OAAO,MAAMM,WAAW,GAAIC,OAAD,IAAab,QAAQ,IAAI;AAChDJ,EAAAA,KAAK,CAACkB,IAAN,CAAW,oCAAX,EAAiDD,OAAjD,EACCX,IADD,CACMC,QAAQ,KAAK;AACfC,IAAAA,IAAI,EAAEb;AADS,GAAL,CADd;AAIE,CALC;AAOP,OAAO,MAAMwB,cAAc,GAAIhB,EAAD,IAAQC,QAAQ,IAAI;AAC9CJ,EAAAA,KAAK,CAACK,GAAN,CAAU,uCAAuCF,EAAjD,EACCG,IADD,CACMC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEf,eADD;AAELgB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GAND;AAOH,CARM,C,CAUP;;AACA,OAAO,MAAMU,eAAe,GAAIC,IAAD,IAAUjB,QAAQ,IAAI;AACjDJ,EAAAA,KAAK,CAACkB,IAAN,CAAW,2CAAX,EAAwDG,IAAxD,EACKf,IADL,CACUC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEhB,WADD;AAELiB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GANL;AAOH,CARM;AAUP,OAAO,MAAMY,UAAU,GAAID,IAAD,IAAUjB,QAAQ,IAAI;AAC5CJ,EAAAA,KAAK,CAACkB,IAAN,CAAW,wCAAX,EAAqDG,IAArD,EACKf,IADL,CACUC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEhB,WADD;AAELiB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GANL;AAOH,CARM;AAUP,OAAO,MAAMa,aAAa,GAAG,CAACC,SAAD,EAAYV,MAAZ,KAAuBV,QAAQ,IAAI;AAC5DJ,EAAAA,KAAK,CAACkB,IAAN,CAAY,wDAAuDM,SAAU,WAAUV,MAAO,EAA9F,EACKR,IADL,CACUC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEhB,WADD;AAELiB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GANL;AAOH,CARM;AAUP,OAAO,MAAMe,WAAW,GAAG,CAACC,MAAD,EAASvB,EAAT,KAAgBC,QAAQ,IAAI;AACnDJ,EAAAA,KAAK,CAACkB,IAAN,CAAY,kDAAiDQ,MAAO,WAAUvB,EAAG,EAAjF,EACKG,IADL,CACUC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEhB,WADD;AAELiB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GANL;AAOH,CARM;AAUP,OAAO,MAAMiB,QAAQ,GAAG,CAACD,MAAD,EAASvB,EAAT,KAAgBC,QAAQ,IAAI;AAChDJ,EAAAA,KAAK,CAACkB,IAAN,CAAY,+CAA8CQ,MAAO,WAAUvB,EAAG,EAA9E,EACKG,IADL,CACUC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEhB,WADD;AAELiB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAKH,GAPL;AAQH,CATM;AAWP,OAAO,MAAMkB,WAAW,GAAG,MAAMxB,QAAQ,IAAI;AACzCJ,EAAAA,KAAK,CAACK,GAAN,CAAU,gCAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEd,aADD;AAELe,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMmB,kBAAkB,GAAIC,UAAD,IAAgB1B,QAAQ,IAAI;AAC1DJ,EAAAA,KAAK,CAACK,GAAN,CAAU,mDAAmDyB,UAA7D,EACCxB,IADD,CACMC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEX,oBADD;AAELY,MAAAA,OAAO,EAAEqB;AAFJ,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAW7B,EAAX,KAAkBC,QAAQ,IAAI;AACzDJ,EAAAA,KAAK,CAACkB,IAAN,CAAY,sDAAqDf,EAAG,EAApE,EAAuE6B,QAAvE,EACC1B,IADD,CACMC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEZ,iBADD;AAELa,MAAAA,OAAO,EAAEuB;AAFJ,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU9B,QAAQ,IAAI;AAC7CJ,EAAAA,KAAK,CAACkB,IAAN,CAAW,yCAAX,EAAsDgB,IAAtD,EACC5B,IADD,CACMC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEV,aADD;AAELW,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMyB,cAAc,GAAIhC,EAAD,IAAQC,QAAQ,IAAI;AAC9CJ,EAAAA,KAAK,CAACK,GAAN,CAAU,+CAA+CF,EAAzD,EACCG,IADD,CACMC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,gBADD;AAELU,MAAAA,OAAO,EAAEN;AAFJ,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMiC,cAAc,GAAIjC,EAAD,IAAQC,QAAQ,IAAI;AAC9CJ,EAAAA,KAAK,CAACK,GAAN,CAAU,+CAA+CF,EAAzD,EACCG,IADD,CACMC,QAAQ,IAAI;AACdH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE6B,gBADD;AAEL5B,MAAAA,OAAO,EAAER,kBAAkB,CAACQ;AAFvB,KAAD,CAAR;AAIH,GAND;AAOH,CARM","sourcesContent":["import { GET_USER, UPDATE_USER, UPDATE_MESSAGES, GET_ALL_USERS, SEND_MESSAGE, \r\n    ADD_CALENDAR_ITEM, REMOVE_CALENDAR_ITEM, ADD_TODO_ITEM, REMOVE_TODO_ITEM } from './types'\r\nimport axios from 'axios'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n//dispatch is part of thunk, it sends the data off to the reducer\r\nexport const getAdminUser = (id) => dispatch => {\r\n    axios.get(\"http://localhost:8080/admin/find/\" + id)\r\n        .then(response => {\r\n            dispatch({\r\n                type: GET_USER,\r\n                payload: response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const getStudentUser = (id) => dispatch => {\r\n    axios.get(\"http://localhost:8080/student/find/\" + id)\r\n    .then(response => {\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: response.data\r\n        })\r\n    })\r\n}\r\n\r\nexport const getTeacherUser = (id) => dispatch => {\r\n    axios.get(\"http://localhost:8080/teacher/find/\" + id)\r\n        .then(response => {\r\n            dispatch({\r\n                type: GET_USER,\r\n                payload: response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const removeUserFromMessage = (userId, messageId) => dispatch => {\r\n    axios.get(`http://localhost:8080/message/remove/${userId}/from/${messageId}/`)\r\n    .then(response => ({\r\n        type: UPDATE_MESSAGES,\r\n        payload: response.data\r\n    }))\r\n}\r\n\r\nexport const sendMessage = (message) => dispatch => {\r\n    axios.post(\"http://localhost:8080/message/send\", message)\r\n    .then(response => ({\r\n        type: SEND_MESSAGE\r\n    })\r\n    )}\r\n\r\nexport const getAllMessages = (id) => dispatch => {\r\n    axios.get(\"http://localhost:8080/message/get/\" + id)\r\n    .then(response => {\r\n        dispatch({\r\n            type: UPDATE_MESSAGES,\r\n            payload: response.data\r\n        })\r\n    })\r\n}\r\n\r\n//CRUD FOR USER DETAILS\r\nexport const editUserDetails = (user) => dispatch => {\r\n    axios.post(\"http://localhost:8080/user/update/details\", user)\r\n        .then(response => {\r\n            dispatch({\r\n                type: UPDATE_USER,\r\n                payload: response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const addContact = (user) => dispatch => {\r\n    axios.post(\"http://localhost:8080/user/add/contact\", user)\r\n        .then(response => {\r\n            dispatch({\r\n                type: UPDATE_USER,\r\n                payload: response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteContact = (contactId, userId) => dispatch => {\r\n    axios.post(`http://localhost:8080/user/delete/contact/?contactId=${contactId}&userId=${userId}`)\r\n        .then(response => {\r\n            dispatch({\r\n                type: UPDATE_USER,\r\n                payload: response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const deletePhone = (number, id) => dispatch => {\r\n    axios.post(`http://localhost:8080/user/delete/phone/?phone=${number}&userId=${id}`)\r\n        .then(response => {\r\n            dispatch({\r\n                type: UPDATE_USER,\r\n                payload: response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const addPhone = (number, id) => dispatch => {\r\n    axios.post(`http://localhost:8080/user/add/phone/?phone=${number}&userId=${id}`)\r\n        .then(response => {\r\n            dispatch({\r\n                type: UPDATE_USER,\r\n                payload: response.data\r\n            })\r\n\r\n        })\r\n}\r\n\r\nexport const getAllUsers = () => dispatch => {\r\n    axios.get(\"http://localhost:8080/user/all\")\r\n    .then(response => {\r\n        dispatch({\r\n            type: GET_ALL_USERS,\r\n            payload: response.data\r\n        })\r\n    })\r\n}\r\n\r\nexport const removeCalendarItem = (calendarId) => dispatch => {\r\n    axios.get(\"http://localhost:8080/user/removeCalendarItem/\" + calendarId)\r\n    .then(response => {\r\n        dispatch({\r\n            type: REMOVE_CALENDAR_ITEM,\r\n            payload: calendarId\r\n        })\r\n    })\r\n}\r\n\r\nexport const addCalendarItem = (calendar, id) => dispatch => {\r\n    axios.post(`http://localhost:8080/user/addCalendarItem/?userId=${id}`, calendar)\r\n    .then(response => {\r\n        dispatch({\r\n            type: ADD_CALENDAR_ITEM,\r\n            payload: calendar\r\n        })\r\n    })\r\n}\r\n\r\nexport const addToDoItem = (item) => dispatch => {\r\n    axios.post(\"http://localhost:8080/user/addToDoItem/\", item)\r\n    .then(response => {\r\n        dispatch({\r\n            type: ADD_TODO_ITEM,\r\n            payload: response.data\r\n        })\r\n    })\r\n}\r\n\r\nexport const removeToDoItem = (id) => dispatch => {\r\n    axios.get(\"http://localhost:8080/user/removeToDoItem/\" + id)\r\n    .then(response => {\r\n        dispatch({\r\n            type: REMOVE_TODO_ITEM,\r\n            payload: id\r\n        })\r\n    })\r\n}\r\n\r\nexport const updateToDoItem = (id) => dispatch => {\r\n    axios.get(\"http://localhost:8080/user/updateToDoItem/\" + id)\r\n    .then(response => {\r\n        dispatch({\r\n            type: UPDATE_TODO_ITEM,\r\n            payload: bindActionCreators.payload\r\n        })\r\n    })\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}