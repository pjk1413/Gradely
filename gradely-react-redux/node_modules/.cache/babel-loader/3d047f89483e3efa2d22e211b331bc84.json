{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\GradeEntryTable.js\";\nimport _ from 'lodash';\nimport React from 'react'; //import Datasheet from 'react-datasheet'\n\nimport './gradeEntry.css';\nimport userData from '../../../data/teacher';\n\nclass GradeEntryTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.writeHeaders = this.writeHeaders.bind(this);\n    this.writeStudents = this.writeStudents.bind(this);\n    this.state = {\n      grid: [] //   grid: [\n      //     [\n      //       {readOnly: true, value: '', width: 100},\n      //       {value: 'A', readOnly: true, width: 100},\n      //       {value: 'B', readOnly: true, width: 100},\n      //       {value: 'C', readOnly: true, width: 100},\n      //       {value: 'D', readOnly: true, width: 100}\n      //     ],\n      //     [{readOnly: true, value: 1}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\n      //     [{readOnly: true, value: 2}, {value: 2}, {value: 4}, {value: 4}, {value: 4}],\n      //     [{readOnly: true, value: 3}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\n      //     [{readOnly: true, value: 4}, {value: 2}, {value: 4}, {value: 4}, {value: 4}]\n      //   ]\n\n    };\n  }\n\n  writeHeaders(assignmentList) {\n    const tempGrid = this.state.grid;\n    const headerList = assignmentList.map(course => {\n      const newValue = course.title + \" (\" + course.points + \") \" + course.type;\n      return {\n        value: newValue,\n        readOnly: true,\n        width: 100\n      };\n    });\n    headerList.unshift({\n      value: '',\n      readOnly: true,\n      width: 150\n    });\n    tempGrid.splice(0, 1, headerList);\n    this.setState({\n      grid: tempGrid\n    });\n  }\n\n  writeStudents(studentList) {}\n\n  render() {\n    const user = userData.userList[0]; //temporary\n    //this.writeHeaders(user.courseObjects[0].assignmentObjects) //Takes a list of assignment objects\n\n    this.writeStudents(user.courseObjects.studentObjects); //Takes a list of student objects\n\n    const userCourses = user.courseObjects.map(course => {\n      return course;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }) // <Datasheet\n    // className=\"table table-hover\"\n    //   data={this.state.grid}\n    //   valueRenderer={(cell) => cell.value}\n    //   onContextMenu={(e, cell, i, j) => cell.readOnly ? e.preventDefault() : null}\n    //   onCellsChanged={changes => {\n    //     const grid = this.state.grid.map(row => [...row])\n    //     changes.forEach(({cell, row, col, value}) => {\n    //       grid[row][col] = {...grid[row][col], value}\n    //     })\n    //     this.setState({grid})\n    //   }}\n    // />\n    ;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/GradeEntryTable.js"],"names":["_","React","userData","GradeEntryTable","Component","constructor","props","writeHeaders","bind","writeStudents","state","grid","assignmentList","tempGrid","headerList","map","course","newValue","title","points","type","value","readOnly","width","unshift","splice","setState","studentList","render","user","userList","courseObjects","studentObjects","userCourses"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG,CAIb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBa,KAAb;AAkBD;;AACDJ,EAAAA,YAAY,CAACK,cAAD,EAAiB;AACzB,UAAMC,QAAQ,GAAG,KAAKH,KAAL,CAAWC,IAA5B;AACA,UAAMG,UAAU,GAAGF,cAAc,CAACG,GAAf,CAAmBC,MAAM,IAAI;AAC5C,YAAMC,QAAQ,GAAGD,MAAM,CAACE,KAAP,GAAe,IAAf,GAAsBF,MAAM,CAACG,MAA7B,GAAsC,IAAtC,GAA6CH,MAAM,CAACI,IAArE;AACA,aAAO;AAACC,QAAAA,KAAK,EAAEJ,QAAR;AAAkBK,QAAAA,QAAQ,EAAE,IAA5B;AAAkCC,QAAAA,KAAK,EAAE;AAAzC,OAAP;AACH,KAHkB,CAAnB;AAKAT,IAAAA,UAAU,CAACU,OAAX,CAAmB;AAACH,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,QAAQ,EAAE,IAAtB;AAA4BC,MAAAA,KAAK,EAAE;AAAnC,KAAnB;AACAV,IAAAA,QAAQ,CAACY,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoBX,UAApB;AACA,SAAKY,QAAL,CAAc;AACZf,MAAAA,IAAI,EAAEE;AADM,KAAd;AAGH;;AAEDJ,EAAAA,aAAa,CAACkB,WAAD,EAAc,CAE1B;;AAEDC,EAAAA,MAAM,GAAI;AACR,UAAMC,IAAI,GAAG3B,QAAQ,CAAC4B,QAAT,CAAkB,CAAlB,CAAb,CADQ,CAC0B;AAElC;;AACA,SAAKrB,aAAL,CAAmBoB,IAAI,CAACE,aAAL,CAAmBC,cAAtC,EAJQ,CAI8C;;AACtD,UAAMC,WAAW,GAAGJ,IAAI,CAACE,aAAL,CAAmBhB,GAAnB,CAAuBC,MAAM,IAAI;AACjD,aAAOA,MAAP;AACH,KAFmB,CAApB;AAKA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdF;AAgBD;;AApE2C","sourcesContent":["import _ from 'lodash';\r\nimport React from 'react';\r\n//import Datasheet from 'react-datasheet'\r\nimport './gradeEntry.css'\r\nimport userData from '../../../data/teacher'\r\n\r\nclass GradeEntryTable extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.writeHeaders = this.writeHeaders.bind(this)\r\n    this.writeStudents = this.writeStudents.bind(this)\r\n    this.state = {\r\n        grid: []\r\n\r\n\r\n    //   grid: [\r\n    //     [\r\n    //       {readOnly: true, value: '', width: 100},\r\n    //       {value: 'A', readOnly: true, width: 100},\r\n    //       {value: 'B', readOnly: true, width: 100},\r\n    //       {value: 'C', readOnly: true, width: 100},\r\n    //       {value: 'D', readOnly: true, width: 100}\r\n    //     ],\r\n    //     [{readOnly: true, value: 1}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\r\n    //     [{readOnly: true, value: 2}, {value: 2}, {value: 4}, {value: 4}, {value: 4}],\r\n    //     [{readOnly: true, value: 3}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\r\n    //     [{readOnly: true, value: 4}, {value: 2}, {value: 4}, {value: 4}, {value: 4}]\r\n    //   ]\r\n    }\r\n  }\r\n  writeHeaders(assignmentList) {\r\n      const tempGrid = this.state.grid\r\n      const headerList = assignmentList.map(course => {\r\n          const newValue = course.title + \" (\" + course.points + \") \" + course.type\r\n          return {value: newValue, readOnly: true, width: 100} \r\n      })\r\n\r\n      headerList.unshift({value: '', readOnly: true, width: 150})\r\n      tempGrid.splice(0,1,headerList)\r\n      this.setState({\r\n        grid: tempGrid \r\n      })\r\n  }\r\n\r\n  writeStudents(studentList) {\r\n\r\n  }\r\n\r\n  render () {\r\n    const user = userData.userList[0] //temporary\r\n    \r\n    //this.writeHeaders(user.courseObjects[0].assignmentObjects) //Takes a list of assignment objects\r\n    this.writeStudents(user.courseObjects.studentObjects) //Takes a list of student objects\r\n    const userCourses = user.courseObjects.map(course => {\r\n        return course\r\n    })\r\n\r\n\r\n    return (\r\n      <div></div>\r\n      // <Datasheet\r\n      // className=\"table table-hover\"\r\n      //   data={this.state.grid}\r\n      //   valueRenderer={(cell) => cell.value}\r\n      //   onContextMenu={(e, cell, i, j) => cell.readOnly ? e.preventDefault() : null}\r\n      //   onCellsChanged={changes => {\r\n      //     const grid = this.state.grid.map(row => [...row])\r\n      //     changes.forEach(({cell, row, col, value}) => {\r\n      //       grid[row][col] = {...grid[row][col], value}\r\n      //     })\r\n      //     this.setState({grid})\r\n      //   }}\r\n      // />\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}