{"ast":null,"code":"import { defineGetter } from '../../../../../helpers/object';\nvar MIXIN_NAME = 'stickyColumnsLeft';\n/**\n * Mixin for the subclasses of `Table` with implementations of\n * helper methods that are related to columns.\n * This mixin is meant to be applied in the subclasses of `Table`\n * that use sticky rendering of the first columns in the horizontal axis.\n *\n * @type {Object}\n */\n\nvar stickyColumnsLeft = {\n  /**\n   * Get the source index of the first rendered column. If no columns are rendered, returns an error code: -1.\n   *\n   * @returns {Number}\n   */\n  getFirstRenderedColumn: function getFirstRenderedColumn() {\n    var totalColumns = this.wot.getSetting('totalColumns');\n\n    if (totalColumns === 0) {\n      return -1;\n    }\n\n    return 0;\n  },\n\n  /**\n   * Get the source index of the first column fully visible in the viewport. If no columns are fully visible, returns an error code: -1.\n   * Assumes that all rendered columns are fully visible.\n   *\n   * @returns {Number}\n   */\n  getFirstVisibleColumn: function getFirstVisibleColumn() {\n    return this.getFirstRenderedColumn();\n  },\n\n  /**\n   * Get the source index of the last rendered column. If no columns are rendered, returns an error code: -1.\n   *\n   * @returns {Number}\n   */\n  getLastRenderedColumn: function getLastRenderedColumn() {\n    return this.getRenderedColumnsCount() - 1;\n  },\n\n  /**\n   * Get the source index of the last column fully visible in the viewport. If no columns are fully visible, returns an error code: -1.\n   * Assumes that all rendered columns are fully visible.\n   *\n   * @returns {Number}\n   */\n  getLastVisibleColumn: function getLastVisibleColumn() {\n    return this.getLastRenderedColumn();\n  },\n\n  /**\n   * Get the number of rendered columns.\n   *\n   * @returns {Number}\n   */\n  getRenderedColumnsCount: function getRenderedColumnsCount() {\n    var totalColumns = this.wot.getSetting('totalColumns');\n    return Math.min(this.wot.getSetting('fixedColumnsLeft'), totalColumns);\n  },\n\n  /**\n   * Get the number of fully visible columns in the viewport.\n   * Assumes that all rendered columns are fully visible.\n   *\n   * @returns {Number}\n   */\n  getVisibleColumnsCount: function getVisibleColumnsCount() {\n    return this.getRenderedColumnsCount();\n  }\n};\ndefineGetter(stickyColumnsLeft, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default stickyColumnsLeft;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/3rdparty/walkontable/src/table/mixin/stickyColumnsLeft.js"],"names":["defineGetter","MIXIN_NAME","stickyColumnsLeft","getFirstRenderedColumn","totalColumns","wot","getSetting","getFirstVisibleColumn","getLastRenderedColumn","getRenderedColumnsCount","getLastVisibleColumn","Math","min","getVisibleColumnsCount","writable","enumerable"],"mappings":"AAAA,SAASA,YAAT,QAA6B,+BAA7B;AACA,IAAIC,UAAU,GAAG,mBAAjB;AACA;;;;;;;;;AASA,IAAIC,iBAAiB,GAAG;AACtB;;;;;AAKAC,EAAAA,sBAAsB,EAAE,SAASA,sBAAT,GAAkC;AACxD,QAAIC,YAAY,GAAG,KAAKC,GAAL,CAASC,UAAT,CAAoB,cAApB,CAAnB;;AAEA,QAAIF,YAAY,KAAK,CAArB,EAAwB;AACtB,aAAO,CAAC,CAAR;AACD;;AAED,WAAO,CAAP;AACD,GAdqB;;AAgBtB;;;;;;AAMAG,EAAAA,qBAAqB,EAAE,SAASA,qBAAT,GAAiC;AACtD,WAAO,KAAKJ,sBAAL,EAAP;AACD,GAxBqB;;AA0BtB;;;;;AAKAK,EAAAA,qBAAqB,EAAE,SAASA,qBAAT,GAAiC;AACtD,WAAO,KAAKC,uBAAL,KAAiC,CAAxC;AACD,GAjCqB;;AAmCtB;;;;;;AAMAC,EAAAA,oBAAoB,EAAE,SAASA,oBAAT,GAAgC;AACpD,WAAO,KAAKF,qBAAL,EAAP;AACD,GA3CqB;;AA6CtB;;;;;AAKAC,EAAAA,uBAAuB,EAAE,SAASA,uBAAT,GAAmC;AAC1D,QAAIL,YAAY,GAAG,KAAKC,GAAL,CAASC,UAAT,CAAoB,cAApB,CAAnB;AACA,WAAOK,IAAI,CAACC,GAAL,CAAS,KAAKP,GAAL,CAASC,UAAT,CAAoB,kBAApB,CAAT,EAAkDF,YAAlD,CAAP;AACD,GArDqB;;AAuDtB;;;;;;AAMAS,EAAAA,sBAAsB,EAAE,SAASA,sBAAT,GAAkC;AACxD,WAAO,KAAKJ,uBAAL,EAAP;AACD;AA/DqB,CAAxB;AAiEAT,YAAY,CAACE,iBAAD,EAAoB,YAApB,EAAkCD,UAAlC,EAA8C;AACxDa,EAAAA,QAAQ,EAAE,KAD8C;AAExDC,EAAAA,UAAU,EAAE;AAF4C,CAA9C,CAAZ;AAIA,eAAeb,iBAAf","sourcesContent":["import { defineGetter } from '../../../../../helpers/object';\nvar MIXIN_NAME = 'stickyColumnsLeft';\n/**\n * Mixin for the subclasses of `Table` with implementations of\n * helper methods that are related to columns.\n * This mixin is meant to be applied in the subclasses of `Table`\n * that use sticky rendering of the first columns in the horizontal axis.\n *\n * @type {Object}\n */\n\nvar stickyColumnsLeft = {\n  /**\n   * Get the source index of the first rendered column. If no columns are rendered, returns an error code: -1.\n   *\n   * @returns {Number}\n   */\n  getFirstRenderedColumn: function getFirstRenderedColumn() {\n    var totalColumns = this.wot.getSetting('totalColumns');\n\n    if (totalColumns === 0) {\n      return -1;\n    }\n\n    return 0;\n  },\n\n  /**\n   * Get the source index of the first column fully visible in the viewport. If no columns are fully visible, returns an error code: -1.\n   * Assumes that all rendered columns are fully visible.\n   *\n   * @returns {Number}\n   */\n  getFirstVisibleColumn: function getFirstVisibleColumn() {\n    return this.getFirstRenderedColumn();\n  },\n\n  /**\n   * Get the source index of the last rendered column. If no columns are rendered, returns an error code: -1.\n   *\n   * @returns {Number}\n   */\n  getLastRenderedColumn: function getLastRenderedColumn() {\n    return this.getRenderedColumnsCount() - 1;\n  },\n\n  /**\n   * Get the source index of the last column fully visible in the viewport. If no columns are fully visible, returns an error code: -1.\n   * Assumes that all rendered columns are fully visible.\n   *\n   * @returns {Number}\n   */\n  getLastVisibleColumn: function getLastVisibleColumn() {\n    return this.getLastRenderedColumn();\n  },\n\n  /**\n   * Get the number of rendered columns.\n   *\n   * @returns {Number}\n   */\n  getRenderedColumnsCount: function getRenderedColumnsCount() {\n    var totalColumns = this.wot.getSetting('totalColumns');\n    return Math.min(this.wot.getSetting('fixedColumnsLeft'), totalColumns);\n  },\n\n  /**\n   * Get the number of fully visible columns in the viewport.\n   * Assumes that all rendered columns are fully visible.\n   *\n   * @returns {Number}\n   */\n  getVisibleColumnsCount: function getVisibleColumnsCount() {\n    return this.getRenderedColumnsCount();\n  }\n};\ndefineGetter(stickyColumnsLeft, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default stickyColumnsLeft;"]},"metadata":{},"sourceType":"module"}