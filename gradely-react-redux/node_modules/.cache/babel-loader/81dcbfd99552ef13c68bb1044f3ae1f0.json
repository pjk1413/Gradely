{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react\\\\src\\\\components\\\\teacher\\\\CreateAssignmentForm.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass CreateAssignmentForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      assignmentTypes: [],\n      name: \"\",\n      points: \"\",\n      dueDate: \"\",\n      type: \"\"\n    };\n  }\n\n  setName(value) {\n    this.setState({\n      name: value\n    });\n  }\n\n  setDueDate(value) {\n    this.setState({\n      dueDate: value\n    });\n  }\n\n  setPoints(value) {\n    this.setState({\n      points: value\n    });\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/assignment/getTypes\").then(response => {\n      this.setState({\n        assignmentTypes: response.data\n      });\n    });\n  }\n\n  render() {\n    let date = \"\";\n\n    if (this.props.course) {\n      let temp = new Date(Date.parse(this.props.user.dob));\n      date = temp.toISOString();\n    } //Load the enum values of assignmentTypes above and create a mapping of them\n\n\n    const assignmentTypes = this.state.assignmentTypes.map(type => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }\n      }, type);\n    });\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"w-100 p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.setName(e.target.value),\n      type: \"text\",\n      value: this.state.name,\n      name: \"name\",\n      className: \"form-control\",\n      placeholder: \"Assignment Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \"Assignment Type\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      name: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, assignmentTypes))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tpointsype\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"Assignment Type\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.setPoints(e.target.value),\n      type: \"text\",\n      name: \"points\",\n      value: this.state.points,\n      className: \"form-control\",\n      placeholder: \"Total Points\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.setDueDate(e.target.value),\n      value: date ? date.substr(0, 10) : null,\n      type: \"date\",\n      className: \"form-control\",\n      id: \"inputAddress2\",\n      name: \"dob\",\n      onBlur: e => this.setDueDate(e.target.value),\n      placeholder: date ? date.substr(0, 10) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default CreateAssignmentForm;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/src/components/teacher/CreateAssignmentForm.js"],"names":["React","Component","axios","CreateAssignmentForm","constructor","state","assignmentTypes","name","points","dueDate","type","setName","value","setState","setDueDate","setPoints","componentDidMount","get","then","response","data","render","date","props","course","temp","Date","parse","user","dob","toISOString","map","e","target","substr"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nclass CreateAssignmentForm extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            assignmentTypes: [],\r\n            name: \"\",\r\n            points: \"\",\r\n            dueDate: \"\",\r\n            type: \"\"\r\n        }\r\n    }\r\n\r\n    setName(value) {\r\n        this.setState({\r\n            name: value\r\n        })\r\n    }\r\n\r\n    setDueDate(value) {\r\n        this.setState({\r\n            dueDate: value\r\n        })\r\n    }\r\n\r\n    setPoints(value) {\r\n        this.setState({\r\n            points: value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8080/assignment/getTypes\").then(response => {\r\n            this.setState({\r\n                assignmentTypes: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let date = \"\";\r\n\r\n        if (this.props.course) {\r\n            let temp = new Date(Date.parse(this.props.user.dob))\r\n            date = temp.toISOString()\r\n        }\r\n        //Load the enum values of assignmentTypes above and create a mapping of them\r\n        const assignmentTypes = this.state.assignmentTypes.map(type => {\r\n            return <option value={type}>{type}</option>\r\n        })\r\n\r\n        return (\r\n\r\n            <form className=\"w-100 p-3\">\r\n                {/* due date, description, course */}\r\n                <div className=\"row py-1\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input\r\n                            onChange={e => this.setName(e.target.value)}\r\n                            type=\"text\"\r\n                            value={this.state.name}\r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Assignment Name\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"type\">Assignment Type</label>\r\n                        <select className=\"custom-select\" name=\"type\">\r\n                            {assignmentTypes}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row py-1\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"tpointsype\">Assignment Type</label>\r\n                        <input\r\n                            onChange={e => this.setPoints(e.target.value)}\r\n                            \r\n                            type=\"text\"\r\n                            name=\"points\"\r\n                            value={this.state.points}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Total Points\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input\r\n                            onChange={e => this.setDueDate(e.target.value)}\r\n                            value={date ? date.substr(0, 10) : null}\r\n                            type=\"date\" className=\"form-control\"\r\n                            id=\"inputAddress2\"\r\n                            name=\"dob\"\r\n                            onBlur={e => this.setDueDate(e.target.value)}\r\n                            placeholder={date ? date.substr(0, 10) : \"\"} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateAssignmentForm;"]},"metadata":{},"sourceType":"module"}