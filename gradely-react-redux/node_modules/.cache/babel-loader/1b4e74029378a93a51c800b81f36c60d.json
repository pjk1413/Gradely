{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport { connect } from \"unistore/react\";\nimport * as Matrix from \"./matrix\";\nimport * as Actions from \"./actions\";\nimport * as Types from \"./types\";\nimport { getCellDimensions } from \"./util\";\n\nvar ActiveCell = /*#__PURE__*/function (_Component) {\n  _inherits(ActiveCell, _Component);\n\n  function ActiveCell() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ActiveCell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ActiveCell)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cellBeforeUpdate: null\n    };\n\n    _this.handleChange = function (row, column, cell) {\n      var _this$props = _this.props,\n          setCellData = _this$props.setCellData,\n          getBindingsForCell = _this$props.getBindingsForCell;\n      var bindings = getBindingsForCell(cell);\n      setCellData({\n        row: row,\n        column: column\n      }, cell, bindings);\n    };\n\n    return _this;\n  }\n\n  _createClass(ActiveCell, [{\n    key: \"componentDidUpdate\",\n    // NOTE: Currently all logics here belongs to commit event\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          cell = _this$props2.cell,\n          mode = _this$props2.mode,\n          commit = _this$props2.commit;\n\n      if (cell || cell === undefined) {\n        if (prevProps.mode === \"view\" && mode === \"edit\") {\n          this.setState({\n            cellBeforeUpdate: prevProps.cell\n          });\n        } else if (prevProps.mode === \"edit\" && prevProps.mode !== this.props.mode && prevProps.cell && prevProps.cell !== this.state.cellBeforeUpdate) {\n          commit([{\n            prevCell: this.state.cellBeforeUpdate,\n            nextCell: prevProps.cell\n          }]);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var DataEditor = this.props.DataEditor;\n      var _this$props3 = this.props,\n          getValue = _this$props3.getValue,\n          row = _this$props3.row,\n          column = _this$props3.column,\n          cell = _this$props3.cell,\n          width = _this$props3.width,\n          height = _this$props3.height,\n          top = _this$props3.top,\n          left = _this$props3.left,\n          hidden = _this$props3.hidden,\n          mode = _this$props3.mode,\n          edit = _this$props3.edit;\n      DataEditor = cell && cell.DataEditor || DataEditor;\n      var readOnly = cell && cell.readOnly;\n      return hidden ? null : React.createElement(\"div\", {\n        className: classnames(\"ActiveCell\", mode),\n        style: {\n          width: width,\n          height: height,\n          top: top,\n          left: left\n        },\n        onClick: mode === \"view\" && !readOnly ? edit : undefined\n      }, mode === \"edit\" && React.createElement(DataEditor, {\n        row: row,\n        column: column,\n        cell: cell,\n        onChange: function onChange(cell) {\n          return _this2.handleChange(row, column, cell);\n        },\n        getValue: getValue\n      }));\n    }\n  }]);\n\n  return ActiveCell;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var dimensions = state.active && getCellDimensions(state.active, state);\n\n  if (!state.active || !dimensions) {\n    return {\n      hidden: true\n    };\n  }\n\n  return _objectSpread({\n    hidden: false\n  }, state.active, {\n    // $FlowFixMe\n    cell: Matrix.get(state.active.row, state.active.column, state.data),\n    width: dimensions.width,\n    height: dimensions.height,\n    top: dimensions.top,\n    left: dimensions.left,\n    mode: state.mode\n  });\n};\n\nexport default connect(mapStateToProps, {\n  setCellData: Actions.setCellData,\n  edit: Actions.edit,\n  commit: Actions.commit\n})(ActiveCell);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/react-spreadsheet/dist/ActiveCell.js"],"names":["_objectSpread","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","React","Component","classnames","connect","Matrix","Actions","Types","getCellDimensions","ActiveCell","_Component","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","cellBeforeUpdate","handleChange","row","column","cell","_this$props","props","setCellData","getBindingsForCell","bindings","key","value","componentDidUpdate","prevProps","_this$props2","mode","commit","undefined","setState","prevCell","nextCell","render","_this2","DataEditor","_this$props3","getValue","width","height","top","left","hidden","edit","readOnly","createElement","className","style","onClick","onChange","mapStateToProps","dimensions","active","get","data"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport { connect } from \"unistore/react\";\nimport * as Matrix from \"./matrix\";\nimport * as Actions from \"./actions\";\nimport * as Types from \"./types\";\nimport { getCellDimensions } from \"./util\";\n\nvar ActiveCell = /*#__PURE__*/function (_Component) {\n  _inherits(ActiveCell, _Component);\n\n  function ActiveCell() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ActiveCell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ActiveCell)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cellBeforeUpdate: null\n    };\n\n    _this.handleChange = function (row, column, cell) {\n      var _this$props = _this.props,\n          setCellData = _this$props.setCellData,\n          getBindingsForCell = _this$props.getBindingsForCell;\n      var bindings = getBindingsForCell(cell);\n      setCellData({\n        row: row,\n        column: column\n      }, cell, bindings);\n    };\n\n    return _this;\n  }\n\n  _createClass(ActiveCell, [{\n    key: \"componentDidUpdate\",\n    // NOTE: Currently all logics here belongs to commit event\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          cell = _this$props2.cell,\n          mode = _this$props2.mode,\n          commit = _this$props2.commit;\n\n      if (cell || cell === undefined) {\n        if (prevProps.mode === \"view\" && mode === \"edit\") {\n          this.setState({\n            cellBeforeUpdate: prevProps.cell\n          });\n        } else if (prevProps.mode === \"edit\" && prevProps.mode !== this.props.mode && prevProps.cell && prevProps.cell !== this.state.cellBeforeUpdate) {\n          commit([{\n            prevCell: this.state.cellBeforeUpdate,\n            nextCell: prevProps.cell\n          }]);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var DataEditor = this.props.DataEditor;\n      var _this$props3 = this.props,\n          getValue = _this$props3.getValue,\n          row = _this$props3.row,\n          column = _this$props3.column,\n          cell = _this$props3.cell,\n          width = _this$props3.width,\n          height = _this$props3.height,\n          top = _this$props3.top,\n          left = _this$props3.left,\n          hidden = _this$props3.hidden,\n          mode = _this$props3.mode,\n          edit = _this$props3.edit;\n      DataEditor = cell && cell.DataEditor || DataEditor;\n      var readOnly = cell && cell.readOnly;\n      return hidden ? null : React.createElement(\"div\", {\n        className: classnames(\"ActiveCell\", mode),\n        style: {\n          width: width,\n          height: height,\n          top: top,\n          left: left\n        },\n        onClick: mode === \"view\" && !readOnly ? edit : undefined\n      }, mode === \"edit\" && React.createElement(DataEditor, {\n        row: row,\n        column: column,\n        cell: cell,\n        onChange: function onChange(cell) {\n          return _this2.handleChange(row, column, cell);\n        },\n        getValue: getValue\n      }));\n    }\n  }]);\n\n  return ActiveCell;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var dimensions = state.active && getCellDimensions(state.active, state);\n\n  if (!state.active || !dimensions) {\n    return {\n      hidden: true\n    };\n  }\n\n  return _objectSpread({\n    hidden: false\n  }, state.active, {\n    // $FlowFixMe\n    cell: Matrix.get(state.active.row, state.active.column, state.data),\n    width: dimensions.width,\n    height: dimensions.height,\n    top: dimensions.top,\n    left: dimensions.left,\n    mode: state.mode\n  });\n};\n\nexport default connect(mapStateToProps, {\n  setCellData: Actions.setCellData,\n  edit: Actions.edit,\n  commit: Actions.commit\n})(ActiveCell);"]},"metadata":{},"sourceType":"module"}