{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Datasheet from 'react-datasheet';\nimport './gradeEntry.css';\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.state = {\n      grid: [[{\n        readOnly: true,\n        value: '',\n        width: 100\n      }, {\n        value: 'A',\n        readOnly: true,\n        width: 100\n      }, {\n        value: 'B',\n        readOnly: true,\n        width: 100\n      }, {\n        value: 'C',\n        readOnly: true,\n        width: 100\n      }, {\n        value: 'D',\n        readOnly: true,\n        width: 100\n      }], [{\n        readOnly: true,\n        value: 1\n      }, {\n        value: 1\n      }, {\n        value: 3\n      }, {\n        value: 3\n      }, {\n        value: 3\n      }], [{\n        readOnly: true,\n        value: 2\n      }, {\n        value: 2\n      }, {\n        value: 4\n      }, {\n        value: 4\n      }, {\n        value: 4\n      }], [{\n        readOnly: true,\n        value: 3\n      }, {\n        value: 1\n      }, {\n        value: 3\n      }, {\n        value: 3\n      }, {\n        value: 3\n      }], [{\n        readOnly: true,\n        value: 4\n      }, {\n        value: 2\n      }, {\n        value: 4\n      }, {\n        value: 4\n      }, {\n        value: 4\n      }]]\n    };\n  }\n\n  componentWillReceiveProps() {}\n\n  render() {\n    //console.log(this.props.editCourse)\n    //const headers = [ {}, {}]\n    //provides all of the assignment headers\n    let headers = [{\n      readOnly: true,\n      value: '',\n      width: 100\n    }];\n    this && this.props && this.props.editCourse && this.props.editCourse && this.props.editCourse.assignments.forEach(assignment => {\n      headers.push({\n        readOnly: true,\n        id: assignment.id,\n        value: assignment.name + \" \" + assignment.totalPoints,\n        width: 100\n      });\n    });\n    this.props.editCourse && this.props.editCourse.students.map(student => {\n      for (let index = 0; index < headers.length; index++) {\n        //const element = array[index];\n        console.log(index);\n      } //student.assignmentScores\n\n    });\n    let students = [{\n      readOnly: true,\n      value: '',\n      width: 100\n    }];\n    let tempGrid = [headers, [{\n      readOnly: true,\n      value: 1\n    }, {\n      value: 1\n    }, {\n      value: 3\n    }, {\n      value: 3\n    }, {\n      value: 3\n    }], [{\n      readOnly: true,\n      value: 2\n    }, {\n      value: 2\n    }, {\n      value: 4\n    }, {\n      value: 4\n    }, {\n      value: 4\n    }], [{\n      readOnly: true,\n      value: 3\n    }, {\n      value: 1\n    }, {\n      value: 3\n    }, {\n      value: 3\n    }, {\n      value: 3\n    }], [{\n      readOnly: true,\n      value: 4\n    }, {\n      value: 2\n    }, {\n      value: 4\n    }, {\n      value: 4\n    }, {\n      value: 4\n    }]];\n    console.log(headers[1] && headers[1].id);\n    return (\n      /*#__PURE__*/\n      // <div></div>\n      React.createElement(Datasheet, {\n        className: \"table table-hover\",\n        data: tempGrid,\n        valueRenderer: cell => cell.value,\n        onContextMenu: (e, cell, i, j) => cell.readOnly ? e.preventDefault() : null,\n        onCellsChanged: changes => {\n          const grid = tempGrid.map(row => [...row]);\n          changes.forEach(({\n            cell,\n            row,\n            col,\n            value\n          }) => {\n            grid[row][col] = { ...grid[row][col],\n              value\n            };\n          });\n          this.setState({\n            grid\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      })\n    );\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  temp: state.temp.grid\n});\n\nexport default connect(mapStateToProps, {})(Table);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/Table.js"],"names":["_","React","connect","Datasheet","Table","Component","constructor","props","state","grid","readOnly","value","width","componentWillReceiveProps","render","headers","editCourse","assignments","forEach","assignment","push","id","name","totalPoints","students","map","student","index","length","console","log","tempGrid","cell","e","i","j","preventDefault","changes","row","col","setState","mapStateToProps","temp"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Datasheet from 'react-datasheet'\r\nimport './gradeEntry.css'\r\n\r\nclass Table extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n\r\n    }\r\n    this.state = {\r\n      grid: [\r\n        [\r\n          {readOnly: true, value: '', width: 100},\r\n          {value: 'A', readOnly: true, width: 100},\r\n          {value: 'B', readOnly: true, width: 100},\r\n          {value: 'C', readOnly: true, width: 100},\r\n          {value: 'D', readOnly: true, width: 100}\r\n        ],\r\n        [{readOnly: true, value: 1}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\r\n        [{readOnly: true, value: 2}, {value: 2}, {value: 4}, {value: 4}, {value: 4}],\r\n        [{readOnly: true, value: 3}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\r\n        [{readOnly: true, value: 4}, {value: 2}, {value: 4}, {value: 4}, {value: 4}]\r\n      ]\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n\r\n  }\r\n\r\n\r\n\r\n  render () {\r\n    //console.log(this.props.editCourse)\r\n    //const headers = [ {}, {}]\r\n    //provides all of the assignment headers\r\n    let headers = [{readOnly: true, value: '', width: 100}]\r\n    this && this.props && this.props.editCourse && this.props.editCourse && this.props.editCourse.assignments.forEach(assignment => {\r\n      headers.push({readOnly: true, id: assignment.id, value: assignment.name + \" \" + assignment.totalPoints, width: 100})\r\n    });\r\n\r\n\r\n    this.props.editCourse && this.props.editCourse.students.map(student => {\r\n      for (let index = 0; index < headers.length; index++) {\r\n        //const element = array[index];\r\n        console.log(index)\r\n      }\r\n      //student.assignmentScores\r\n    })\r\n    \r\n    let students = [{readOnly: true, value: '', width: 100}]\r\n    \r\n   \r\n    let tempGrid = [\r\n      headers,\r\n      [{readOnly: true, value: 1}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\r\n      [{readOnly: true, value: 2}, {value: 2}, {value: 4}, {value: 4}, {value: 4}],\r\n      [{readOnly: true, value: 3}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\r\n      [{readOnly: true, value: 4}, {value: 2}, {value: 4}, {value: 4}, {value: 4}]\r\n    ]\r\n    console.log(headers[1] && headers[1].id)\r\n    return (\r\n      // <div></div>\r\n      <Datasheet\r\n      className=\"table table-hover\"\r\n        data={tempGrid}\r\n        valueRenderer={(cell) => cell.value}\r\n        onContextMenu={(e, cell, i, j) => cell.readOnly ? e.preventDefault() : null}\r\n        onCellsChanged={changes => {\r\n          const grid = tempGrid.map(row => [...row])\r\n          changes.forEach(({cell, row, col, value}) => {\r\n            grid[row][col] = {...grid[row][col], value}\r\n          })\r\n          this.setState({grid})\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  editCourse: state.temp.editCourse,\r\n  temp: state.temp.grid\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Table)\r\n"]},"metadata":{},"sourceType":"module"}