{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\teacher\\\\CreateAssignmentForm.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass CreateAssignmentForm extends Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      assignmentTypes: [],\n      name: \"\",\n      points: \"\",\n      dueDate: \"\",\n      type: \"\"\n    };\n  }\n\n  onChange(e) {\n    this.setState({});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (!this.props.selectedCourse.id) {\n      alert(\"Please select a course\");\n    } else {\n      console.log(this.props.selectedCourse.id);\n      const assignment = {\n        name: this.state.name,\n        description: this.state.description,\n        dueDate: this.state.dueDate,\n        totalPoints: this.state.points,\n        assignmentType: this.state.type ? this.state.type : document.getElementById(\"assignmentType\").value,\n        course: this.props.selectedCourse\n      };\n      axios.post(`http://localhost:8080/course/assignment/new?courseId=${this.props.selectedCourse.id}`, assignment).then(response => {\n        console.log(response.data);\n      });\n    }\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/assignment/getTypes\").then(response => {\n      this.setState({\n        assignmentTypes: response.data\n      });\n    });\n  }\n\n  render() {\n    let date = \"\";\n    const assignmentTypes = this.state.assignmentTypes.map(type => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }\n      }, type);\n    });\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"w-100 p-3\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.setName(e.target.value),\n      type: \"text\" //value={this.state.name}\n      ,\n      name: \"name\",\n      className: \"form-control\",\n      placeholder: \"Assignment Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"assignmentType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Assignment Type\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.setType(e.target.value),\n      className: \"custom-select\",\n      name: \"assignmentType\",\n      id: \"assignmentType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, assignmentTypes))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"points\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Points\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.setPoints(e.target.value),\n      type: \"text\",\n      name: \"points\" //value={this.state.points}\n      ,\n      className: \"form-control\",\n      placeholder: \"Total Points\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"dueDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"Due Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.setDueDate(e.target.value) //value={date ? date.substr(0, 10) : null}\n      ,\n      type: \"date\",\n      className: \"form-control\",\n      id: \"inputAddress2\",\n      name: \"dueDate\",\n      onBlur: e => this.setDueDate(e.target.value),\n      placeholder: date ? date.substr(0, 10) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.setDescription(e.target.value) //value={this.state.description}\n      ,\n      type: \"text\",\n      className: \"form-control\",\n      id: \"description\",\n      name: \"description\",\n      placeholder: \"Assignment Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"btn btn-primary mt-2\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default CreateAssignmentForm;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/teacher/CreateAssignmentForm.js"],"names":["React","Component","axios","CreateAssignmentForm","constructor","handleSubmit","bind","state","assignmentTypes","name","points","dueDate","type","onChange","e","setState","event","preventDefault","props","selectedCourse","id","alert","console","log","assignment","description","totalPoints","assignmentType","document","getElementById","value","course","post","then","response","data","componentDidMount","get","render","date","map","setName","target","setType","setPoints","setDueDate","substr","setDescription"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nclass CreateAssignmentForm extends Component {\r\n    constructor() {\r\n        super()\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.state = {\r\n            assignmentTypes: [],\r\n            name: \"\",\r\n            points: \"\",\r\n            dueDate: \"\",\r\n            type: \"\"\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            \r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        if (!this.props.selectedCourse.id) {\r\n            alert(\"Please select a course\")\r\n        } else {\r\n            console.log(this.props.selectedCourse.id)\r\n            const assignment = {\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                dueDate: this.state.dueDate,\r\n                totalPoints: this.state.points,\r\n                assignmentType: this.state.type ? this.state.type : document.getElementById(\"assignmentType\").value,\r\n                course: this.props.selectedCourse\r\n            }\r\n            \r\n            axios.post(`http://localhost:8080/course/assignment/new?courseId=${this.props.selectedCourse.id}`, assignment).then(response => {\r\n                console.log(response.data)\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8080/assignment/getTypes\").then(response => {\r\n            this.setState({\r\n                assignmentTypes: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let date = \"\";\r\n\r\n        const assignmentTypes = this.state.assignmentTypes.map(type => {\r\n            return <option value={type}>{type}</option>\r\n        })\r\n\r\n        return (\r\n\r\n            <form className=\"w-100 p-3\" onSubmit={this.handleSubmit}>\r\n                {/* due date, description, course */}\r\n                <div className=\"row py-1\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input\r\n                            onChange={e => this.setName(e.target.value)}\r\n                            type=\"text\"\r\n                            //value={this.state.name}\r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Assignment Name\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"assignmentType\">Assignment Type</label>\r\n                        <select onChange={e => this.setType(e.target.value)} className=\"custom-select\" name=\"assignmentType\" id=\"assignmentType\">\r\n                            {assignmentTypes}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row py-1\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"points\">Points</label>\r\n                        <input\r\n                            onChange={e => this.setPoints(e.target.value)}\r\n                            type=\"text\"\r\n                            name=\"points\"\r\n                            //value={this.state.points}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Total Points\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"dueDate\">Due Date</label>\r\n                        <input\r\n                            onChange={e => this.setDueDate(e.target.value)}\r\n                            //value={date ? date.substr(0, 10) : null}\r\n                            type=\"date\" className=\"form-control\"\r\n                            id=\"inputAddress2\"\r\n                            name=\"dueDate\"\r\n                            onBlur={e => this.setDueDate(e.target.value)}\r\n                            placeholder={date ? date.substr(0, 10) : \"\"} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row py-1\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"description\">Description</label>\r\n                        <input\r\n                            onChange={e => this.setDescription(e.target.value)}\r\n                            //value={this.state.description}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            placeholder=\"Assignment Description\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <label htmlFor=\"description\"></label>\r\n                        <input className=\"btn btn-primary mt-2\" type=\"submit\" />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateAssignmentForm;"]},"metadata":{},"sourceType":"module"}