{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport React, { Component } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport 'handsontable/dist/handsontable.full.css';\nimport { connect } from 'react-redux';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidUpdate() {\n    let columnLabels = [];\n    let colHeaders = this.props.editCourse && this.props.editCourse.assignments.map(assignment => {\n      columnLabels.push({\n        data: assignment.id\n      });\n      return assignment.name + \" (\" + assignment.totalPoints + \")\";\n    });\n    let rowLabels = [];\n    let rowHeaders = this.props.editCourse && this.props.editCourse.studentList.map(student => {\n      rowLabels.push({\n        data: student.id\n      });\n      return student.user.firstName + \" \" + student.user.lastName;\n    });\n\n    for (let index = 0; index < array.length; index++) {\n      const element = array[index];\n    } //give us all assignments\n\n\n    const studentArray = columnLabels.map(assignment => {}); //Each array is a series of scores from assignments based on studentid and assignmentid \n\n    let data = [[], [], []];\n  }\n\n  render() {\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      data: this.data,\n      colHeaders: colHeaders,\n      rowHeaders: rowHeaders,\n      rowHeaderWidth: 150,\n      columns: columnLabels,\n      row: rowLabels,\n      // width: \"600\", \n      // height: \"300\",\n      headerTooltips: {\n        rows: true,\n        columns: true,\n        onlyTrimmed: false\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hot-app\",\n      className: \"table table-hover table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HotTable, {\n      id: \"example1\",\n      className: \"my-3\",\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  grid: state.temp.grid\n});\n\nexport default connect(mapStateToProps, {})(Table);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/Table.js"],"names":["React","Component","HotTable","connect","Table","constructor","state","componentDidUpdate","columnLabels","colHeaders","props","editCourse","assignments","map","assignment","push","data","id","name","totalPoints","rowLabels","rowHeaders","studentList","student","user","firstName","lastName","index","array","length","element","studentArray","render","settings","licenseKey","rowHeaderWidth","columns","row","headerTooltips","rows","onlyTrimmed","mapStateToProps","temp","grid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { HotTable } from '@handsontable/react'\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport 'handsontable/dist/handsontable.full.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Table extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let columnLabels = []\r\n        let colHeaders = this.props.editCourse && this.props.editCourse.assignments.map(assignment => {\r\n            columnLabels.push({data: assignment.id})\r\n            return assignment.name + \" (\" + assignment.totalPoints + \")\"\r\n        })\r\n        \r\n        let rowLabels = []\r\n        let rowHeaders = this.props.editCourse && this.props.editCourse.studentList.map(student => {\r\n            rowLabels.push({data: student.id})\r\n            return student.user.firstName + \" \" + student.user.lastName\r\n        })\r\n\r\n        for (let index = 0; index < array.length; index++) {\r\n            const element = array[index];\r\n            \r\n        }\r\n        //give us all assignments\r\n        const studentArray = columnLabels.map(assignment => {\r\n\r\n        })\r\n        //Each array is a series of scores from assignments based on studentid and assignmentid \r\n        let data = [\r\n            [],[],[]\r\n        ]\r\n    }\r\n    \r\n\r\n    render() {\r\n        \r\n        const settings = {\r\n            licenseKey: 'non-commercial-and-evaluation',\r\n            data: this.data,\r\n            colHeaders: colHeaders,\r\n            rowHeaders: rowHeaders,\r\n            rowHeaderWidth: 150,\r\n            columns: columnLabels,\r\n            row: rowLabels,\r\n            // width: \"600\", \r\n            // height: \"300\",\r\n            headerTooltips: {\r\n                rows: true,\r\n                columns: true,\r\n                onlyTrimmed: false\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id=\"hot-app\" className=\"table table-hover table-sm\">\r\n                <HotTable id=\"example1\" className=\"my-3\" settings={settings} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    editCourse: state.temp.editCourse,\r\n    grid: state.temp.grid,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Table)"]},"metadata":{},"sourceType":"module"}