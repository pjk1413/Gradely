{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport ColumnSorting from '../columnSorting/columnSorting';\nimport { registerRootComparator } from '../columnSorting/sortService';\nimport { wasHeaderClickedProperly } from '../columnSorting/utils';\nimport { registerPlugin } from '../../plugins';\nimport { isPressedCtrlKey } from '../../utils/keyStateObserver';\nimport { addClass, removeClass } from '../../helpers/dom/element';\nimport { rootComparator } from './rootComparator';\nimport { warnAboutPluginsConflict } from './utils';\nimport { getClassesToAdd, getClassedToRemove } from './domHelpers';\nvar APPEND_COLUMN_CONFIG_STRATEGY = 'append';\nvar PLUGIN_KEY = 'multiColumnSorting';\nvar CONFLICTED_PLUGIN_KEY = 'columnSorting';\nregisterRootComparator(PLUGIN_KEY, rootComparator);\n/**\n * @plugin MultiColumnSorting\n * @dependencies ColumnSorting\n *\n * @description\n * This plugin sorts the view by columns (but does not sort the data source!). To enable the plugin, set the\n * {@link Options#multiColumnSorting} property to the correct value (see the examples below).\n *\n * @example\n * ```js\n * // as boolean\n * multiColumnSorting: true\n *\n * // as an object with initial sort config (sort ascending for column at index 1 and then sort descending for column at index 0)\n * multiColumnSorting: {\n *   initialConfig: [{\n *     column: 1,\n *     sortOrder: 'asc'\n *   }, {\n *     column: 0,\n *     sortOrder: 'desc'\n *   }]\n * }\n *\n * // as an object which define specific sorting options for all columns\n * multiColumnSorting: {\n *   sortEmptyCells: true, // true = the table sorts empty cells, false = the table moves all empty cells to the end of the table (by default)\n *   indicator: true, // true = shows indicator for all columns (by default), false = don't show indicator for columns\n *   headerAction: true, // true = allow to click on the headers to sort (by default), false = turn off possibility to click on the headers to sort\n *   compareFunctionFactory: function(sortOrder, columnMeta) {\n *     return function(value, nextValue) {\n *       // Some value comparisons which will return -1, 0 or 1...\n *     }\n *   }\n * }\n *\n * // as an object passed to the `column` property, allows specifying a custom options for the desired column.\n * // please take a look at documentation of `column` property: https://docs.handsontable.com/pro/Options.html#columns\n * columns: [{\n *   multiColumnSorting: {\n *     indicator: false, // disable indicator for the first column,\n *     sortEmptyCells: true,\n *     headerAction: false, // clicks on the first column won't sort\n *     compareFunctionFactory: function(sortOrder, columnMeta) {\n *       return function(value, nextValue) {\n *         return 0; // Custom compare function for the first column (don't sort)\n *       }\n *     }\n *   }\n * }]```\n *\n * @dependencies ObserveChanges\n */\n\nvar MultiColumnSorting = /*#__PURE__*/function (_ColumnSorting) {\n  _inherits(MultiColumnSorting, _ColumnSorting);\n\n  function MultiColumnSorting(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, MultiColumnSorting);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiColumnSorting).call(this, hotInstance));\n    /**\n     * Main settings key designed for the plugin.\n     *\n     * @private\n     * @type {String}\n     */\n\n    _this.pluginKey = PLUGIN_KEY;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the Handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link MultiColumnSorting#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(MultiColumnSorting, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"isEnabled\", this).call(this);\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      if (!this.enabled && this.hot.getSettings()[this.pluginKey] && this.hot.getSettings()[CONFLICTED_PLUGIN_KEY]) {\n        warnAboutPluginsConflict();\n      }\n\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Sorts the table by chosen columns and orders.\n     *\n     * @param {undefined|Object|Array} sortConfig Single column sort configuration or full sort configuration (for all sorted columns).\n     * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n     * sort order (`asc` for ascending, `desc` for descending).\n     *\n     * **Note**: Please keep in mind that every call of `sort` function set an entirely new sort order. Previous sort configs aren't preserved.\n     *\n     * @example\n     * ```js\n     * // sort ascending first visual column\n     * hot.getPlugin('multiColumnSorting').sort({ column: 0, sortOrder: 'asc' });\n     *\n     * // sort first two visual column in the defined sequence\n     * hot.getPlugin('multiColumnSorting').sort([{\n     *   column: 1, sortOrder: 'asc'\n     * }, {\n     *   column: 0, sortOrder: 'desc'\n     * }]);\n     * ```\n     *\n     * @fires Hooks#beforeColumnSort\n     * @fires Hooks#afterColumnSort\n     */\n\n  }, {\n    key: \"sort\",\n    value: function sort(sortConfig) {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"sort\", this).call(this, sortConfig);\n    }\n    /**\n     * Clear the sort performed on the table.\n     */\n\n  }, {\n    key: \"clearSort\",\n    value: function clearSort() {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"clearSort\", this).call(this);\n    }\n    /**\n     * Checks if the table is sorted (any column have to be sorted).\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isSorted\",\n    value: function isSorted() {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"isSorted\", this).call(this);\n    }\n    /**\n     * Get sort configuration for particular column or for all sorted columns. Objects contain `column` and `sortOrder` properties.\n     *\n     * **Note**: Please keep in mind that returned objects expose **visual** column index under the `column` key. They are handled by the `sort` function.\n     *\n     * @param {Number} [column] Visual column index.\n     * @returns {undefined|Object|Array}\n     */\n\n  }, {\n    key: \"getSortConfig\",\n    value: function getSortConfig(column) {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"getSortConfig\", this).call(this, column);\n    }\n    /**\n     * @description\n     * Warn: Useful mainly for providing server side sort implementation (see in the example below). It doesn't sort the data set. It just sets sort configuration for all sorted columns.\n     * Note: Please keep in mind that this method doesn't re-render the table.\n     *\n     * @example\n     * ```js\n     * beforeColumnSort: function(currentSortConfig, destinationSortConfigs) {\n     *   const columnSortPlugin = this.getPlugin('multiColumnSorting');\n     *\n     *   columnSortPlugin.setSortConfig(destinationSortConfigs);\n     *\n     *   // const newData = ... // Calculated data set, ie. from an AJAX call.\n     *\n     *   this.loadData(newData); // Load new data set and re-render the table.\n     *\n     *   return false; // The blockade for the default sort action.\n     * }```\n     *\n     * @param {undefined|Object|Array} sortConfig Single column sort configuration or full sort configuration (for all sorted columns).\n     * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n     * sort order (`asc` for ascending, `desc` for descending).\n     */\n\n  }, {\n    key: \"setSortConfig\",\n    value: function setSortConfig(sortConfig) {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"setSortConfig\", this).call(this, sortConfig);\n    }\n    /**\n     * Get normalized sort configs.\n     *\n     * @private\n     * @param {Object|Array} [sortConfig=[]] Single column sort configuration or full sort configuration (for all sorted columns).\n     * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n     * sort order (`asc` for ascending, `desc` for descending).\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getNormalizedSortConfigs\",\n    value: function getNormalizedSortConfigs() {\n      var sortConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (Array.isArray(sortConfig)) {\n        return sortConfig;\n      }\n\n      return [sortConfig];\n    }\n    /**\n     * Update header classes.\n     *\n     * @private\n     * @param {HTMLElement} headerSpanElement Header span element.\n     * @param {...*} args Extra arguments for helpers.\n     */\n\n  }, {\n    key: \"updateHeaderClasses\",\n    value: function updateHeaderClasses(headerSpanElement) {\n      var _get2;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_get2 = _get(_getPrototypeOf(MultiColumnSorting.prototype), \"updateHeaderClasses\", this)).call.apply(_get2, [this, headerSpanElement].concat(args));\n\n      removeClass(headerSpanElement, getClassedToRemove(headerSpanElement));\n\n      if (this.enabled !== false) {\n        addClass(headerSpanElement, getClassesToAdd.apply(void 0, args));\n      }\n    }\n    /**\n     * Overwriting base plugin's `onUpdateSettings` method. Please keep in mind that `onAfterUpdateSettings` isn't called\n     * for `updateSettings` in specific situations.\n     *\n     * @private\n     * @param {Object} newSettings New settings object.\n     */\n\n  }, {\n    key: \"onUpdateSettings\",\n    value: function onUpdateSettings(newSettings) {\n      if (this.hot.getSettings()[this.pluginKey] && this.hot.getSettings()[CONFLICTED_PLUGIN_KEY]) {\n        warnAboutPluginsConflict();\n      }\n\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"onUpdateSettings\", this).call(this, newSettings);\n    }\n    /**\n     * Callback for the `onAfterOnCellMouseDown` hook.\n     *\n     * @private\n     * @param {Event} event Event which are provided by hook.\n     * @param {CellCoords} coords Visual coords of the selected cell.\n     */\n\n  }, {\n    key: \"onAfterOnCellMouseDown\",\n    value: function onAfterOnCellMouseDown(event, coords) {\n      if (wasHeaderClickedProperly(coords.row, coords.col, event) === false) {\n        return;\n      }\n\n      if (this.wasClickableHeaderClicked(event, coords.col)) {\n        if (isPressedCtrlKey()) {\n          this.hot.deselectCell();\n          this.hot.selectColumns(coords.col);\n          this.sort(this.getNextSortConfig(coords.col, APPEND_COLUMN_CONFIG_STRATEGY));\n        } else {\n          this.sort(this.getColumnNextConfig(coords.col));\n        }\n      }\n    }\n  }]);\n\n  return MultiColumnSorting;\n}(ColumnSorting);\n\nregisterPlugin(PLUGIN_KEY, MultiColumnSorting);\nexport default MultiColumnSorting;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/plugins/multiColumnSorting/multiColumnSorting.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","value","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","ColumnSorting","registerRootComparator","wasHeaderClickedProperly","registerPlugin","isPressedCtrlKey","addClass","removeClass","rootComparator","warnAboutPluginsConflict","getClassesToAdd","getClassedToRemove","APPEND_COLUMN_CONFIG_STRATEGY","PLUGIN_KEY","CONFLICTED_PLUGIN_KEY","MultiColumnSorting","_ColumnSorting","hotInstance","_this","pluginKey","isEnabled","enablePlugin","enabled","hot","getSettings","disablePlugin","sort","sortConfig","clearSort","isSorted","getSortConfig","column","setSortConfig","getNormalizedSortConfigs","arguments","undefined","Array","isArray","updateHeaderClasses","headerSpanElement","_get2","_len","args","_key","apply","concat","onUpdateSettings","newSettings","onAfterOnCellMouseDown","event","coords","row","col","wasClickableHeaderClicked","deselectCell","selectColumns","getNextSortConfig","getColumnNextConfig"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.sort\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport ColumnSorting from '../columnSorting/columnSorting';\nimport { registerRootComparator } from '../columnSorting/sortService';\nimport { wasHeaderClickedProperly } from '../columnSorting/utils';\nimport { registerPlugin } from '../../plugins';\nimport { isPressedCtrlKey } from '../../utils/keyStateObserver';\nimport { addClass, removeClass } from '../../helpers/dom/element';\nimport { rootComparator } from './rootComparator';\nimport { warnAboutPluginsConflict } from './utils';\nimport { getClassesToAdd, getClassedToRemove } from './domHelpers';\nvar APPEND_COLUMN_CONFIG_STRATEGY = 'append';\nvar PLUGIN_KEY = 'multiColumnSorting';\nvar CONFLICTED_PLUGIN_KEY = 'columnSorting';\nregisterRootComparator(PLUGIN_KEY, rootComparator);\n/**\n * @plugin MultiColumnSorting\n * @dependencies ColumnSorting\n *\n * @description\n * This plugin sorts the view by columns (but does not sort the data source!). To enable the plugin, set the\n * {@link Options#multiColumnSorting} property to the correct value (see the examples below).\n *\n * @example\n * ```js\n * // as boolean\n * multiColumnSorting: true\n *\n * // as an object with initial sort config (sort ascending for column at index 1 and then sort descending for column at index 0)\n * multiColumnSorting: {\n *   initialConfig: [{\n *     column: 1,\n *     sortOrder: 'asc'\n *   }, {\n *     column: 0,\n *     sortOrder: 'desc'\n *   }]\n * }\n *\n * // as an object which define specific sorting options for all columns\n * multiColumnSorting: {\n *   sortEmptyCells: true, // true = the table sorts empty cells, false = the table moves all empty cells to the end of the table (by default)\n *   indicator: true, // true = shows indicator for all columns (by default), false = don't show indicator for columns\n *   headerAction: true, // true = allow to click on the headers to sort (by default), false = turn off possibility to click on the headers to sort\n *   compareFunctionFactory: function(sortOrder, columnMeta) {\n *     return function(value, nextValue) {\n *       // Some value comparisons which will return -1, 0 or 1...\n *     }\n *   }\n * }\n *\n * // as an object passed to the `column` property, allows specifying a custom options for the desired column.\n * // please take a look at documentation of `column` property: https://docs.handsontable.com/pro/Options.html#columns\n * columns: [{\n *   multiColumnSorting: {\n *     indicator: false, // disable indicator for the first column,\n *     sortEmptyCells: true,\n *     headerAction: false, // clicks on the first column won't sort\n *     compareFunctionFactory: function(sortOrder, columnMeta) {\n *       return function(value, nextValue) {\n *         return 0; // Custom compare function for the first column (don't sort)\n *       }\n *     }\n *   }\n * }]```\n *\n * @dependencies ObserveChanges\n */\n\nvar MultiColumnSorting =\n/*#__PURE__*/\nfunction (_ColumnSorting) {\n  _inherits(MultiColumnSorting, _ColumnSorting);\n\n  function MultiColumnSorting(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, MultiColumnSorting);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiColumnSorting).call(this, hotInstance));\n    /**\n     * Main settings key designed for the plugin.\n     *\n     * @private\n     * @type {String}\n     */\n\n    _this.pluginKey = PLUGIN_KEY;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the Handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link MultiColumnSorting#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(MultiColumnSorting, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"isEnabled\", this).call(this);\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      if (!this.enabled && this.hot.getSettings()[this.pluginKey] && this.hot.getSettings()[CONFLICTED_PLUGIN_KEY]) {\n        warnAboutPluginsConflict();\n      }\n\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Sorts the table by chosen columns and orders.\n     *\n     * @param {undefined|Object|Array} sortConfig Single column sort configuration or full sort configuration (for all sorted columns).\n     * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n     * sort order (`asc` for ascending, `desc` for descending).\n     *\n     * **Note**: Please keep in mind that every call of `sort` function set an entirely new sort order. Previous sort configs aren't preserved.\n     *\n     * @example\n     * ```js\n     * // sort ascending first visual column\n     * hot.getPlugin('multiColumnSorting').sort({ column: 0, sortOrder: 'asc' });\n     *\n     * // sort first two visual column in the defined sequence\n     * hot.getPlugin('multiColumnSorting').sort([{\n     *   column: 1, sortOrder: 'asc'\n     * }, {\n     *   column: 0, sortOrder: 'desc'\n     * }]);\n     * ```\n     *\n     * @fires Hooks#beforeColumnSort\n     * @fires Hooks#afterColumnSort\n     */\n\n  }, {\n    key: \"sort\",\n    value: function sort(sortConfig) {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"sort\", this).call(this, sortConfig);\n    }\n    /**\n     * Clear the sort performed on the table.\n     */\n\n  }, {\n    key: \"clearSort\",\n    value: function clearSort() {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"clearSort\", this).call(this);\n    }\n    /**\n     * Checks if the table is sorted (any column have to be sorted).\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isSorted\",\n    value: function isSorted() {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"isSorted\", this).call(this);\n    }\n    /**\n     * Get sort configuration for particular column or for all sorted columns. Objects contain `column` and `sortOrder` properties.\n     *\n     * **Note**: Please keep in mind that returned objects expose **visual** column index under the `column` key. They are handled by the `sort` function.\n     *\n     * @param {Number} [column] Visual column index.\n     * @returns {undefined|Object|Array}\n     */\n\n  }, {\n    key: \"getSortConfig\",\n    value: function getSortConfig(column) {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"getSortConfig\", this).call(this, column);\n    }\n    /**\n     * @description\n     * Warn: Useful mainly for providing server side sort implementation (see in the example below). It doesn't sort the data set. It just sets sort configuration for all sorted columns.\n     * Note: Please keep in mind that this method doesn't re-render the table.\n     *\n     * @example\n     * ```js\n     * beforeColumnSort: function(currentSortConfig, destinationSortConfigs) {\n     *   const columnSortPlugin = this.getPlugin('multiColumnSorting');\n     *\n     *   columnSortPlugin.setSortConfig(destinationSortConfigs);\n     *\n     *   // const newData = ... // Calculated data set, ie. from an AJAX call.\n     *\n     *   this.loadData(newData); // Load new data set and re-render the table.\n     *\n     *   return false; // The blockade for the default sort action.\n     * }```\n     *\n     * @param {undefined|Object|Array} sortConfig Single column sort configuration or full sort configuration (for all sorted columns).\n     * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n     * sort order (`asc` for ascending, `desc` for descending).\n     */\n\n  }, {\n    key: \"setSortConfig\",\n    value: function setSortConfig(sortConfig) {\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"setSortConfig\", this).call(this, sortConfig);\n    }\n    /**\n     * Get normalized sort configs.\n     *\n     * @private\n     * @param {Object|Array} [sortConfig=[]] Single column sort configuration or full sort configuration (for all sorted columns).\n     * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n     * sort order (`asc` for ascending, `desc` for descending).\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getNormalizedSortConfigs\",\n    value: function getNormalizedSortConfigs() {\n      var sortConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (Array.isArray(sortConfig)) {\n        return sortConfig;\n      }\n\n      return [sortConfig];\n    }\n    /**\n     * Update header classes.\n     *\n     * @private\n     * @param {HTMLElement} headerSpanElement Header span element.\n     * @param {...*} args Extra arguments for helpers.\n     */\n\n  }, {\n    key: \"updateHeaderClasses\",\n    value: function updateHeaderClasses(headerSpanElement) {\n      var _get2;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_get2 = _get(_getPrototypeOf(MultiColumnSorting.prototype), \"updateHeaderClasses\", this)).call.apply(_get2, [this, headerSpanElement].concat(args));\n\n      removeClass(headerSpanElement, getClassedToRemove(headerSpanElement));\n\n      if (this.enabled !== false) {\n        addClass(headerSpanElement, getClassesToAdd.apply(void 0, args));\n      }\n    }\n    /**\n     * Overwriting base plugin's `onUpdateSettings` method. Please keep in mind that `onAfterUpdateSettings` isn't called\n     * for `updateSettings` in specific situations.\n     *\n     * @private\n     * @param {Object} newSettings New settings object.\n     */\n\n  }, {\n    key: \"onUpdateSettings\",\n    value: function onUpdateSettings(newSettings) {\n      if (this.hot.getSettings()[this.pluginKey] && this.hot.getSettings()[CONFLICTED_PLUGIN_KEY]) {\n        warnAboutPluginsConflict();\n      }\n\n      return _get(_getPrototypeOf(MultiColumnSorting.prototype), \"onUpdateSettings\", this).call(this, newSettings);\n    }\n    /**\n     * Callback for the `onAfterOnCellMouseDown` hook.\n     *\n     * @private\n     * @param {Event} event Event which are provided by hook.\n     * @param {CellCoords} coords Visual coords of the selected cell.\n     */\n\n  }, {\n    key: \"onAfterOnCellMouseDown\",\n    value: function onAfterOnCellMouseDown(event, coords) {\n      if (wasHeaderClickedProperly(coords.row, coords.col, event) === false) {\n        return;\n      }\n\n      if (this.wasClickableHeaderClicked(event, coords.col)) {\n        if (isPressedCtrlKey()) {\n          this.hot.deselectCell();\n          this.hot.selectColumns(coords.col);\n          this.sort(this.getNextSortConfig(coords.col, APPEND_COLUMN_CONFIG_STRATEGY));\n        } else {\n          this.sort(this.getColumnNextConfig(coords.col));\n        }\n      }\n    }\n  }]);\n\n  return MultiColumnSorting;\n}(ColumnSorting);\n\nregisterPlugin(PLUGIN_KEY, MultiColumnSorting);\nexport default MultiColumnSorting;"]},"metadata":{},"sourceType":"module"}