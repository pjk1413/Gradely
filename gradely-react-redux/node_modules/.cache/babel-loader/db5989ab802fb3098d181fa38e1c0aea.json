{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { toLabel } from 'hot-formula-parser';\nimport { isObject } from '../../../helpers/object';\n/**\n * @class BaseCell\n * @util\n */\n\nvar BaseCell = /*#__PURE__*/function () {\n  function BaseCell(row, column) {\n    _classCallCheck(this, BaseCell);\n\n    var rowObject = isObject(row);\n    var columnObject = isObject(column);\n    this._row = rowObject ? row.index : row;\n    this.rowAbsolute = rowObject ? row.isAbsolute : true;\n    this._column = columnObject ? column.index : column;\n    this.columnAbsolute = columnObject ? column.isAbsolute : true;\n    this.rowOffset = 0;\n    this.columnOffset = 0; // TODO: Change syntax to es6 after upgrade tests to newer version of phantom and jasmine.\n\n    Object.defineProperty(this, 'row', {\n      get: function get() {\n        return this.rowOffset + this._row;\n      },\n      set: function set(rowIndex) {\n        this._row = rowIndex;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(this, 'column', {\n      get: function get() {\n        return this.columnOffset + this._column;\n      },\n      set: function set(columnIndex) {\n        this._column = columnIndex;\n      },\n      enumerable: true,\n      configurable: true\n    });\n  }\n  /**\n   * Translate cell coordinates.\n   *\n   * @param {Number} rowOffset Row offset to move.\n   * @param {Number} columnOffset Column offset to move.\n   */\n\n\n  _createClass(BaseCell, [{\n    key: \"translateTo\",\n    value: function translateTo(rowOffset, columnOffset) {\n      this.row = this.row + rowOffset;\n      this.column = this.column + columnOffset;\n    }\n    /**\n     * Check if cell is equal to provided one.\n     *\n     * @param {BaseCell} cell Cell object.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(cell) {\n      return cell.row === this.row && cell.column === this.column;\n    }\n    /**\n     * Stringify object.\n     *\n     * @returns {String}\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return toLabel({\n        index: this.row,\n        isAbsolute: this.rowAbsolute\n      }, {\n        index: this.column,\n        isAbsolute: this.columnAbsolute\n      });\n    }\n  }]);\n\n  return BaseCell;\n}();\n\nexport default BaseCell;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/plugins/formulas/cell/_base.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","toLabel","isObject","BaseCell","row","column","rowObject","columnObject","_row","index","rowAbsolute","isAbsolute","_column","columnAbsolute","rowOffset","columnOffset","get","set","rowIndex","columnIndex","value","translateTo","isEqual","cell","toString"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { toLabel } from 'hot-formula-parser';\nimport { isObject } from '../../../helpers/object';\n/**\n * @class BaseCell\n * @util\n */\n\nvar BaseCell =\n/*#__PURE__*/\nfunction () {\n  function BaseCell(row, column) {\n    _classCallCheck(this, BaseCell);\n\n    var rowObject = isObject(row);\n    var columnObject = isObject(column);\n    this._row = rowObject ? row.index : row;\n    this.rowAbsolute = rowObject ? row.isAbsolute : true;\n    this._column = columnObject ? column.index : column;\n    this.columnAbsolute = columnObject ? column.isAbsolute : true;\n    this.rowOffset = 0;\n    this.columnOffset = 0; // TODO: Change syntax to es6 after upgrade tests to newer version of phantom and jasmine.\n\n    Object.defineProperty(this, 'row', {\n      get: function get() {\n        return this.rowOffset + this._row;\n      },\n      set: function set(rowIndex) {\n        this._row = rowIndex;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(this, 'column', {\n      get: function get() {\n        return this.columnOffset + this._column;\n      },\n      set: function set(columnIndex) {\n        this._column = columnIndex;\n      },\n      enumerable: true,\n      configurable: true\n    });\n  }\n  /**\n   * Translate cell coordinates.\n   *\n   * @param {Number} rowOffset Row offset to move.\n   * @param {Number} columnOffset Column offset to move.\n   */\n\n\n  _createClass(BaseCell, [{\n    key: \"translateTo\",\n    value: function translateTo(rowOffset, columnOffset) {\n      this.row = this.row + rowOffset;\n      this.column = this.column + columnOffset;\n    }\n    /**\n     * Check if cell is equal to provided one.\n     *\n     * @param {BaseCell} cell Cell object.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(cell) {\n      return cell.row === this.row && cell.column === this.column;\n    }\n    /**\n     * Stringify object.\n     *\n     * @returns {String}\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return toLabel({\n        index: this.row,\n        isAbsolute: this.rowAbsolute\n      }, {\n        index: this.column,\n        isAbsolute: this.columnAbsolute\n      });\n    }\n  }]);\n\n  return BaseCell;\n}();\n\nexport default BaseCell;"]},"metadata":{},"sourceType":"module"}