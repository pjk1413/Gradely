{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { addClass, clearTextSelection, empty, fastInnerHTML, fastInnerText, getScrollbarWidth, hasClass, isChildOf, isInput, isOutsideInput } from './helpers/dom/element';\nimport EventManager from './eventManager';\nimport { stopPropagation, isImmediatePropagationStopped, isRightClick, isLeftClick } from './helpers/dom/event';\nimport Walkontable from './3rdparty/walkontable/src';\nimport { handleMouseEvent } from './selection/mouseEventHandler';\nvar privatePool = new WeakMap();\n/**\n * @class TableView\n * @private\n */\n\nvar TableView = /*#__PURE__*/function () {\n  /**\n   * @param {Hanstontable} instance Instance of {@link Handsontable}\n   */\n  function TableView(instance) {\n    _classCallCheck(this, TableView);\n    /**\n     * Instance of {@link Handsontable}\n     *\n     * @private\n     * @type {Handsontable}\n     */\n\n\n    this.instance = instance;\n    /**\n     * Instance of {@link EventManager}\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    this.eventManager = new EventManager(instance);\n    /**\n     * Current Handsontable's GridSettings object.\n     *\n     * @private\n     * @type {GridSettings}\n     */\n\n    this.settings = instance.getSettings();\n    /**\n     * Main <THEAD> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.THEAD = void 0;\n    /**\n     * Main <TBODY> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.TBODY = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @type {Walkontable}\n     */\n\n    this.wt = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @private\n     * @type {Walkontable}\n     */\n\n    this.activeWt = void 0;\n    privatePool.set(this, {\n      /**\n       * Defines if the text should be selected during mousemove.\n       *\n       * @private\n       * @type {Boolean}\n       */\n      selectionMouseDown: false,\n\n      /**\n       * @private\n       * @type {Boolean}\n       */\n      mouseDown: void 0,\n\n      /**\n       * Main <TABLE> element.\n       *\n       * @private\n       * @type {HTMLTableElement}\n       */\n      table: void 0,\n\n      /**\n       * Cached width of the rootElement.\n       *\n       * @type {Number}\n       */\n      lastWidth: 0,\n\n      /**\n       * Cached height of the rootElement.\n       *\n       * @type {Number}\n       */\n      lastHeight: 0\n    });\n    this.createElements();\n    this.registerEvents();\n    this.initializeWalkontable();\n  }\n  /**\n   * Renders WalkontableUI.\n   */\n\n\n  _createClass(TableView, [{\n    key: \"render\",\n    value: function render() {\n      this.wt.draw(!this.instance.forceFullRender);\n      this.instance.forceFullRender = false;\n      this.instance.renderCall = false;\n    }\n    /**\n     * Returns td object given coordinates\n     *\n     * @param {CellCoords} coords\n     * @param {Boolean} topmost\n     * @returns {HTMLTableCellElement|null}\n     */\n\n  }, {\n    key: \"getCellAtCoords\",\n    value: function getCellAtCoords(coords, topmost) {\n      var td = this.wt.getCell(coords, topmost);\n\n      if (td < 0) {\n        // there was an exit code (cell is out of bounds)\n        return null;\n      }\n\n      return td;\n    }\n    /**\n     * Scroll viewport to a cell.\n     *\n     * @param {CellCoords} coords\n     * @param {Boolean} [snapToTop]\n     * @param {Boolean} [snapToRight]\n     * @param {Boolean} [snapToBottom]\n     * @param {Boolean} [snapToLeft]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"scrollViewport\",\n    value: function scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n      return this.wt.scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a column.\n     *\n     * @param {Number} column Visual column index.\n     * @param {Boolean} [snapToLeft]\n     * @param {Boolean} [snapToRight]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"scrollViewportHorizontally\",\n    value: function scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n      return this.wt.scrollViewportHorizontally(column, snapToRight, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a row.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Boolean} [snapToTop]\n     * @param {Boolean} [snapToBottom]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"scrollViewportVertically\",\n    value: function scrollViewportVertically(row, snapToTop, snapToBottom) {\n      return this.wt.scrollViewportVertically(row, snapToTop, snapToBottom);\n    }\n    /**\n     * Prepares DOMElements and adds correct className to the root element.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      var priv = privatePool.get(this);\n      var _this$instance = this.instance,\n          rootElement = _this$instance.rootElement,\n          rootDocument = _this$instance.rootDocument;\n      var originalStyle = rootElement.getAttribute('style');\n\n      if (originalStyle) {\n        rootElement.setAttribute('data-originalstyle', originalStyle); // needed to retrieve original style in jsFiddle link generator in HT examples. may be removed in future versions\n      }\n\n      addClass(rootElement, 'handsontable');\n      priv.table = rootDocument.createElement('TABLE');\n      addClass(priv.table, 'htCore');\n\n      if (this.instance.getSettings().tableClassName) {\n        addClass(priv.table, this.instance.getSettings().tableClassName);\n      }\n\n      this.THEAD = rootDocument.createElement('THEAD');\n      priv.table.appendChild(this.THEAD);\n      this.TBODY = rootDocument.createElement('TBODY');\n      priv.table.appendChild(this.TBODY);\n      this.instance.table = priv.table;\n      this.instance.container.insertBefore(priv.table, this.instance.container.firstChild);\n    }\n    /**\n     * Attaches necessary listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this = this;\n\n      var priv = privatePool.get(this);\n      var _this$instance2 = this.instance,\n          rootElement = _this$instance2.rootElement,\n          rootDocument = _this$instance2.rootDocument;\n      var documentElement = rootDocument.documentElement;\n      this.eventManager.addEventListener(rootElement, 'mousedown', function (event) {\n        priv.selectionMouseDown = true;\n\n        if (!_this.isTextSelectionAllowed(event.target)) {\n          var rootWindow = _this.instance.rootWindow;\n          clearTextSelection(rootWindow);\n          event.preventDefault();\n          rootWindow.focus(); // make sure that window that contains HOT is active. Important when HOT is in iframe.\n        }\n      });\n      this.eventManager.addEventListener(rootElement, 'mouseup', function () {\n        priv.selectionMouseDown = false;\n      });\n      this.eventManager.addEventListener(rootElement, 'mousemove', function (event) {\n        if (priv.selectionMouseDown && !_this.isTextSelectionAllowed(event.target)) {\n          // Clear selection only when fragmentSelection is enabled, otherwise clearing selection breakes the IME editor.\n          if (_this.settings.fragmentSelection) {\n            clearTextSelection(_this.instance.rootWindow);\n          }\n\n          event.preventDefault();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'keyup', function (event) {\n        if (_this.instance.selection.isInProgress() && !event.shiftKey) {\n          _this.instance.selection.finish();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function (event) {\n        if (_this.instance.selection.isInProgress() && isLeftClick(event)) {\n          // is left mouse button\n          _this.instance.selection.finish();\n        }\n\n        priv.mouseDown = false;\n\n        if (isOutsideInput(rootDocument.activeElement) || !_this.instance.selection.isSelected() && !isRightClick(event)) {\n          _this.instance.unlisten();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'contextmenu', function (event) {\n        if (_this.instance.selection.isInProgress() && isRightClick(event)) {\n          _this.instance.selection.finish();\n\n          priv.mouseDown = false;\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'touchend', function () {\n        if (_this.instance.selection.isInProgress()) {\n          _this.instance.selection.finish();\n        }\n\n        priv.mouseDown = false;\n      });\n      this.eventManager.addEventListener(documentElement, 'mousedown', function (event) {\n        var originalTarget = event.target;\n        var eventX = event.x || event.clientX;\n        var eventY = event.y || event.clientY;\n        var next = event.target;\n\n        if (priv.mouseDown || !rootElement || !_this.instance.view) {\n          return; // it must have been started in a cell\n        } // immediate click on \"holder\" means click on the right side of vertical scrollbar\n\n\n        var holder = _this.instance.view.wt.wtTable.holder;\n\n        if (next === holder) {\n          var scrollbarWidth = getScrollbarWidth(rootDocument);\n\n          if (rootDocument.elementFromPoint(eventX + scrollbarWidth, eventY) !== holder || rootDocument.elementFromPoint(eventX, eventY + scrollbarWidth) !== holder) {\n            return;\n          }\n        } else {\n          while (next !== documentElement) {\n            if (next === null) {\n              if (event.isTargetWebComponent) {\n                break;\n              } // click on something that was a row but now is detached (possibly because your click triggered a rerender)\n\n\n              return;\n            }\n\n            if (next === rootElement) {\n              // click inside container\n              return;\n            }\n\n            next = next.parentNode;\n          }\n        } // function did not return until here, we have an outside click!\n\n\n        var outsideClickDeselects = typeof _this.settings.outsideClickDeselects === 'function' ? _this.settings.outsideClickDeselects(originalTarget) : _this.settings.outsideClickDeselects;\n\n        if (outsideClickDeselects) {\n          _this.instance.deselectCell();\n        } else {\n          _this.instance.destroyEditor(false, false);\n        }\n      });\n      this.eventManager.addEventListener(priv.table, 'selectstart', function (event) {\n        if (_this.settings.fragmentSelection || isInput(event.target)) {\n          return;\n        } // https://github.com/handsontable/handsontable/issues/160\n        // Prevent text from being selected when performing drag down.\n\n\n        event.preventDefault();\n      });\n    }\n    /**\n     * Defines default configuration and initializes WalkOnTable intance.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"initializeWalkontable\",\n    value: function initializeWalkontable() {\n      var _this2 = this;\n\n      var priv = privatePool.get(this);\n      var walkontableConfig = {\n        debug: function debug() {\n          return _this2.settings.debug;\n        },\n        externalRowCalculator: this.instance.getPlugin('autoRowSize') && this.instance.getPlugin('autoRowSize').isEnabled(),\n        table: priv.table,\n        preventOverflow: function preventOverflow() {\n          return _this2.settings.preventOverflow;\n        },\n        preventWheel: function preventWheel() {\n          return _this2.settings.preventWheel;\n        },\n        stretchH: function stretchH() {\n          return _this2.settings.stretchH;\n        },\n        data: this.instance.getDataAtCell,\n        totalRows: function totalRows() {\n          return _this2.instance.countRows();\n        },\n        totalColumns: function totalColumns() {\n          return _this2.instance.countCols();\n        },\n        fixedColumnsLeft: function fixedColumnsLeft() {\n          return _this2.settings.fixedColumnsLeft;\n        },\n        fixedRowsTop: function fixedRowsTop() {\n          return _this2.settings.fixedRowsTop;\n        },\n        fixedRowsBottom: function fixedRowsBottom() {\n          return _this2.settings.fixedRowsBottom;\n        },\n        minSpareRows: function minSpareRows() {\n          return _this2.settings.minSpareRows;\n        },\n        renderAllRows: this.settings.renderAllRows,\n        rowHeaders: function rowHeaders() {\n          var headerRenderers = [];\n\n          if (_this2.instance.hasRowHeaders()) {\n            headerRenderers.push(function (row, TH) {\n              return _this2.appendRowHeader(row, TH);\n            });\n          }\n\n          _this2.instance.runHooks('afterGetRowHeaderRenderers', headerRenderers);\n\n          return headerRenderers;\n        },\n        columnHeaders: function columnHeaders() {\n          var headerRenderers = [];\n\n          if (_this2.instance.hasColHeaders()) {\n            headerRenderers.push(function (column, TH) {\n              _this2.appendColHeader(column, TH);\n            });\n          }\n\n          _this2.instance.runHooks('afterGetColumnHeaderRenderers', headerRenderers);\n\n          return headerRenderers;\n        },\n        columnWidth: this.instance.getColWidth,\n        rowHeight: this.instance.getRowHeight,\n        cellRenderer: function cellRenderer(row, col, TD) {\n          var cellProperties = _this2.instance.getCellMeta(row, col);\n\n          var prop = _this2.instance.colToProp(col);\n\n          var value = _this2.instance.getDataAtRowProp(row, prop);\n\n          if (_this2.instance.hasHook('beforeValueRender')) {\n            value = _this2.instance.runHooks('beforeValueRender', value, cellProperties);\n          }\n\n          _this2.instance.runHooks('beforeRenderer', TD, row, col, prop, value, cellProperties);\n\n          _this2.instance.getCellRenderer(cellProperties)(_this2.instance, TD, row, col, prop, value, cellProperties);\n\n          _this2.instance.runHooks('afterRenderer', TD, row, col, prop, value, cellProperties);\n        },\n        selections: this.instance.selection.highlight,\n        hideBorderOnMouseDownOver: function hideBorderOnMouseDownOver() {\n          return _this2.settings.fragmentSelection;\n        },\n        onWindowResize: function onWindowResize() {\n          if (!_this2.instance || _this2.instance.isDestroyed) {\n            return;\n          }\n\n          _this2.instance.refreshDimensions();\n        },\n        onCellMouseDown: function onCellMouseDown(event, coords, TD, wt) {\n          var blockCalculations = {\n            row: false,\n            column: false,\n            cell: false\n          };\n\n          _this2.instance.listen();\n\n          _this2.activeWt = wt;\n          priv.mouseDown = true;\n\n          _this2.instance.runHooks('beforeOnCellMouseDown', event, coords, TD, blockCalculations);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          handleMouseEvent(event, {\n            coords: coords,\n            selection: _this2.instance.selection,\n            controller: blockCalculations\n          });\n\n          _this2.instance.runHooks('afterOnCellMouseDown', event, coords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellContextMenu: function onCellContextMenu(event, coords, TD, wt) {\n          _this2.activeWt = wt;\n          priv.mouseDown = false;\n\n          if (_this2.instance.selection.isInProgress()) {\n            _this2.instance.selection.finish();\n          }\n\n          _this2.instance.runHooks('beforeOnCellContextMenu', event, coords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellContextMenu', event, coords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOut: function onCellMouseOut(event, coords, TD, wt) {\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseOut', event, coords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseOut', event, coords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOver: function onCellMouseOver(event, coords, TD, wt) {\n          var blockCalculations = {\n            row: false,\n            column: false,\n            cell: false\n          };\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseOver', event, coords, TD, blockCalculations);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          if (priv.mouseDown) {\n            handleMouseEvent(event, {\n              coords: coords,\n              selection: _this2.instance.selection,\n              controller: blockCalculations\n            });\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseOver', event, coords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseUp: function onCellMouseUp(event, coords, TD, wt) {\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseUp', event, coords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseUp', event, coords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellCornerMouseDown: function onCellCornerMouseDown(event) {\n          event.preventDefault();\n\n          _this2.instance.runHooks('afterOnCellCornerMouseDown', event);\n        },\n        onCellCornerDblClick: function onCellCornerDblClick(event) {\n          event.preventDefault();\n\n          _this2.instance.runHooks('afterOnCellCornerDblClick', event);\n        },\n        beforeDraw: function beforeDraw(force, skipRender) {\n          return _this2.beforeRender(force, skipRender);\n        },\n        onDraw: function onDraw(force) {\n          return _this2.onDraw(force);\n        },\n        onScrollVertically: function onScrollVertically() {\n          return _this2.instance.runHooks('afterScrollVertically');\n        },\n        onScrollHorizontally: function onScrollHorizontally() {\n          return _this2.instance.runHooks('afterScrollHorizontally');\n        },\n        onBeforeRemoveCellClassNames: function onBeforeRemoveCellClassNames() {\n          return _this2.instance.runHooks('beforeRemoveCellClassNames');\n        },\n        onAfterDrawSelection: function onAfterDrawSelection(currentRow, currentColumn, cornersOfSelection, layerLevel) {\n          return _this2.instance.runHooks('afterDrawSelection', currentRow, currentColumn, cornersOfSelection, layerLevel);\n        },\n        onBeforeDrawBorders: function onBeforeDrawBorders(corners, borderClassName) {\n          return _this2.instance.runHooks('beforeDrawBorders', corners, borderClassName);\n        },\n        onBeforeTouchScroll: function onBeforeTouchScroll() {\n          return _this2.instance.runHooks('beforeTouchScroll');\n        },\n        onAfterMomentumScroll: function onAfterMomentumScroll() {\n          return _this2.instance.runHooks('afterMomentumScroll');\n        },\n        onBeforeStretchingColumnWidth: function onBeforeStretchingColumnWidth(stretchedWidth, column) {\n          return _this2.instance.runHooks('beforeStretchingColumnWidth', stretchedWidth, column);\n        },\n        onModifyRowHeaderWidth: function onModifyRowHeaderWidth(rowHeaderWidth) {\n          return _this2.instance.runHooks('modifyRowHeaderWidth', rowHeaderWidth);\n        },\n        onModifyGetCellCoords: function onModifyGetCellCoords(row, column, topmost) {\n          return _this2.instance.runHooks('modifyGetCellCoords', row, column, topmost);\n        },\n        viewportRowCalculatorOverride: function viewportRowCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportRowRenderingOffset;\n\n          if (viewportOffset === 'auto' && _this2.settings.fixedRowsTop) {\n            viewportOffset = 10;\n          }\n\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var rows = _this2.instance.countRows();\n\n            if (typeof viewportOffset === 'number') {\n              calc.startRow = Math.max(calc.startRow - viewportOffset, 0);\n              calc.endRow = Math.min(calc.endRow + viewportOffset, rows - 1);\n            } else if (viewportOffset === 'auto') {\n              var center = calc.startRow + calc.endRow - calc.startRow;\n              var offset = Math.ceil(center / rows * 12);\n              calc.startRow = Math.max(calc.startRow - offset, 0);\n              calc.endRow = Math.min(calc.endRow + offset, rows - 1);\n            }\n          }\n\n          _this2.instance.runHooks('afterViewportRowCalculatorOverride', calc);\n        },\n        viewportColumnCalculatorOverride: function viewportColumnCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportColumnRenderingOffset;\n\n          if (viewportOffset === 'auto' && _this2.settings.fixedColumnsLeft) {\n            viewportOffset = 10;\n          }\n\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var cols = _this2.instance.countCols();\n\n            if (typeof viewportOffset === 'number') {\n              calc.startColumn = Math.max(calc.startColumn - viewportOffset, 0);\n              calc.endColumn = Math.min(calc.endColumn + viewportOffset, cols - 1);\n            }\n\n            if (viewportOffset === 'auto') {\n              var center = calc.startColumn + calc.endColumn - calc.startColumn;\n              var offset = Math.ceil(center / cols * 12);\n              calc.startRow = Math.max(calc.startColumn - offset, 0);\n              calc.endColumn = Math.min(calc.endColumn + offset, cols - 1);\n            }\n          }\n\n          _this2.instance.runHooks('afterViewportColumnCalculatorOverride', calc);\n        },\n        rowHeaderWidth: function rowHeaderWidth() {\n          return _this2.settings.rowHeaderWidth;\n        },\n        columnHeaderHeight: function columnHeaderHeight() {\n          var columnHeaderHeight = _this2.instance.runHooks('modifyColumnHeaderHeight');\n\n          return _this2.settings.columnHeaderHeight || columnHeaderHeight;\n        }\n      };\n      this.instance.runHooks('beforeInitWalkontable', walkontableConfig);\n      this.wt = new Walkontable(walkontableConfig);\n      this.activeWt = this.wt;\n      var spreader = this.wt.wtTable.spreader; // We have to cache width and height after Walkontable initialization.\n\n      var _this$instance$rootEl = this.instance.rootElement.getBoundingClientRect(),\n          width = _this$instance$rootEl.width,\n          height = _this$instance$rootEl.height;\n\n      this.setLastSize(width, height);\n      this.eventManager.addEventListener(spreader, 'mousedown', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          stopPropagation(event);\n        }\n      });\n      this.eventManager.addEventListener(spreader, 'contextmenu', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          stopPropagation(event);\n        }\n      });\n      this.eventManager.addEventListener(this.instance.rootDocument.documentElement, 'click', function () {\n        if (_this2.settings.observeDOMVisibility) {\n          if (_this2.wt.drawInterrupted) {\n            _this2.instance.forceFullRender = true;\n\n            _this2.render();\n          }\n        }\n      });\n    }\n    /**\n     * Checks if it's possible to create text selection in element.\n     *\n     * @private\n     * @param {HTMLElement} el\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isTextSelectionAllowed\",\n    value: function isTextSelectionAllowed(el) {\n      if (isInput(el)) {\n        return true;\n      }\n\n      var isChildOfTableBody = isChildOf(el, this.instance.view.wt.wtTable.spreader);\n\n      if (this.settings.fragmentSelection === true && isChildOfTableBody) {\n        return true;\n      }\n\n      if (this.settings.fragmentSelection === 'cell' && this.isSelectedOnlyCell() && isChildOfTableBody) {\n        return true;\n      }\n\n      if (!this.settings.fragmentSelection && this.isCellEdited() && this.isSelectedOnlyCell()) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Checks if user's been called mousedown.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isMouseDown\",\n    value: function isMouseDown() {\n      return privatePool.get(this).mouseDown;\n    }\n    /**\n     * Check if selected only one cell.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isSelectedOnlyCell\",\n    value: function isSelectedOnlyCell() {\n      var _ref = this.instance.getSelectedLast() || [],\n          _ref2 = _slicedToArray(_ref, 4),\n          row = _ref2[0],\n          col = _ref2[1],\n          rowEnd = _ref2[2],\n          colEnd = _ref2[3];\n\n      return row !== void 0 && row === rowEnd && col === colEnd;\n    }\n    /**\n     * Checks if active cell is editing.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isCellEdited\",\n    value: function isCellEdited() {\n      var activeEditor = this.instance.getActiveEditor();\n      return activeEditor && activeEditor.isOpened();\n    }\n    /**\n     * `beforeDraw` callback.\n     *\n     * @private\n     * @param {Boolean} force\n     * @param {Boolean} skipRender\n     */\n\n  }, {\n    key: \"beforeRender\",\n    value: function beforeRender(force, skipRender) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('beforeRender', this.instance.forceFullRender, skipRender);\n      }\n    }\n    /**\n     * `onDraw` callback.\n     *\n     * @private\n     * @param {Boolean} force\n     */\n\n  }, {\n    key: \"onDraw\",\n    value: function onDraw(force) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('afterRender', this.instance.forceFullRender);\n      }\n    }\n    /**\n     * Append row header to a TH element\n     *\n     * @private\n     * @param row\n     * @param TH\n     */\n\n  }, {\n    key: \"appendRowHeader\",\n    value: function appendRowHeader(row, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n\n        if (!hasClass(container, 'relative')) {\n          empty(TH);\n          this.appendRowHeader(row, TH);\n          return;\n        }\n\n        this.updateCellHeader(container.querySelector('.rowHeader'), row, this.instance.getRowHeader);\n      } else {\n        var _this$instance3 = this.instance,\n            rootDocument = _this$instance3.rootDocument,\n            getRowHeader = _this$instance3.getRowHeader;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'rowHeader';\n        this.updateCellHeader(span, row, getRowHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n\n      this.instance.runHooks('afterGetRowHeader', row, TH);\n    }\n    /**\n     * Append column header to a TH element\n     *\n     * @private\n     * @param col\n     * @param TH\n     */\n\n  }, {\n    key: \"appendColHeader\",\n    value: function appendColHeader(col, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n\n        if (hasClass(container, 'relative')) {\n          this.updateCellHeader(container.querySelector('.colHeader'), col, this.instance.getColHeader);\n        } else {\n          empty(TH);\n          this.appendColHeader(col, TH);\n        }\n      } else {\n        var rootDocument = this.instance.rootDocument;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'colHeader';\n        this.updateCellHeader(span, col, this.instance.getColHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n\n      this.instance.runHooks('afterGetColHeader', col, TH);\n    }\n    /**\n     * Updates header cell content.\n     *\n     * @since 0.15.0-beta4\n     * @param {HTMLElement} element Element to update\n     * @param {Number} index Row index or column index\n     * @param {Function} content Function which should be returns content for this cell\n     */\n\n  }, {\n    key: \"updateCellHeader\",\n    value: function updateCellHeader(element, index, content) {\n      var renderedIndex = index;\n      var parentOverlay = this.wt.wtOverlays.getParentOverlay(element) || this.wt; // prevent wrong calculations from SampleGenerator\n\n      if (element.parentNode) {\n        if (hasClass(element, 'colHeader')) {\n          renderedIndex = parentOverlay.wtTable.columnFilter.sourceToRendered(index);\n        } else if (hasClass(element, 'rowHeader')) {\n          renderedIndex = parentOverlay.wtTable.rowFilter.sourceToRendered(index);\n        }\n      }\n\n      if (renderedIndex > -1) {\n        fastInnerHTML(element, content(index));\n      } else {\n        // workaround for https://github.com/handsontable/handsontable/issues/1946\n        fastInnerText(element, String.fromCharCode(160));\n        addClass(element, 'cornerHeader');\n      }\n    }\n    /**\n     * Given a element's left position relative to the viewport, returns maximum element width until the right\n     * edge of the viewport (before scrollbar)\n     *\n     * @private\n     * @param {Number} leftOffset\n     * @return {Number}\n     */\n\n  }, {\n    key: \"maximumVisibleElementWidth\",\n    value: function maximumVisibleElementWidth(leftOffset) {\n      var workspaceWidth = this.wt.wtViewport.getWorkspaceWidth();\n      var maxWidth = workspaceWidth - leftOffset;\n      return maxWidth > 0 ? maxWidth : 0;\n    }\n    /**\n     * Given a element's top position relative to the viewport, returns maximum element height until the bottom\n     * edge of the viewport (before scrollbar)\n     *\n     * @private\n     * @param {Number} topOffset\n     * @return {Number}\n     */\n\n  }, {\n    key: \"maximumVisibleElementHeight\",\n    value: function maximumVisibleElementHeight(topOffset) {\n      var workspaceHeight = this.wt.wtViewport.getWorkspaceHeight();\n      var maxHeight = workspaceHeight - topOffset;\n      return maxHeight > 0 ? maxHeight : 0;\n    }\n    /**\n     * Sets new dimensions of the container.\n     */\n\n  }, {\n    key: \"setLastSize\",\n    value: function setLastSize(width, height) {\n      var priv = privatePool.get(this);\n      var _ref3 = [width, height];\n      priv.lastWidth = _ref3[0];\n      priv.lastHeight = _ref3[1];\n    }\n    /**\n     * Returns cached dimensions.\n     */\n\n  }, {\n    key: \"getLastSize\",\n    value: function getLastSize() {\n      var priv = privatePool.get(this);\n      return {\n        width: priv.lastWidth,\n        height: priv.lastHeight\n      };\n    }\n    /**\n     * Checks if master overlay is active.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"mainViewIsActive\",\n    value: function mainViewIsActive() {\n      return this.wt === this.activeWt;\n    }\n    /**\n     * Destroyes internal WalkOnTable's instance. Detaches all of the bonded listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.wt.destroy();\n      this.eventManager.destroy();\n    }\n  }]);\n\n  return TableView;\n}();\n\nexport default TableView;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/tableView.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","addClass","clearTextSelection","empty","fastInnerHTML","fastInnerText","getScrollbarWidth","hasClass","isChildOf","isInput","isOutsideInput","EventManager","stopPropagation","isImmediatePropagationStopped","isRightClick","isLeftClick","Walkontable","handleMouseEvent","privatePool","WeakMap","TableView","eventManager","settings","getSettings","THEAD","TBODY","wt","activeWt","set","selectionMouseDown","mouseDown","table","lastWidth","lastHeight","createElements","registerEvents","initializeWalkontable","render","draw","forceFullRender","renderCall","getCellAtCoords","coords","topmost","td","getCell","scrollViewport","snapToTop","snapToRight","snapToBottom","snapToLeft","scrollViewportHorizontally","column","scrollViewportVertically","row","priv","get","_this$instance","rootElement","rootDocument","originalStyle","getAttribute","setAttribute","createElement","tableClassName","appendChild","container","insertBefore","firstChild","_this","_this$instance2","documentElement","addEventListener","event","isTextSelectionAllowed","rootWindow","preventDefault","focus","fragmentSelection","selection","isInProgress","shiftKey","finish","activeElement","isSelected","unlisten","originalTarget","eventX","x","clientX","eventY","y","clientY","view","holder","wtTable","scrollbarWidth","elementFromPoint","isTargetWebComponent","parentNode","outsideClickDeselects","deselectCell","destroyEditor","_this2","walkontableConfig","debug","externalRowCalculator","getPlugin","isEnabled","preventOverflow","preventWheel","stretchH","data","getDataAtCell","totalRows","countRows","totalColumns","countCols","fixedColumnsLeft","fixedRowsTop","fixedRowsBottom","minSpareRows","renderAllRows","rowHeaders","headerRenderers","hasRowHeaders","TH","appendRowHeader","runHooks","columnHeaders","hasColHeaders","appendColHeader","columnWidth","getColWidth","rowHeight","getRowHeight","cellRenderer","col","TD","cellProperties","getCellMeta","prop","colToProp","getDataAtRowProp","hasHook","getCellRenderer","selections","highlight","hideBorderOnMouseDownOver","onWindowResize","isDestroyed","refreshDimensions","onCellMouseDown","blockCalculations","cell","listen","controller","onCellContextMenu","onCellMouseOut","onCellMouseOver","onCellMouseUp","onCellCornerMouseDown","onCellCornerDblClick","beforeDraw","force","skipRender","beforeRender","onDraw","onScrollVertically","onScrollHorizontally","onBeforeRemoveCellClassNames","onAfterDrawSelection","currentRow","currentColumn","cornersOfSelection","layerLevel","onBeforeDrawBorders","corners","borderClassName","onBeforeTouchScroll","onAfterMomentumScroll","onBeforeStretchingColumnWidth","stretchedWidth","onModifyRowHeaderWidth","rowHeaderWidth","onModifyGetCellCoords","viewportRowCalculatorOverride","calc","viewportOffset","viewportRowRenderingOffset","rows","startRow","Math","max","endRow","min","center","offset","ceil","viewportColumnCalculatorOverride","viewportColumnRenderingOffset","cols","startColumn","endColumn","columnHeaderHeight","spreader","_this$instance$rootEl","getBoundingClientRect","width","height","setLastSize","which","observeDOMVisibility","drawInterrupted","el","isChildOfTableBody","isSelectedOnlyCell","isCellEdited","isMouseDown","_ref","getSelectedLast","_ref2","rowEnd","colEnd","activeEditor","getActiveEditor","isOpened","updateCellHeader","querySelector","getRowHeader","_this$instance3","div","span","className","getColHeader","element","index","content","renderedIndex","parentOverlay","wtOverlays","getParentOverlay","columnFilter","sourceToRendered","rowFilter","String","fromCharCode","maximumVisibleElementWidth","leftOffset","workspaceWidth","wtViewport","getWorkspaceWidth","maxWidth","maximumVisibleElementHeight","topOffset","workspaceHeight","getWorkspaceHeight","maxHeight","_ref3","getLastSize","mainViewIsActive","destroy"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.weak-map\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { addClass, clearTextSelection, empty, fastInnerHTML, fastInnerText, getScrollbarWidth, hasClass, isChildOf, isInput, isOutsideInput } from './helpers/dom/element';\nimport EventManager from './eventManager';\nimport { stopPropagation, isImmediatePropagationStopped, isRightClick, isLeftClick } from './helpers/dom/event';\nimport Walkontable from './3rdparty/walkontable/src';\nimport { handleMouseEvent } from './selection/mouseEventHandler';\nvar privatePool = new WeakMap();\n/**\n * @class TableView\n * @private\n */\n\nvar TableView =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {Hanstontable} instance Instance of {@link Handsontable}\n   */\n  function TableView(instance) {\n    _classCallCheck(this, TableView);\n\n    /**\n     * Instance of {@link Handsontable}\n     *\n     * @private\n     * @type {Handsontable}\n     */\n    this.instance = instance;\n    /**\n     * Instance of {@link EventManager}\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    this.eventManager = new EventManager(instance);\n    /**\n     * Current Handsontable's GridSettings object.\n     *\n     * @private\n     * @type {GridSettings}\n     */\n\n    this.settings = instance.getSettings();\n    /**\n     * Main <THEAD> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.THEAD = void 0;\n    /**\n     * Main <TBODY> element.\n     *\n     * @type {HTMLTableSectionElement}\n     */\n\n    this.TBODY = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @type {Walkontable}\n     */\n\n    this.wt = void 0;\n    /**\n     * Main Walkontable instance.\n     *\n     * @private\n     * @type {Walkontable}\n     */\n\n    this.activeWt = void 0;\n    privatePool.set(this, {\n      /**\n       * Defines if the text should be selected during mousemove.\n       *\n       * @private\n       * @type {Boolean}\n       */\n      selectionMouseDown: false,\n\n      /**\n       * @private\n       * @type {Boolean}\n       */\n      mouseDown: void 0,\n\n      /**\n       * Main <TABLE> element.\n       *\n       * @private\n       * @type {HTMLTableElement}\n       */\n      table: void 0,\n\n      /**\n       * Cached width of the rootElement.\n       *\n       * @type {Number}\n       */\n      lastWidth: 0,\n\n      /**\n       * Cached height of the rootElement.\n       *\n       * @type {Number}\n       */\n      lastHeight: 0\n    });\n    this.createElements();\n    this.registerEvents();\n    this.initializeWalkontable();\n  }\n  /**\n   * Renders WalkontableUI.\n   */\n\n\n  _createClass(TableView, [{\n    key: \"render\",\n    value: function render() {\n      this.wt.draw(!this.instance.forceFullRender);\n      this.instance.forceFullRender = false;\n      this.instance.renderCall = false;\n    }\n    /**\n     * Returns td object given coordinates\n     *\n     * @param {CellCoords} coords\n     * @param {Boolean} topmost\n     * @returns {HTMLTableCellElement|null}\n     */\n\n  }, {\n    key: \"getCellAtCoords\",\n    value: function getCellAtCoords(coords, topmost) {\n      var td = this.wt.getCell(coords, topmost);\n\n      if (td < 0) {\n        // there was an exit code (cell is out of bounds)\n        return null;\n      }\n\n      return td;\n    }\n    /**\n     * Scroll viewport to a cell.\n     *\n     * @param {CellCoords} coords\n     * @param {Boolean} [snapToTop]\n     * @param {Boolean} [snapToRight]\n     * @param {Boolean} [snapToBottom]\n     * @param {Boolean} [snapToLeft]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"scrollViewport\",\n    value: function scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft) {\n      return this.wt.scrollViewport(coords, snapToTop, snapToRight, snapToBottom, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a column.\n     *\n     * @param {Number} column Visual column index.\n     * @param {Boolean} [snapToLeft]\n     * @param {Boolean} [snapToRight]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"scrollViewportHorizontally\",\n    value: function scrollViewportHorizontally(column, snapToRight, snapToLeft) {\n      return this.wt.scrollViewportHorizontally(column, snapToRight, snapToLeft);\n    }\n    /**\n     * Scroll viewport to a row.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Boolean} [snapToTop]\n     * @param {Boolean} [snapToBottom]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"scrollViewportVertically\",\n    value: function scrollViewportVertically(row, snapToTop, snapToBottom) {\n      return this.wt.scrollViewportVertically(row, snapToTop, snapToBottom);\n    }\n    /**\n     * Prepares DOMElements and adds correct className to the root element.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"createElements\",\n    value: function createElements() {\n      var priv = privatePool.get(this);\n      var _this$instance = this.instance,\n          rootElement = _this$instance.rootElement,\n          rootDocument = _this$instance.rootDocument;\n      var originalStyle = rootElement.getAttribute('style');\n\n      if (originalStyle) {\n        rootElement.setAttribute('data-originalstyle', originalStyle); // needed to retrieve original style in jsFiddle link generator in HT examples. may be removed in future versions\n      }\n\n      addClass(rootElement, 'handsontable');\n      priv.table = rootDocument.createElement('TABLE');\n      addClass(priv.table, 'htCore');\n\n      if (this.instance.getSettings().tableClassName) {\n        addClass(priv.table, this.instance.getSettings().tableClassName);\n      }\n\n      this.THEAD = rootDocument.createElement('THEAD');\n      priv.table.appendChild(this.THEAD);\n      this.TBODY = rootDocument.createElement('TBODY');\n      priv.table.appendChild(this.TBODY);\n      this.instance.table = priv.table;\n      this.instance.container.insertBefore(priv.table, this.instance.container.firstChild);\n    }\n    /**\n     * Attaches necessary listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this = this;\n\n      var priv = privatePool.get(this);\n      var _this$instance2 = this.instance,\n          rootElement = _this$instance2.rootElement,\n          rootDocument = _this$instance2.rootDocument;\n      var documentElement = rootDocument.documentElement;\n      this.eventManager.addEventListener(rootElement, 'mousedown', function (event) {\n        priv.selectionMouseDown = true;\n\n        if (!_this.isTextSelectionAllowed(event.target)) {\n          var rootWindow = _this.instance.rootWindow;\n          clearTextSelection(rootWindow);\n          event.preventDefault();\n          rootWindow.focus(); // make sure that window that contains HOT is active. Important when HOT is in iframe.\n        }\n      });\n      this.eventManager.addEventListener(rootElement, 'mouseup', function () {\n        priv.selectionMouseDown = false;\n      });\n      this.eventManager.addEventListener(rootElement, 'mousemove', function (event) {\n        if (priv.selectionMouseDown && !_this.isTextSelectionAllowed(event.target)) {\n          // Clear selection only when fragmentSelection is enabled, otherwise clearing selection breakes the IME editor.\n          if (_this.settings.fragmentSelection) {\n            clearTextSelection(_this.instance.rootWindow);\n          }\n\n          event.preventDefault();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'keyup', function (event) {\n        if (_this.instance.selection.isInProgress() && !event.shiftKey) {\n          _this.instance.selection.finish();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'mouseup', function (event) {\n        if (_this.instance.selection.isInProgress() && isLeftClick(event)) {\n          // is left mouse button\n          _this.instance.selection.finish();\n        }\n\n        priv.mouseDown = false;\n\n        if (isOutsideInput(rootDocument.activeElement) || !_this.instance.selection.isSelected() && !isRightClick(event)) {\n          _this.instance.unlisten();\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'contextmenu', function (event) {\n        if (_this.instance.selection.isInProgress() && isRightClick(event)) {\n          _this.instance.selection.finish();\n\n          priv.mouseDown = false;\n        }\n      });\n      this.eventManager.addEventListener(documentElement, 'touchend', function () {\n        if (_this.instance.selection.isInProgress()) {\n          _this.instance.selection.finish();\n        }\n\n        priv.mouseDown = false;\n      });\n      this.eventManager.addEventListener(documentElement, 'mousedown', function (event) {\n        var originalTarget = event.target;\n        var eventX = event.x || event.clientX;\n        var eventY = event.y || event.clientY;\n        var next = event.target;\n\n        if (priv.mouseDown || !rootElement || !_this.instance.view) {\n          return; // it must have been started in a cell\n        } // immediate click on \"holder\" means click on the right side of vertical scrollbar\n\n\n        var holder = _this.instance.view.wt.wtTable.holder;\n\n        if (next === holder) {\n          var scrollbarWidth = getScrollbarWidth(rootDocument);\n\n          if (rootDocument.elementFromPoint(eventX + scrollbarWidth, eventY) !== holder || rootDocument.elementFromPoint(eventX, eventY + scrollbarWidth) !== holder) {\n            return;\n          }\n        } else {\n          while (next !== documentElement) {\n            if (next === null) {\n              if (event.isTargetWebComponent) {\n                break;\n              } // click on something that was a row but now is detached (possibly because your click triggered a rerender)\n\n\n              return;\n            }\n\n            if (next === rootElement) {\n              // click inside container\n              return;\n            }\n\n            next = next.parentNode;\n          }\n        } // function did not return until here, we have an outside click!\n\n\n        var outsideClickDeselects = typeof _this.settings.outsideClickDeselects === 'function' ? _this.settings.outsideClickDeselects(originalTarget) : _this.settings.outsideClickDeselects;\n\n        if (outsideClickDeselects) {\n          _this.instance.deselectCell();\n        } else {\n          _this.instance.destroyEditor(false, false);\n        }\n      });\n      this.eventManager.addEventListener(priv.table, 'selectstart', function (event) {\n        if (_this.settings.fragmentSelection || isInput(event.target)) {\n          return;\n        } // https://github.com/handsontable/handsontable/issues/160\n        // Prevent text from being selected when performing drag down.\n\n\n        event.preventDefault();\n      });\n    }\n    /**\n     * Defines default configuration and initializes WalkOnTable intance.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"initializeWalkontable\",\n    value: function initializeWalkontable() {\n      var _this2 = this;\n\n      var priv = privatePool.get(this);\n      var walkontableConfig = {\n        debug: function debug() {\n          return _this2.settings.debug;\n        },\n        externalRowCalculator: this.instance.getPlugin('autoRowSize') && this.instance.getPlugin('autoRowSize').isEnabled(),\n        table: priv.table,\n        preventOverflow: function preventOverflow() {\n          return _this2.settings.preventOverflow;\n        },\n        preventWheel: function preventWheel() {\n          return _this2.settings.preventWheel;\n        },\n        stretchH: function stretchH() {\n          return _this2.settings.stretchH;\n        },\n        data: this.instance.getDataAtCell,\n        totalRows: function totalRows() {\n          return _this2.instance.countRows();\n        },\n        totalColumns: function totalColumns() {\n          return _this2.instance.countCols();\n        },\n        fixedColumnsLeft: function fixedColumnsLeft() {\n          return _this2.settings.fixedColumnsLeft;\n        },\n        fixedRowsTop: function fixedRowsTop() {\n          return _this2.settings.fixedRowsTop;\n        },\n        fixedRowsBottom: function fixedRowsBottom() {\n          return _this2.settings.fixedRowsBottom;\n        },\n        minSpareRows: function minSpareRows() {\n          return _this2.settings.minSpareRows;\n        },\n        renderAllRows: this.settings.renderAllRows,\n        rowHeaders: function rowHeaders() {\n          var headerRenderers = [];\n\n          if (_this2.instance.hasRowHeaders()) {\n            headerRenderers.push(function (row, TH) {\n              return _this2.appendRowHeader(row, TH);\n            });\n          }\n\n          _this2.instance.runHooks('afterGetRowHeaderRenderers', headerRenderers);\n\n          return headerRenderers;\n        },\n        columnHeaders: function columnHeaders() {\n          var headerRenderers = [];\n\n          if (_this2.instance.hasColHeaders()) {\n            headerRenderers.push(function (column, TH) {\n              _this2.appendColHeader(column, TH);\n            });\n          }\n\n          _this2.instance.runHooks('afterGetColumnHeaderRenderers', headerRenderers);\n\n          return headerRenderers;\n        },\n        columnWidth: this.instance.getColWidth,\n        rowHeight: this.instance.getRowHeight,\n        cellRenderer: function cellRenderer(row, col, TD) {\n          var cellProperties = _this2.instance.getCellMeta(row, col);\n\n          var prop = _this2.instance.colToProp(col);\n\n          var value = _this2.instance.getDataAtRowProp(row, prop);\n\n          if (_this2.instance.hasHook('beforeValueRender')) {\n            value = _this2.instance.runHooks('beforeValueRender', value, cellProperties);\n          }\n\n          _this2.instance.runHooks('beforeRenderer', TD, row, col, prop, value, cellProperties);\n\n          _this2.instance.getCellRenderer(cellProperties)(_this2.instance, TD, row, col, prop, value, cellProperties);\n\n          _this2.instance.runHooks('afterRenderer', TD, row, col, prop, value, cellProperties);\n        },\n        selections: this.instance.selection.highlight,\n        hideBorderOnMouseDownOver: function hideBorderOnMouseDownOver() {\n          return _this2.settings.fragmentSelection;\n        },\n        onWindowResize: function onWindowResize() {\n          if (!_this2.instance || _this2.instance.isDestroyed) {\n            return;\n          }\n\n          _this2.instance.refreshDimensions();\n        },\n        onCellMouseDown: function onCellMouseDown(event, coords, TD, wt) {\n          var blockCalculations = {\n            row: false,\n            column: false,\n            cell: false\n          };\n\n          _this2.instance.listen();\n\n          _this2.activeWt = wt;\n          priv.mouseDown = true;\n\n          _this2.instance.runHooks('beforeOnCellMouseDown', event, coords, TD, blockCalculations);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          handleMouseEvent(event, {\n            coords: coords,\n            selection: _this2.instance.selection,\n            controller: blockCalculations\n          });\n\n          _this2.instance.runHooks('afterOnCellMouseDown', event, coords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellContextMenu: function onCellContextMenu(event, coords, TD, wt) {\n          _this2.activeWt = wt;\n          priv.mouseDown = false;\n\n          if (_this2.instance.selection.isInProgress()) {\n            _this2.instance.selection.finish();\n          }\n\n          _this2.instance.runHooks('beforeOnCellContextMenu', event, coords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellContextMenu', event, coords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOut: function onCellMouseOut(event, coords, TD, wt) {\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseOut', event, coords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseOut', event, coords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseOver: function onCellMouseOver(event, coords, TD, wt) {\n          var blockCalculations = {\n            row: false,\n            column: false,\n            cell: false\n          };\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseOver', event, coords, TD, blockCalculations);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          if (priv.mouseDown) {\n            handleMouseEvent(event, {\n              coords: coords,\n              selection: _this2.instance.selection,\n              controller: blockCalculations\n            });\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseOver', event, coords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellMouseUp: function onCellMouseUp(event, coords, TD, wt) {\n          _this2.activeWt = wt;\n\n          _this2.instance.runHooks('beforeOnCellMouseUp', event, coords, TD);\n\n          if (isImmediatePropagationStopped(event)) {\n            return;\n          }\n\n          _this2.instance.runHooks('afterOnCellMouseUp', event, coords, TD);\n\n          _this2.activeWt = _this2.wt;\n        },\n        onCellCornerMouseDown: function onCellCornerMouseDown(event) {\n          event.preventDefault();\n\n          _this2.instance.runHooks('afterOnCellCornerMouseDown', event);\n        },\n        onCellCornerDblClick: function onCellCornerDblClick(event) {\n          event.preventDefault();\n\n          _this2.instance.runHooks('afterOnCellCornerDblClick', event);\n        },\n        beforeDraw: function beforeDraw(force, skipRender) {\n          return _this2.beforeRender(force, skipRender);\n        },\n        onDraw: function onDraw(force) {\n          return _this2.onDraw(force);\n        },\n        onScrollVertically: function onScrollVertically() {\n          return _this2.instance.runHooks('afterScrollVertically');\n        },\n        onScrollHorizontally: function onScrollHorizontally() {\n          return _this2.instance.runHooks('afterScrollHorizontally');\n        },\n        onBeforeRemoveCellClassNames: function onBeforeRemoveCellClassNames() {\n          return _this2.instance.runHooks('beforeRemoveCellClassNames');\n        },\n        onAfterDrawSelection: function onAfterDrawSelection(currentRow, currentColumn, cornersOfSelection, layerLevel) {\n          return _this2.instance.runHooks('afterDrawSelection', currentRow, currentColumn, cornersOfSelection, layerLevel);\n        },\n        onBeforeDrawBorders: function onBeforeDrawBorders(corners, borderClassName) {\n          return _this2.instance.runHooks('beforeDrawBorders', corners, borderClassName);\n        },\n        onBeforeTouchScroll: function onBeforeTouchScroll() {\n          return _this2.instance.runHooks('beforeTouchScroll');\n        },\n        onAfterMomentumScroll: function onAfterMomentumScroll() {\n          return _this2.instance.runHooks('afterMomentumScroll');\n        },\n        onBeforeStretchingColumnWidth: function onBeforeStretchingColumnWidth(stretchedWidth, column) {\n          return _this2.instance.runHooks('beforeStretchingColumnWidth', stretchedWidth, column);\n        },\n        onModifyRowHeaderWidth: function onModifyRowHeaderWidth(rowHeaderWidth) {\n          return _this2.instance.runHooks('modifyRowHeaderWidth', rowHeaderWidth);\n        },\n        onModifyGetCellCoords: function onModifyGetCellCoords(row, column, topmost) {\n          return _this2.instance.runHooks('modifyGetCellCoords', row, column, topmost);\n        },\n        viewportRowCalculatorOverride: function viewportRowCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportRowRenderingOffset;\n\n          if (viewportOffset === 'auto' && _this2.settings.fixedRowsTop) {\n            viewportOffset = 10;\n          }\n\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var rows = _this2.instance.countRows();\n\n            if (typeof viewportOffset === 'number') {\n              calc.startRow = Math.max(calc.startRow - viewportOffset, 0);\n              calc.endRow = Math.min(calc.endRow + viewportOffset, rows - 1);\n            } else if (viewportOffset === 'auto') {\n              var center = calc.startRow + calc.endRow - calc.startRow;\n              var offset = Math.ceil(center / rows * 12);\n              calc.startRow = Math.max(calc.startRow - offset, 0);\n              calc.endRow = Math.min(calc.endRow + offset, rows - 1);\n            }\n          }\n\n          _this2.instance.runHooks('afterViewportRowCalculatorOverride', calc);\n        },\n        viewportColumnCalculatorOverride: function viewportColumnCalculatorOverride(calc) {\n          var viewportOffset = _this2.settings.viewportColumnRenderingOffset;\n\n          if (viewportOffset === 'auto' && _this2.settings.fixedColumnsLeft) {\n            viewportOffset = 10;\n          }\n\n          if (viewportOffset > 0 || viewportOffset === 'auto') {\n            var cols = _this2.instance.countCols();\n\n            if (typeof viewportOffset === 'number') {\n              calc.startColumn = Math.max(calc.startColumn - viewportOffset, 0);\n              calc.endColumn = Math.min(calc.endColumn + viewportOffset, cols - 1);\n            }\n\n            if (viewportOffset === 'auto') {\n              var center = calc.startColumn + calc.endColumn - calc.startColumn;\n              var offset = Math.ceil(center / cols * 12);\n              calc.startRow = Math.max(calc.startColumn - offset, 0);\n              calc.endColumn = Math.min(calc.endColumn + offset, cols - 1);\n            }\n          }\n\n          _this2.instance.runHooks('afterViewportColumnCalculatorOverride', calc);\n        },\n        rowHeaderWidth: function rowHeaderWidth() {\n          return _this2.settings.rowHeaderWidth;\n        },\n        columnHeaderHeight: function columnHeaderHeight() {\n          var columnHeaderHeight = _this2.instance.runHooks('modifyColumnHeaderHeight');\n\n          return _this2.settings.columnHeaderHeight || columnHeaderHeight;\n        }\n      };\n      this.instance.runHooks('beforeInitWalkontable', walkontableConfig);\n      this.wt = new Walkontable(walkontableConfig);\n      this.activeWt = this.wt;\n      var spreader = this.wt.wtTable.spreader; // We have to cache width and height after Walkontable initialization.\n\n      var _this$instance$rootEl = this.instance.rootElement.getBoundingClientRect(),\n          width = _this$instance$rootEl.width,\n          height = _this$instance$rootEl.height;\n\n      this.setLastSize(width, height);\n      this.eventManager.addEventListener(spreader, 'mousedown', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          stopPropagation(event);\n        }\n      });\n      this.eventManager.addEventListener(spreader, 'contextmenu', function (event) {\n        // right mouse button exactly on spreader means right click on the right hand side of vertical scrollbar\n        if (event.target === spreader && event.which === 3) {\n          stopPropagation(event);\n        }\n      });\n      this.eventManager.addEventListener(this.instance.rootDocument.documentElement, 'click', function () {\n        if (_this2.settings.observeDOMVisibility) {\n          if (_this2.wt.drawInterrupted) {\n            _this2.instance.forceFullRender = true;\n\n            _this2.render();\n          }\n        }\n      });\n    }\n    /**\n     * Checks if it's possible to create text selection in element.\n     *\n     * @private\n     * @param {HTMLElement} el\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isTextSelectionAllowed\",\n    value: function isTextSelectionAllowed(el) {\n      if (isInput(el)) {\n        return true;\n      }\n\n      var isChildOfTableBody = isChildOf(el, this.instance.view.wt.wtTable.spreader);\n\n      if (this.settings.fragmentSelection === true && isChildOfTableBody) {\n        return true;\n      }\n\n      if (this.settings.fragmentSelection === 'cell' && this.isSelectedOnlyCell() && isChildOfTableBody) {\n        return true;\n      }\n\n      if (!this.settings.fragmentSelection && this.isCellEdited() && this.isSelectedOnlyCell()) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Checks if user's been called mousedown.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isMouseDown\",\n    value: function isMouseDown() {\n      return privatePool.get(this).mouseDown;\n    }\n    /**\n     * Check if selected only one cell.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isSelectedOnlyCell\",\n    value: function isSelectedOnlyCell() {\n      var _ref = this.instance.getSelectedLast() || [],\n          _ref2 = _slicedToArray(_ref, 4),\n          row = _ref2[0],\n          col = _ref2[1],\n          rowEnd = _ref2[2],\n          colEnd = _ref2[3];\n\n      return row !== void 0 && row === rowEnd && col === colEnd;\n    }\n    /**\n     * Checks if active cell is editing.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isCellEdited\",\n    value: function isCellEdited() {\n      var activeEditor = this.instance.getActiveEditor();\n      return activeEditor && activeEditor.isOpened();\n    }\n    /**\n     * `beforeDraw` callback.\n     *\n     * @private\n     * @param {Boolean} force\n     * @param {Boolean} skipRender\n     */\n\n  }, {\n    key: \"beforeRender\",\n    value: function beforeRender(force, skipRender) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('beforeRender', this.instance.forceFullRender, skipRender);\n      }\n    }\n    /**\n     * `onDraw` callback.\n     *\n     * @private\n     * @param {Boolean} force\n     */\n\n  }, {\n    key: \"onDraw\",\n    value: function onDraw(force) {\n      if (force) {\n        // this.instance.forceFullRender = did Handsontable request full render?\n        this.instance.runHooks('afterRender', this.instance.forceFullRender);\n      }\n    }\n    /**\n     * Append row header to a TH element\n     *\n     * @private\n     * @param row\n     * @param TH\n     */\n\n  }, {\n    key: \"appendRowHeader\",\n    value: function appendRowHeader(row, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n\n        if (!hasClass(container, 'relative')) {\n          empty(TH);\n          this.appendRowHeader(row, TH);\n          return;\n        }\n\n        this.updateCellHeader(container.querySelector('.rowHeader'), row, this.instance.getRowHeader);\n      } else {\n        var _this$instance3 = this.instance,\n            rootDocument = _this$instance3.rootDocument,\n            getRowHeader = _this$instance3.getRowHeader;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'rowHeader';\n        this.updateCellHeader(span, row, getRowHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n\n      this.instance.runHooks('afterGetRowHeader', row, TH);\n    }\n    /**\n     * Append column header to a TH element\n     *\n     * @private\n     * @param col\n     * @param TH\n     */\n\n  }, {\n    key: \"appendColHeader\",\n    value: function appendColHeader(col, TH) {\n      if (TH.firstChild) {\n        var container = TH.firstChild;\n\n        if (hasClass(container, 'relative')) {\n          this.updateCellHeader(container.querySelector('.colHeader'), col, this.instance.getColHeader);\n        } else {\n          empty(TH);\n          this.appendColHeader(col, TH);\n        }\n      } else {\n        var rootDocument = this.instance.rootDocument;\n        var div = rootDocument.createElement('div');\n        var span = rootDocument.createElement('span');\n        div.className = 'relative';\n        span.className = 'colHeader';\n        this.updateCellHeader(span, col, this.instance.getColHeader);\n        div.appendChild(span);\n        TH.appendChild(div);\n      }\n\n      this.instance.runHooks('afterGetColHeader', col, TH);\n    }\n    /**\n     * Updates header cell content.\n     *\n     * @since 0.15.0-beta4\n     * @param {HTMLElement} element Element to update\n     * @param {Number} index Row index or column index\n     * @param {Function} content Function which should be returns content for this cell\n     */\n\n  }, {\n    key: \"updateCellHeader\",\n    value: function updateCellHeader(element, index, content) {\n      var renderedIndex = index;\n      var parentOverlay = this.wt.wtOverlays.getParentOverlay(element) || this.wt; // prevent wrong calculations from SampleGenerator\n\n      if (element.parentNode) {\n        if (hasClass(element, 'colHeader')) {\n          renderedIndex = parentOverlay.wtTable.columnFilter.sourceToRendered(index);\n        } else if (hasClass(element, 'rowHeader')) {\n          renderedIndex = parentOverlay.wtTable.rowFilter.sourceToRendered(index);\n        }\n      }\n\n      if (renderedIndex > -1) {\n        fastInnerHTML(element, content(index));\n      } else {\n        // workaround for https://github.com/handsontable/handsontable/issues/1946\n        fastInnerText(element, String.fromCharCode(160));\n        addClass(element, 'cornerHeader');\n      }\n    }\n    /**\n     * Given a element's left position relative to the viewport, returns maximum element width until the right\n     * edge of the viewport (before scrollbar)\n     *\n     * @private\n     * @param {Number} leftOffset\n     * @return {Number}\n     */\n\n  }, {\n    key: \"maximumVisibleElementWidth\",\n    value: function maximumVisibleElementWidth(leftOffset) {\n      var workspaceWidth = this.wt.wtViewport.getWorkspaceWidth();\n      var maxWidth = workspaceWidth - leftOffset;\n      return maxWidth > 0 ? maxWidth : 0;\n    }\n    /**\n     * Given a element's top position relative to the viewport, returns maximum element height until the bottom\n     * edge of the viewport (before scrollbar)\n     *\n     * @private\n     * @param {Number} topOffset\n     * @return {Number}\n     */\n\n  }, {\n    key: \"maximumVisibleElementHeight\",\n    value: function maximumVisibleElementHeight(topOffset) {\n      var workspaceHeight = this.wt.wtViewport.getWorkspaceHeight();\n      var maxHeight = workspaceHeight - topOffset;\n      return maxHeight > 0 ? maxHeight : 0;\n    }\n    /**\n     * Sets new dimensions of the container.\n     */\n\n  }, {\n    key: \"setLastSize\",\n    value: function setLastSize(width, height) {\n      var priv = privatePool.get(this);\n      var _ref3 = [width, height];\n      priv.lastWidth = _ref3[0];\n      priv.lastHeight = _ref3[1];\n    }\n    /**\n     * Returns cached dimensions.\n     */\n\n  }, {\n    key: \"getLastSize\",\n    value: function getLastSize() {\n      var priv = privatePool.get(this);\n      return {\n        width: priv.lastWidth,\n        height: priv.lastHeight\n      };\n    }\n    /**\n     * Checks if master overlay is active.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"mainViewIsActive\",\n    value: function mainViewIsActive() {\n      return this.wt === this.activeWt;\n    }\n    /**\n     * Destroyes internal WalkOnTable's instance. Detaches all of the bonded listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.wt.destroy();\n      this.eventManager.destroy();\n    }\n  }]);\n\n  return TableView;\n}();\n\nexport default TableView;"]},"metadata":{},"sourceType":"module"}