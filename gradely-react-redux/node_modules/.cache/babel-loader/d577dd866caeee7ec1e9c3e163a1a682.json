{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport BasePlugin from './../_base';\nimport { registerPlugin } from './../../plugins';\nimport { hasOwnProperty, objectEach } from './../../helpers/object';\nimport { rangeEach } from './../../helpers/number';\nimport { arrayEach, arrayReduce, arrayMap } from './../../helpers/array';\nimport { CellRange } from './../../3rdparty/walkontable/src';\nimport * as C from './../../i18n/constants';\nimport { bottom, left, noBorders, right, top } from './contextMenuItem';\nimport { createId, createDefaultCustomBorder, createSingleEmptyBorder, createEmptyBorders, extendDefaultBorder } from './utils';\nimport { detectSelectionType, normalizeSelectionFactory } from './../../selection';\n/**\n * @class CustomBorders\n * @plugin CustomBorders\n *\n * @description\n * This plugin enables an option to apply custom borders through the context menu (configurable with context menu key\n * `borders`).\n *\n * To initialize Handsontable with predefined custom borders, provide cell coordinates and border styles in a form\n * of an array.\n *\n * See [Custom Borders](http://docs.handsontable.com/demo-custom-borders.html) demo for more examples.\n *\n * @example\n * ```js\n * customBorders: [\n *   {\n *    range: {\n *      from: {\n *        row: 1,\n *        col: 1\n *      },\n *      to: {\n *        row: 3,\n *        col: 4\n *      },\n *    },\n *    left: {},\n *    right: {},\n *    top: {},\n *    bottom: {},\n *   },\n * ],\n *\n * // or\n * customBorders: [\n *   { row: 2,\n *     col: 2,\n *     left: {\n *       width: 2,\n *       color: 'red',\n *     },\n *     right: {\n *       width: 1,\n *       color: 'green',\n *     },\n *     top: '',\n *     bottom: '',\n *   }\n * ],\n * ```\n */\n\nvar CustomBorders = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(CustomBorders, _BasePlugin);\n\n  function CustomBorders(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CustomBorders);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomBorders).call(this, hotInstance));\n    /**\n     * Saved borders.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.savedBorders = [];\n    return _this;\n  }\n  /**\n  * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n  * hook and if it returns `true` than the {@link CustomBorders#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(CustomBorders, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().customBorders;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('init', function () {\n        return _this2.onAfterInit();\n      });\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hideBorders();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.changeBorderSettings();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n      * Set custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.setBorders([[1, 1, 2, 2], [6, 2, 0, 2]], {left: {width: 2, color: 'blue'}});\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.setBorders(hot.getSelectedRange(), {left: {hide: false, width: 2, color: 'blue'}});\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      * @param {Object} borderObject Object with `top`, `right`, `bottom` and `left` properties.\n      */\n\n  }, {\n    key: \"setBorders\",\n    value: function setBorders(selectionRanges, borderObject) {\n      var _this3 = this;\n\n      var defaultBorderKeys = ['top', 'right', 'bottom', 'left'];\n      var borderKeys = borderObject ? Object.keys(borderObject) : defaultBorderKeys;\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma2 = _slicedToArray(_selectionSchemaNorma, 4),\n            rowStart = _selectionSchemaNorma2[0],\n            columnStart = _selectionSchemaNorma2[1],\n            rowEnd = _selectionSchemaNorma2[2],\n            columnEnd = _selectionSchemaNorma2[3];\n\n        var _loop = function _loop(row) {\n          var _loop2 = function _loop2(col) {\n            arrayEach(borderKeys, function (borderKey) {\n              _this3.prepareBorderFromCustomAdded(row, col, borderObject, borderKey);\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop2(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop(row);\n        }\n      });\n      /*\n      The line below triggers a re-render of Handsontable. This will be a \"fastDraw\"\n      render, because that is the default for the TableView class.\n       The re-render is needed for borders on cells that did not have a border before.\n      The way this call works is that it calls Table.refreshSelections, which calls\n      Selection.getBorder, which creates a new instance of Border.\n       Seems wise to keep this single-direction flow of creating new Borders\n      */\n\n      this.hot.view.render();\n    }\n    /**\n      * Get custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.getBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.getBorders(hot.getSelectedRange());\n      * // Using without param - return all customBorders.\n      * customBordersPlugin.getBorders();\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      * @return {Object[]} Returns array of border objects.\n      */\n\n  }, {\n    key: \"getBorders\",\n    value: function getBorders(selectionRanges) {\n      var _this4 = this;\n\n      if (!Array.isArray(selectionRanges)) {\n        return this.savedBorders;\n      }\n\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      var selectedBorders = [];\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma3 = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma4 = _slicedToArray(_selectionSchemaNorma3, 4),\n            rowStart = _selectionSchemaNorma4[0],\n            columnStart = _selectionSchemaNorma4[1],\n            rowEnd = _selectionSchemaNorma4[2],\n            columnEnd = _selectionSchemaNorma4[3];\n\n        var _loop3 = function _loop3(row) {\n          var _loop4 = function _loop4(col) {\n            arrayEach(_this4.savedBorders, function (border) {\n              if (border.row === row && border.col === col) {\n                selectedBorders.push(border);\n              }\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop4(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop3(row);\n        }\n      });\n      return selectedBorders;\n    }\n    /**\n      * Clear custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.clearBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.clearBorders(hot.getSelectedRange());\n      * // Using without param - clear all customBorders.\n      * customBordersPlugin.clearBorders();\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      */\n\n  }, {\n    key: \"clearBorders\",\n    value: function clearBorders(selectionRanges) {\n      var _this5 = this;\n\n      if (selectionRanges) {\n        this.setBorders(selectionRanges);\n      } else {\n        arrayEach(this.savedBorders, function (border) {\n          _this5.clearBordersFromSelectionSettings(border.id);\n\n          _this5.clearNullCellRange();\n\n          _this5.hot.removeCellMeta(border.row, border.col, 'borders');\n        });\n        this.savedBorders.length = 0;\n      }\n    }\n    /**\n     * Insert WalkontableSelection instance into Walkontable settings.\n     *\n     * @private\n     * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"insertBorderIntoSettings\",\n    value: function insertBorderIntoSettings(border, place) {\n      var hasSavedBorders = this.checkSavedBorders(border);\n\n      if (!hasSavedBorders) {\n        this.savedBorders.push(border);\n      }\n\n      var coordinates = {\n        row: border.row,\n        col: border.col\n      };\n      var cellRange = new CellRange(coordinates, coordinates, coordinates);\n      var hasCustomSelections = this.checkCustomSelections(border, cellRange, place);\n\n      if (!hasCustomSelections) {\n        this.hot.selection.highlight.addCustomSelection({\n          border: border,\n          cellRange: cellRange\n        });\n      }\n    }\n    /**\n     * Prepare borders from setting (single cell).\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Object} borderDescriptor Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAdded\",\n    value: function prepareBorderFromCustomAdded(row, column, borderDescriptor, place) {\n      var border = createEmptyBorders(row, column);\n\n      if (borderDescriptor) {\n        border = extendDefaultBorder(border, borderDescriptor);\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            Object.assign(customSelection.settings, borderDescriptor);\n            border = customSelection.settings;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      this.hot.setCellMeta(row, column, 'borders', border);\n      this.insertBorderIntoSettings(border, place);\n    }\n    /**\n     * Prepare borders from setting (object).\n     *\n     * @private\n     * @param {Object} rowDecriptor Object with `range`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAddedRange\",\n    value: function prepareBorderFromCustomAddedRange(rowDecriptor) {\n      var _this6 = this;\n\n      var range = rowDecriptor.range;\n      rangeEach(range.from.row, range.to.row, function (rowIndex) {\n        rangeEach(range.from.col, range.to.col, function (colIndex) {\n          var border = createEmptyBorders(rowIndex, colIndex);\n          var add = 0;\n\n          if (rowIndex === range.from.row) {\n            if (hasOwnProperty(rowDecriptor, 'top')) {\n              add += 1;\n              border.top = rowDecriptor.top;\n            }\n          }\n\n          if (rowIndex === range.to.row) {\n            if (hasOwnProperty(rowDecriptor, 'bottom')) {\n              add += 1;\n              border.bottom = rowDecriptor.bottom;\n            }\n          }\n\n          if (colIndex === range.from.col) {\n            if (hasOwnProperty(rowDecriptor, 'left')) {\n              add += 1;\n              border.left = rowDecriptor.left;\n            }\n          }\n\n          if (colIndex === range.to.col) {\n            if (hasOwnProperty(rowDecriptor, 'right')) {\n              add += 1;\n              border.right = rowDecriptor.right;\n            }\n          }\n\n          if (add > 0) {\n            _this6.hot.setCellMeta(rowIndex, colIndex, 'borders', border);\n\n            _this6.insertBorderIntoSettings(border);\n          } else {// TODO sometimes it enters here. Why?\n          }\n        });\n      });\n    }\n    /**\n     * Remove border (triggered from context menu).\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     */\n\n  }, {\n    key: \"removeAllBorders\",\n    value: function removeAllBorders(row, column) {\n      var borderId = createId(row, column);\n      this.spliceBorder(borderId);\n      this.clearBordersFromSelectionSettings(borderId);\n      this.clearNullCellRange();\n      this.hot.removeCellMeta(row, column, 'borders');\n    }\n    /**\n     * Set borders for each cell re. to border position.\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {Boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"setBorder\",\n    value: function setBorder(row, column, place, remove) {\n      var bordersMeta = this.hot.getCellMeta(row, column).borders;\n\n      if (!bordersMeta || bordersMeta.border === void 0) {\n        bordersMeta = createEmptyBorders(row, column);\n      }\n\n      if (remove) {\n        bordersMeta[place] = createSingleEmptyBorder();\n        var hideCount = this.countHide(bordersMeta);\n\n        if (hideCount === 4) {\n          this.removeAllBorders(row, column);\n        } else {\n          var customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n          if (!customSelectionsChecker) {\n            this.insertBorderIntoSettings(bordersMeta);\n          }\n\n          this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n        }\n      } else {\n        bordersMeta[place] = createDefaultCustomBorder();\n\n        var _customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n        if (!_customSelectionsChecker) {\n          this.insertBorderIntoSettings(bordersMeta);\n        }\n\n        this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n      }\n    }\n    /**\n     * Prepare borders based on cell and border position.\n     *\n     * @private\n     * @param {Object} selected\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {Boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"prepareBorder\",\n    value: function prepareBorder(selected, place, remove) {\n      var _this7 = this;\n\n      arrayEach(selected, function (_ref) {\n        var start = _ref.start,\n            end = _ref.end;\n\n        if (start.row === end.row && start.col === end.col) {\n          if (place === 'noBorders') {\n            _this7.removeAllBorders(start.row, start.col);\n          } else {\n            _this7.setBorder(start.row, start.col, place, remove);\n          }\n        } else {\n          switch (place) {\n            case 'noBorders':\n              rangeEach(start.col, end.col, function (colIndex) {\n                rangeEach(start.row, end.row, function (rowIndex) {\n                  _this7.removeAllBorders(rowIndex, colIndex);\n                });\n              });\n              break;\n\n            case 'top':\n              rangeEach(start.col, end.col, function (topCol) {\n                _this7.setBorder(start.row, topCol, place, remove);\n              });\n              break;\n\n            case 'right':\n              rangeEach(start.row, end.row, function (rowRight) {\n                _this7.setBorder(rowRight, end.col, place, remove);\n              });\n              break;\n\n            case 'bottom':\n              rangeEach(start.col, end.col, function (bottomCol) {\n                _this7.setBorder(end.row, bottomCol, place, remove);\n              });\n              break;\n\n            case 'left':\n              rangeEach(start.row, end.row, function (rowLeft) {\n                _this7.setBorder(rowLeft, start.col, place, remove);\n              });\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n    }\n    /**\n     * Create borders from settings.\n     *\n     * @private\n     * @param {Array} customBorders Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"createCustomBorders\",\n    value: function createCustomBorders(customBorders) {\n      var _this8 = this;\n\n      arrayEach(customBorders, function (customBorder) {\n        if (customBorder.range) {\n          _this8.prepareBorderFromCustomAddedRange(customBorder);\n        } else {\n          _this8.prepareBorderFromCustomAdded(customBorder.row, customBorder.col, customBorder);\n        }\n      });\n    }\n    /**\n    * Count hide property in border object.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    */\n\n  }, {\n    key: \"countHide\",\n    value: function countHide(border) {\n      var values = Object.values(border);\n      return arrayReduce(values, function (accumulator, value) {\n        var result = accumulator;\n\n        if (value.hide) {\n          result += 1;\n        }\n\n        return result;\n      }, 0);\n    }\n    /**\n    * Clear borders settings from custom selections.\n    *\n    * @private\n    * @param {String} borderId Border id name as string.\n    */\n\n  }, {\n    key: \"clearBordersFromSelectionSettings\",\n    value: function clearBordersFromSelectionSettings(borderId) {\n      var index = arrayMap(this.hot.selection.highlight.customSelections, function (customSelection) {\n        return customSelection.settings.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.hot.selection.highlight.customSelections[index].clear();\n      }\n    }\n    /**\n    * Clear cellRange with null value.\n    *\n    * @private\n    */\n\n  }, {\n    key: \"clearNullCellRange\",\n    value: function clearNullCellRange() {\n      var _this9 = this;\n\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection, index) {\n        if (customSelection.cellRange === null) {\n          _this9.hot.selection.highlight.customSelections[index].destroy();\n\n          _this9.hot.selection.highlight.customSelections.splice(index, 1);\n\n          return false; // breaks forAll\n        }\n      });\n    }\n    /**\n      * Hide custom borders.\n      *\n      * @private\n      */\n\n  }, {\n    key: \"hideBorders\",\n    value: function hideBorders() {\n      var _this10 = this;\n\n      arrayEach(this.savedBorders, function (border) {\n        _this10.clearBordersFromSelectionSettings(border.id);\n\n        _this10.clearNullCellRange();\n      });\n    }\n    /**\n    * Splice border from savedBorders.\n    *\n    * @private\n    * @param {String} borderId Border id name as string.\n    */\n\n  }, {\n    key: \"spliceBorder\",\n    value: function spliceBorder(borderId) {\n      var index = arrayMap(this.savedBorders, function (border) {\n        return border.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.savedBorders.splice(index, 1);\n      }\n    }\n    /**\n    * Check if an border already exists in the savedBorders array, and if true update border in savedBorders.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    *\n    * @return {Boolean}\n    */\n\n  }, {\n    key: \"checkSavedBorders\",\n    value: function checkSavedBorders(border) {\n      var _this11 = this;\n\n      var check = false;\n      var hideCount = this.countHide(border);\n\n      if (hideCount === 4) {\n        this.spliceBorder(border.id);\n        check = true;\n      } else {\n        arrayEach(this.savedBorders, function (savedBorder, index) {\n          if (border.id === savedBorder.id) {\n            _this11.savedBorders[index] = border;\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n    * Check if an border already exists in the customSelections, and if true call toggleHiddenClass method.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n    * @param {Boolean} remove True when remove borders, and false when add borders.\n    *\n    * @return {Boolean}\n    */\n\n  }, {\n    key: \"checkCustomSelectionsFromContextMenu\",\n    value: function checkCustomSelectionsFromContextMenu(border, place, remove) {\n      var check = false;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n        if (border.id === customSelection.settings.id) {\n          objectEach(customSelection.instanceBorders, function (borderObject) {\n            borderObject.toggleHiddenClass(place, remove); // TODO this also bad?\n          });\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n      return check;\n    }\n    /**\n    * Check if an border already exists in the customSelections, and if true reset cellRange.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    * @param {CellRange} cellRange\n    * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n    *\n    * @return {Boolean}\n    */\n\n  }, {\n    key: \"checkCustomSelections\",\n    value: function checkCustomSelections(border, cellRange, place) {\n      var hideCount = this.countHide(border);\n      var check = false;\n\n      if (hideCount === 4) {\n        this.removeAllBorders(border.row, border.col);\n        check = true;\n      } else {\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            customSelection.cellRange = cellRange;\n\n            if (place) {\n              objectEach(customSelection.instanceBorders, function (borderObject) {\n                borderObject.changeBorderStyle(place, border);\n              });\n            }\n\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n     * Change borders from settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"changeBorderSettings\",\n    value: function changeBorderSettings() {\n      var customBorders = this.hot.getSettings().customBorders;\n\n      if (Array.isArray(customBorders)) {\n        if (!customBorders.length) {\n          this.savedBorders = customBorders;\n        }\n\n        this.createCustomBorders(customBorders);\n      } else if (customBorders !== void 0) {\n        this.createCustomBorders(this.savedBorders);\n      }\n    }\n    /**\n    * Add border options to context menu.\n    *\n    * @private\n    * @param {Object} defaultOptions Context menu items.\n    */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(defaultOptions) {\n      if (!this.hot.getSettings().customBorders) {\n        return;\n      }\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'borders',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS);\n        },\n        disabled: function disabled() {\n          return this.selection.isSelectedByCorner();\n        },\n        submenu: {\n          items: [top(this), right(this), bottom(this), left(this), noBorders(this)]\n        }\n      });\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.changeBorderSettings();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(CustomBorders.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return CustomBorders;\n}(BasePlugin);\n\nregisterPlugin('customBorders', CustomBorders);\nexport default CustomBorders;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/node_modules/handsontable/es/plugins/customBorders/customBorders.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Object","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","registerPlugin","objectEach","rangeEach","arrayEach","arrayReduce","arrayMap","CellRange","C","bottom","left","noBorders","right","top","createId","createDefaultCustomBorder","createSingleEmptyBorder","createEmptyBorders","extendDefaultBorder","detectSelectionType","normalizeSelectionFactory","CustomBorders","_BasePlugin","hotInstance","_this","savedBorders","isEnabled","hot","getSettings","customBorders","enablePlugin","_this2","enabled","addHook","options","onAfterContextMenuDefaultOptions","onAfterInit","disablePlugin","hideBorders","updatePlugin","changeBorderSettings","setBorders","selectionRanges","borderObject","_this3","defaultBorderKeys","borderKeys","keys","selectionType","selectionSchemaNormalizer","selection","_selectionSchemaNorma","_selectionSchemaNorma2","rowStart","columnStart","rowEnd","columnEnd","_loop","row","_loop2","col","borderKey","prepareBorderFromCustomAdded","view","render","getBorders","_this4","selectedBorders","_selectionSchemaNorma3","_selectionSchemaNorma4","_loop3","_loop4","border","clearBorders","_this5","clearBordersFromSelectionSettings","id","clearNullCellRange","removeCellMeta","insertBorderIntoSettings","place","hasSavedBorders","checkSavedBorders","coordinates","cellRange","hasCustomSelections","checkCustomSelections","highlight","addCustomSelection","column","borderDescriptor","customSelections","customSelection","settings","assign","setCellMeta","prepareBorderFromCustomAddedRange","rowDecriptor","_this6","range","from","to","rowIndex","colIndex","add","removeAllBorders","borderId","spliceBorder","setBorder","remove","bordersMeta","getCellMeta","borders","hideCount","countHide","customSelectionsChecker","checkCustomSelectionsFromContextMenu","_customSelectionsChecker","prepareBorder","selected","_this7","_ref","start","end","topCol","rowRight","bottomCol","rowLeft","createCustomBorders","_this8","customBorder","values","accumulator","result","hide","index","indexOf","clear","_this9","destroy","splice","_this10","_this11","check","savedBorder","instanceBorders","toggleHiddenClass","changeBorderStyle","defaultOptions","items","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_BORDERS","disabled","isSelectedByCorner","submenu"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.object.assign\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.object.values\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from './../_base';\nimport { registerPlugin } from './../../plugins';\nimport { hasOwnProperty, objectEach } from './../../helpers/object';\nimport { rangeEach } from './../../helpers/number';\nimport { arrayEach, arrayReduce, arrayMap } from './../../helpers/array';\nimport { CellRange } from './../../3rdparty/walkontable/src';\nimport * as C from './../../i18n/constants';\nimport { bottom, left, noBorders, right, top } from './contextMenuItem';\nimport { createId, createDefaultCustomBorder, createSingleEmptyBorder, createEmptyBorders, extendDefaultBorder } from './utils';\nimport { detectSelectionType, normalizeSelectionFactory } from './../../selection';\n/**\n * @class CustomBorders\n * @plugin CustomBorders\n *\n * @description\n * This plugin enables an option to apply custom borders through the context menu (configurable with context menu key\n * `borders`).\n *\n * To initialize Handsontable with predefined custom borders, provide cell coordinates and border styles in a form\n * of an array.\n *\n * See [Custom Borders](http://docs.handsontable.com/demo-custom-borders.html) demo for more examples.\n *\n * @example\n * ```js\n * customBorders: [\n *   {\n *    range: {\n *      from: {\n *        row: 1,\n *        col: 1\n *      },\n *      to: {\n *        row: 3,\n *        col: 4\n *      },\n *    },\n *    left: {},\n *    right: {},\n *    top: {},\n *    bottom: {},\n *   },\n * ],\n *\n * // or\n * customBorders: [\n *   { row: 2,\n *     col: 2,\n *     left: {\n *       width: 2,\n *       color: 'red',\n *     },\n *     right: {\n *       width: 1,\n *       color: 'green',\n *     },\n *     top: '',\n *     bottom: '',\n *   }\n * ],\n * ```\n */\n\nvar CustomBorders =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(CustomBorders, _BasePlugin);\n\n  function CustomBorders(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CustomBorders);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomBorders).call(this, hotInstance));\n    /**\n     * Saved borders.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.savedBorders = [];\n    return _this;\n  }\n  /**\n  * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n  * hook and if it returns `true` than the {@link CustomBorders#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(CustomBorders, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().customBorders;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('init', function () {\n        return _this2.onAfterInit();\n      });\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hideBorders();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.changeBorderSettings();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n      * Set custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.setBorders([[1, 1, 2, 2], [6, 2, 0, 2]], {left: {width: 2, color: 'blue'}});\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.setBorders(hot.getSelectedRange(), {left: {hide: false, width: 2, color: 'blue'}});\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      * @param {Object} borderObject Object with `top`, `right`, `bottom` and `left` properties.\n      */\n\n  }, {\n    key: \"setBorders\",\n    value: function setBorders(selectionRanges, borderObject) {\n      var _this3 = this;\n\n      var defaultBorderKeys = ['top', 'right', 'bottom', 'left'];\n      var borderKeys = borderObject ? Object.keys(borderObject) : defaultBorderKeys;\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma2 = _slicedToArray(_selectionSchemaNorma, 4),\n            rowStart = _selectionSchemaNorma2[0],\n            columnStart = _selectionSchemaNorma2[1],\n            rowEnd = _selectionSchemaNorma2[2],\n            columnEnd = _selectionSchemaNorma2[3];\n\n        var _loop = function _loop(row) {\n          var _loop2 = function _loop2(col) {\n            arrayEach(borderKeys, function (borderKey) {\n              _this3.prepareBorderFromCustomAdded(row, col, borderObject, borderKey);\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop2(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop(row);\n        }\n      });\n      /*\n      The line below triggers a re-render of Handsontable. This will be a \"fastDraw\"\n      render, because that is the default for the TableView class.\n       The re-render is needed for borders on cells that did not have a border before.\n      The way this call works is that it calls Table.refreshSelections, which calls\n      Selection.getBorder, which creates a new instance of Border.\n       Seems wise to keep this single-direction flow of creating new Borders\n      */\n\n      this.hot.view.render();\n    }\n    /**\n      * Get custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.getBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.getBorders(hot.getSelectedRange());\n      * // Using without param - return all customBorders.\n      * customBordersPlugin.getBorders();\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      * @return {Object[]} Returns array of border objects.\n      */\n\n  }, {\n    key: \"getBorders\",\n    value: function getBorders(selectionRanges) {\n      var _this4 = this;\n\n      if (!Array.isArray(selectionRanges)) {\n        return this.savedBorders;\n      }\n\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      var selectedBorders = [];\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma3 = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma4 = _slicedToArray(_selectionSchemaNorma3, 4),\n            rowStart = _selectionSchemaNorma4[0],\n            columnStart = _selectionSchemaNorma4[1],\n            rowEnd = _selectionSchemaNorma4[2],\n            columnEnd = _selectionSchemaNorma4[3];\n\n        var _loop3 = function _loop3(row) {\n          var _loop4 = function _loop4(col) {\n            arrayEach(_this4.savedBorders, function (border) {\n              if (border.row === row && border.col === col) {\n                selectedBorders.push(border);\n              }\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop4(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop3(row);\n        }\n      });\n      return selectedBorders;\n    }\n    /**\n      * Clear custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.clearBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.clearBorders(hot.getSelectedRange());\n      * // Using without param - clear all customBorders.\n      * customBordersPlugin.clearBorders();\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      */\n\n  }, {\n    key: \"clearBorders\",\n    value: function clearBorders(selectionRanges) {\n      var _this5 = this;\n\n      if (selectionRanges) {\n        this.setBorders(selectionRanges);\n      } else {\n        arrayEach(this.savedBorders, function (border) {\n          _this5.clearBordersFromSelectionSettings(border.id);\n\n          _this5.clearNullCellRange();\n\n          _this5.hot.removeCellMeta(border.row, border.col, 'borders');\n        });\n        this.savedBorders.length = 0;\n      }\n    }\n    /**\n     * Insert WalkontableSelection instance into Walkontable settings.\n     *\n     * @private\n     * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"insertBorderIntoSettings\",\n    value: function insertBorderIntoSettings(border, place) {\n      var hasSavedBorders = this.checkSavedBorders(border);\n\n      if (!hasSavedBorders) {\n        this.savedBorders.push(border);\n      }\n\n      var coordinates = {\n        row: border.row,\n        col: border.col\n      };\n      var cellRange = new CellRange(coordinates, coordinates, coordinates);\n      var hasCustomSelections = this.checkCustomSelections(border, cellRange, place);\n\n      if (!hasCustomSelections) {\n        this.hot.selection.highlight.addCustomSelection({\n          border: border,\n          cellRange: cellRange\n        });\n      }\n    }\n    /**\n     * Prepare borders from setting (single cell).\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Object} borderDescriptor Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAdded\",\n    value: function prepareBorderFromCustomAdded(row, column, borderDescriptor, place) {\n      var border = createEmptyBorders(row, column);\n\n      if (borderDescriptor) {\n        border = extendDefaultBorder(border, borderDescriptor);\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            Object.assign(customSelection.settings, borderDescriptor);\n            border = customSelection.settings;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      this.hot.setCellMeta(row, column, 'borders', border);\n      this.insertBorderIntoSettings(border, place);\n    }\n    /**\n     * Prepare borders from setting (object).\n     *\n     * @private\n     * @param {Object} rowDecriptor Object with `range`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAddedRange\",\n    value: function prepareBorderFromCustomAddedRange(rowDecriptor) {\n      var _this6 = this;\n\n      var range = rowDecriptor.range;\n      rangeEach(range.from.row, range.to.row, function (rowIndex) {\n        rangeEach(range.from.col, range.to.col, function (colIndex) {\n          var border = createEmptyBorders(rowIndex, colIndex);\n          var add = 0;\n\n          if (rowIndex === range.from.row) {\n            if (hasOwnProperty(rowDecriptor, 'top')) {\n              add += 1;\n              border.top = rowDecriptor.top;\n            }\n          }\n\n          if (rowIndex === range.to.row) {\n            if (hasOwnProperty(rowDecriptor, 'bottom')) {\n              add += 1;\n              border.bottom = rowDecriptor.bottom;\n            }\n          }\n\n          if (colIndex === range.from.col) {\n            if (hasOwnProperty(rowDecriptor, 'left')) {\n              add += 1;\n              border.left = rowDecriptor.left;\n            }\n          }\n\n          if (colIndex === range.to.col) {\n            if (hasOwnProperty(rowDecriptor, 'right')) {\n              add += 1;\n              border.right = rowDecriptor.right;\n            }\n          }\n\n          if (add > 0) {\n            _this6.hot.setCellMeta(rowIndex, colIndex, 'borders', border);\n\n            _this6.insertBorderIntoSettings(border);\n          } else {// TODO sometimes it enters here. Why?\n          }\n        });\n      });\n    }\n    /**\n     * Remove border (triggered from context menu).\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     */\n\n  }, {\n    key: \"removeAllBorders\",\n    value: function removeAllBorders(row, column) {\n      var borderId = createId(row, column);\n      this.spliceBorder(borderId);\n      this.clearBordersFromSelectionSettings(borderId);\n      this.clearNullCellRange();\n      this.hot.removeCellMeta(row, column, 'borders');\n    }\n    /**\n     * Set borders for each cell re. to border position.\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {Boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"setBorder\",\n    value: function setBorder(row, column, place, remove) {\n      var bordersMeta = this.hot.getCellMeta(row, column).borders;\n\n      if (!bordersMeta || bordersMeta.border === void 0) {\n        bordersMeta = createEmptyBorders(row, column);\n      }\n\n      if (remove) {\n        bordersMeta[place] = createSingleEmptyBorder();\n        var hideCount = this.countHide(bordersMeta);\n\n        if (hideCount === 4) {\n          this.removeAllBorders(row, column);\n        } else {\n          var customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n          if (!customSelectionsChecker) {\n            this.insertBorderIntoSettings(bordersMeta);\n          }\n\n          this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n        }\n      } else {\n        bordersMeta[place] = createDefaultCustomBorder();\n\n        var _customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n        if (!_customSelectionsChecker) {\n          this.insertBorderIntoSettings(bordersMeta);\n        }\n\n        this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n      }\n    }\n    /**\n     * Prepare borders based on cell and border position.\n     *\n     * @private\n     * @param {Object} selected\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {Boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"prepareBorder\",\n    value: function prepareBorder(selected, place, remove) {\n      var _this7 = this;\n\n      arrayEach(selected, function (_ref) {\n        var start = _ref.start,\n            end = _ref.end;\n\n        if (start.row === end.row && start.col === end.col) {\n          if (place === 'noBorders') {\n            _this7.removeAllBorders(start.row, start.col);\n          } else {\n            _this7.setBorder(start.row, start.col, place, remove);\n          }\n        } else {\n          switch (place) {\n            case 'noBorders':\n              rangeEach(start.col, end.col, function (colIndex) {\n                rangeEach(start.row, end.row, function (rowIndex) {\n                  _this7.removeAllBorders(rowIndex, colIndex);\n                });\n              });\n              break;\n\n            case 'top':\n              rangeEach(start.col, end.col, function (topCol) {\n                _this7.setBorder(start.row, topCol, place, remove);\n              });\n              break;\n\n            case 'right':\n              rangeEach(start.row, end.row, function (rowRight) {\n                _this7.setBorder(rowRight, end.col, place, remove);\n              });\n              break;\n\n            case 'bottom':\n              rangeEach(start.col, end.col, function (bottomCol) {\n                _this7.setBorder(end.row, bottomCol, place, remove);\n              });\n              break;\n\n            case 'left':\n              rangeEach(start.row, end.row, function (rowLeft) {\n                _this7.setBorder(rowLeft, start.col, place, remove);\n              });\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n    }\n    /**\n     * Create borders from settings.\n     *\n     * @private\n     * @param {Array} customBorders Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"createCustomBorders\",\n    value: function createCustomBorders(customBorders) {\n      var _this8 = this;\n\n      arrayEach(customBorders, function (customBorder) {\n        if (customBorder.range) {\n          _this8.prepareBorderFromCustomAddedRange(customBorder);\n        } else {\n          _this8.prepareBorderFromCustomAdded(customBorder.row, customBorder.col, customBorder);\n        }\n      });\n    }\n    /**\n    * Count hide property in border object.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    */\n\n  }, {\n    key: \"countHide\",\n    value: function countHide(border) {\n      var values = Object.values(border);\n      return arrayReduce(values, function (accumulator, value) {\n        var result = accumulator;\n\n        if (value.hide) {\n          result += 1;\n        }\n\n        return result;\n      }, 0);\n    }\n    /**\n    * Clear borders settings from custom selections.\n    *\n    * @private\n    * @param {String} borderId Border id name as string.\n    */\n\n  }, {\n    key: \"clearBordersFromSelectionSettings\",\n    value: function clearBordersFromSelectionSettings(borderId) {\n      var index = arrayMap(this.hot.selection.highlight.customSelections, function (customSelection) {\n        return customSelection.settings.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.hot.selection.highlight.customSelections[index].clear();\n      }\n    }\n    /**\n    * Clear cellRange with null value.\n    *\n    * @private\n    */\n\n  }, {\n    key: \"clearNullCellRange\",\n    value: function clearNullCellRange() {\n      var _this9 = this;\n\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection, index) {\n        if (customSelection.cellRange === null) {\n          _this9.hot.selection.highlight.customSelections[index].destroy();\n\n          _this9.hot.selection.highlight.customSelections.splice(index, 1);\n\n          return false; // breaks forAll\n        }\n      });\n    }\n    /**\n      * Hide custom borders.\n      *\n      * @private\n      */\n\n  }, {\n    key: \"hideBorders\",\n    value: function hideBorders() {\n      var _this10 = this;\n\n      arrayEach(this.savedBorders, function (border) {\n        _this10.clearBordersFromSelectionSettings(border.id);\n\n        _this10.clearNullCellRange();\n      });\n    }\n    /**\n    * Splice border from savedBorders.\n    *\n    * @private\n    * @param {String} borderId Border id name as string.\n    */\n\n  }, {\n    key: \"spliceBorder\",\n    value: function spliceBorder(borderId) {\n      var index = arrayMap(this.savedBorders, function (border) {\n        return border.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.savedBorders.splice(index, 1);\n      }\n    }\n    /**\n    * Check if an border already exists in the savedBorders array, and if true update border in savedBorders.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    *\n    * @return {Boolean}\n    */\n\n  }, {\n    key: \"checkSavedBorders\",\n    value: function checkSavedBorders(border) {\n      var _this11 = this;\n\n      var check = false;\n      var hideCount = this.countHide(border);\n\n      if (hideCount === 4) {\n        this.spliceBorder(border.id);\n        check = true;\n      } else {\n        arrayEach(this.savedBorders, function (savedBorder, index) {\n          if (border.id === savedBorder.id) {\n            _this11.savedBorders[index] = border;\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n    * Check if an border already exists in the customSelections, and if true call toggleHiddenClass method.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n    * @param {Boolean} remove True when remove borders, and false when add borders.\n    *\n    * @return {Boolean}\n    */\n\n  }, {\n    key: \"checkCustomSelectionsFromContextMenu\",\n    value: function checkCustomSelectionsFromContextMenu(border, place, remove) {\n      var check = false;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n        if (border.id === customSelection.settings.id) {\n          objectEach(customSelection.instanceBorders, function (borderObject) {\n            borderObject.toggleHiddenClass(place, remove); // TODO this also bad?\n          });\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n      return check;\n    }\n    /**\n    * Check if an border already exists in the customSelections, and if true reset cellRange.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    * @param {CellRange} cellRange\n    * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n    *\n    * @return {Boolean}\n    */\n\n  }, {\n    key: \"checkCustomSelections\",\n    value: function checkCustomSelections(border, cellRange, place) {\n      var hideCount = this.countHide(border);\n      var check = false;\n\n      if (hideCount === 4) {\n        this.removeAllBorders(border.row, border.col);\n        check = true;\n      } else {\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            customSelection.cellRange = cellRange;\n\n            if (place) {\n              objectEach(customSelection.instanceBorders, function (borderObject) {\n                borderObject.changeBorderStyle(place, border);\n              });\n            }\n\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n     * Change borders from settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"changeBorderSettings\",\n    value: function changeBorderSettings() {\n      var customBorders = this.hot.getSettings().customBorders;\n\n      if (Array.isArray(customBorders)) {\n        if (!customBorders.length) {\n          this.savedBorders = customBorders;\n        }\n\n        this.createCustomBorders(customBorders);\n      } else if (customBorders !== void 0) {\n        this.createCustomBorders(this.savedBorders);\n      }\n    }\n    /**\n    * Add border options to context menu.\n    *\n    * @private\n    * @param {Object} defaultOptions Context menu items.\n    */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(defaultOptions) {\n      if (!this.hot.getSettings().customBorders) {\n        return;\n      }\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'borders',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS);\n        },\n        disabled: function disabled() {\n          return this.selection.isSelectedByCorner();\n        },\n        submenu: {\n          items: [top(this), right(this), bottom(this), left(this), noBorders(this)]\n        }\n      });\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.changeBorderSettings();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(CustomBorders.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return CustomBorders;\n}(BasePlugin);\n\nregisterPlugin('customBorders', CustomBorders);\nexport default CustomBorders;"]},"metadata":{},"sourceType":"module"}