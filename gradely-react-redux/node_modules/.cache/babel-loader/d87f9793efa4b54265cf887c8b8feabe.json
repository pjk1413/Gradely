{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\teacher\\\\CreateAssignmentTable.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Trash from \"./../../images/icons/trash.svg\";\nimport { updateAssignment } from './../../action/courseActions';\nimport { holdTempAssignment } from './../../action/tempActions';\nimport Bounce from 'react-reveal/Bounce';\nimport axios from 'axios';\nimport { holdTempCourse } from './../../action/tempActions';\n\nclass CreateAssignmentTable extends Component {\n  constructor() {\n    super();\n    this.editAssignment = this.editAssignment.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.state = {\n      edit: false\n    };\n  }\n\n  deleteAssignment() {//NEED TO ADD AN ACITON CALL HERE\n  }\n\n  updateAssignment() {\n    const assignment = {\n      id: this.props.editAssignment.id,\n      name: this.state.name ? this.state.name : this.props.editAssignment.name,\n      totalPoints: this.state.totalPoints ? this.state.totalPoints : this.props.editAssignment.totalPoints,\n      dueDate: this.state.dueDate ? this.state.dueDate : this.props.editAssignment.dueDate,\n      assignmentType: this.state.assignmentType ? this.state.assignmentType : this.props.editAssignment.assignmentType\n    }; ///NEED TO ADD A SEND CALL HERE\n\n    this.props.updateAssignment(assignment);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleUpdate() {\n    this.setState({\n      edit: !this.state.edit\n    });\n  }\n\n  handleClick(assignment) {\n    this.props.holdTempAssignment(assignment);\n  }\n\n  editAssignment(id) {\n    if (this.state.edit) {\n      if (this.props.editAssignment && this.props.editAssignment.id === id) {\n        document.getElementById(\"update-button\").style.display = 'block';\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      document.getElementById(\"update-button\").style.display = 'none';\n      return false;\n    }\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/assignment/getTypes\").then(response => {\n      this.setState({\n        assignmentTypes: response.data\n      });\n    });\n  } // componentWillReceiveProps(prevProps) {\n  //     this.props.courses && this.props.courses.forEach(course => {\n  //         if (course.id === (this.props.editCourse && this.props.editCourse.id)) {\n  //             if (prevProps !== ) {\n  //             }\n  //             this.props.holdTempCourse(course)\n  //         }\n  //     });\n  // }\n  //componentWillUpdate\n  //componentDidUpdate  \n\n\n  render() {\n    const assignmentTypes = this.state.assignmentTypes && this.state.assignmentTypes.map(type => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: type,\n        value: type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }\n      }, type);\n    });\n    let count = 0; //get course that is selected and find all assignments for that course\n\n    const assignmentList = this.props.editCourse && this.props.editCourse.assignments && this.props.editCourse.assignments.map(assignment => {\n      count++;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: assignment.id,\n        className: this.props.editAssignment && this.props.editAssignment.id === assignment.id ? \"bg-warning\" : null,\n        onClick: () => this.handleClick(assignment),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, count), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, this.editAssignment(assignment.id) ? /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        onChange: this.onChange,\n        name: \"name\",\n        placeholder: assignment.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 63\n        }\n      }) : assignment.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, this.editAssignment(assignment.id) ? /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        onChange: this.onChange,\n        name: \"totalPoints\",\n        placeholder: assignment.totalPoints,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 63\n        }\n      }) : assignment.totalPoints), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, this.editAssignment(assignment.id) ? /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"date\",\n        onChange: this.onChange,\n        name: \"dueDate\",\n        placeholder: assignment.dueDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 63\n        }\n      }) : assignment.dueDate), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, this.editAssignment(assignment.id) ? /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.onChange,\n        className: \"custom-select\",\n        name: \"assignmentType\",\n        onChange: this.onChange,\n        name: \"assignmentType\",\n        placeholder: assignment.assignmentType,\n        id: \"assignmentType\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, assignmentTypes) : assignment.assignmentType));\n    });\n    console.log(this.state.edit);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row bg-light my-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger mx-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, \"Delete Selected\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary mx-2\",\n      onClick: this.handleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, \"Edit Selected\"), /*#__PURE__*/React.createElement(Bounce, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary ml-auto mr-2\",\n      style: {\n        display: 'none'\n      },\n      id: \"update-button\",\n      onClick: this.updateAssignment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, \"Update\"))), /*#__PURE__*/React.createElement(\"table\", {\n      class: \"table table-hover table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, \"Points\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, \"Due Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, \"Type\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, assignmentList)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  editAssignment: state.temp.editAssignment,\n  courses: state.courses.courses\n});\n\nexport default connect(mapStateToProps, {\n  holdTempAssignment,\n  holdTempCourse\n})(CreateAssignmentTable);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/teacher/CreateAssignmentTable.js"],"names":["React","Component","connect","updateAssignment","holdTempAssignment","Bounce","axios","holdTempCourse","CreateAssignmentTable","constructor","editAssignment","bind","handleUpdate","state","edit","deleteAssignment","assignment","id","props","name","totalPoints","dueDate","assignmentType","onChange","e","setState","target","value","handleClick","document","getElementById","style","display","componentDidMount","get","then","response","assignmentTypes","data","render","map","type","count","assignmentList","editCourse","assignments","console","log","mapStateToProps","temp","courses"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Trash from './../../images/icons/trash.svg';\r\nimport { updateAssignment } from './../../action/courseActions';\r\nimport { holdTempAssignment } from './../../action/tempActions';\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport axios from 'axios';\r\nimport { holdTempCourse } from './../../action/tempActions';\r\n\r\nclass CreateAssignmentTable extends Component {\r\n    constructor() {\r\n        super()\r\n        this.editAssignment = this.editAssignment.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n        this.state = {\r\n            edit: false\r\n        }\r\n    }\r\n\r\n    deleteAssignment() {\r\n        //NEED TO ADD AN ACITON CALL HERE\r\n    }\r\n\r\n    updateAssignment() {\r\n        const assignment = {\r\n            id: this.props.editAssignment.id,\r\n            name: this.state.name ? this.state.name : this.props.editAssignment.name,\r\n            totalPoints: this.state.totalPoints ? this.state.totalPoints : this.props.editAssignment.totalPoints,\r\n            dueDate: this.state.dueDate ? this.state.dueDate : this.props.editAssignment.dueDate,\r\n            assignmentType: this.state.assignmentType ? this.state.assignmentType : this.props.editAssignment.assignmentType\r\n        }\r\n\r\n///NEED TO ADD A SEND CALL HERE\r\n        this.props.updateAssignment(assignment)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleUpdate() {\r\n        this.setState({\r\n            edit: !this.state.edit\r\n        })\r\n    }\r\n\r\n    handleClick(assignment) {\r\n        this.props.holdTempAssignment(assignment)\r\n    }\r\n\r\n    editAssignment(id) {\r\n        if (this.state.edit) {\r\n            if (this.props.editAssignment && this.props.editAssignment.id === id) {\r\n                document.getElementById(\"update-button\").style.display = 'block';\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        } else {\r\n            document.getElementById(\"update-button\").style.display = 'none';\r\n            return false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8080/assignment/getTypes\").then(response => {\r\n            this.setState({\r\n                assignmentTypes: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    // componentWillReceiveProps(prevProps) {\r\n    //     this.props.courses && this.props.courses.forEach(course => {\r\n    //         if (course.id === (this.props.editCourse && this.props.editCourse.id)) {\r\n    //             if (prevProps !== ) {\r\n                    \r\n    //             }\r\n    //             this.props.holdTempCourse(course)\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    //componentWillUpdate\r\n    //componentDidUpdate  \r\n    \r\n\r\n    render() {\r\n\r\n        const assignmentTypes = this.state.assignmentTypes && this.state.assignmentTypes.map(type => {\r\n            return <option key={type} value={type}>{type}</option>\r\n        })\r\n\r\n        let count = 0;\r\n\r\n        \r\n\r\n        //get course that is selected and find all assignments for that course\r\n        const assignmentList = this.props.editCourse && this.props.editCourse.assignments && this.props.editCourse.assignments.map(assignment => {\r\n            count++;\r\n            return (\r\n                <tr key={assignment.id}\r\n                    className={this.props.editAssignment && this.props.editAssignment.id === assignment.id ? \"bg-warning\" : null}\r\n                    onClick={() => this.handleClick(assignment)}>\r\n\r\n                    <th scope=\"row\">{count}</th>\r\n                    <td>{this.editAssignment(assignment.id) ? <input className=\"form-control\" type=\"text\" onChange={this.onChange} name=\"name\" placeholder={assignment.name}></input> : assignment.name}</td>\r\n                    <td>{this.editAssignment(assignment.id) ? <input className=\"form-control\" type=\"text\" onChange={this.onChange} name=\"totalPoints\" placeholder={assignment.totalPoints}></input> : assignment.totalPoints}</td>\r\n                    <td>{this.editAssignment(assignment.id) ? <input className=\"form-control\" type=\"date\" onChange={this.onChange} name=\"dueDate\" placeholder={assignment.dueDate}></input> : assignment.dueDate}</td>\r\n                    <td>{this.editAssignment(assignment.id) ?\r\n                        <select onChange={this.onChange} className=\"custom-select\" name=\"assignmentType\" onChange={this.onChange} name=\"assignmentType\" placeholder={assignment.assignmentType} id=\"assignmentType\">\r\n                            {assignmentTypes}\r\n                        </select> :\r\n                        assignment.assignmentType}</td>\r\n\r\n                </tr>\r\n            )\r\n        })\r\n        console.log(this.state.edit)\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"row bg-light my-1\">\r\n                    <button className=\"btn btn-danger mx-2\">Delete Selected</button>\r\n                    <button className=\"btn btn-secondary mx-2\" onClick={this.handleUpdate}>Edit Selected</button>\r\n                    <Bounce><button className=\"btn btn-primary ml-auto mr-2\"\r\n                        style={{ display: 'none' }} id=\"update-button\" onClick={this.updateAssignment}>Update</button></Bounce>\r\n                </div>\r\n                <table class=\"table table-hover table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Points</th>\r\n                            <th scope=\"col\">Due Date</th>\r\n                            <th scope=\"col\">Type</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {assignmentList}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    editCourse: state.temp.editCourse,\r\n    editAssignment: state.temp.editAssignment,\r\n    courses: state.courses.courses\r\n})\r\n\r\nexport default connect(mapStateToProps, { holdTempAssignment, holdTempCourse })(CreateAssignmentTable);"]},"metadata":{},"sourceType":"module"}