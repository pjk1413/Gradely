{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport { getValidSelection } from './../utils';\nimport { transformSelectionToColumnDistance } from './../../../selection/utils';\nimport * as C from './../../../i18n/constants';\nexport var KEY = 'remove_col';\nexport default function removeColumnItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      var selection = this.getSelected();\n      var pluralForm = 0;\n\n      if (selection) {\n        if (selection.length > 1) {\n          pluralForm = 1;\n        } else {\n          var _selection$ = _slicedToArray(selection[0], 4),\n              fromColumn = _selection$[1],\n              toColumn = _selection$[3];\n\n          if (fromColumn - toColumn !== 0) {\n            pluralForm = 1;\n          }\n        }\n      }\n\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COLUMN, pluralForm);\n    },\n    callback: function callback() {\n      this.alter('remove_col', transformSelectionToColumnDistance(this.getSelected()), null, 'ContextMenu.removeColumn');\n    },\n    disabled: function disabled() {\n      var selected = getValidSelection(this);\n      var totalColumns = this.countCols();\n\n      if (!selected) {\n        return true;\n      }\n\n      return this.selection.isSelectedByRowHeader() || this.selection.isSelectedByCorner() || !this.isColumnModificationAllowed() || !totalColumns;\n    },\n    hidden: function hidden() {\n      return !this.getSettings().allowRemoveColumn;\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/plugins/contextMenu/predefinedItems/removeColumn.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","getValidSelection","transformSelectionToColumnDistance","C","KEY","removeColumnItem","key","name","selection","getSelected","pluralForm","_selection$","fromColumn","toColumn","getTranslatedPhrase","CONTEXTMENU_ITEMS_REMOVE_COLUMN","callback","alter","disabled","selected","totalColumns","countCols","isSelectedByRowHeader","isSelectedByCorner","isColumnModificationAllowed","hidden","getSettings","allowRemoveColumn"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { getValidSelection } from './../utils';\nimport { transformSelectionToColumnDistance } from './../../../selection/utils';\nimport * as C from './../../../i18n/constants';\nexport var KEY = 'remove_col';\nexport default function removeColumnItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      var selection = this.getSelected();\n      var pluralForm = 0;\n\n      if (selection) {\n        if (selection.length > 1) {\n          pluralForm = 1;\n        } else {\n          var _selection$ = _slicedToArray(selection[0], 4),\n              fromColumn = _selection$[1],\n              toColumn = _selection$[3];\n\n          if (fromColumn - toColumn !== 0) {\n            pluralForm = 1;\n          }\n        }\n      }\n\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COLUMN, pluralForm);\n    },\n    callback: function callback() {\n      this.alter('remove_col', transformSelectionToColumnDistance(this.getSelected()), null, 'ContextMenu.removeColumn');\n    },\n    disabled: function disabled() {\n      var selected = getValidSelection(this);\n      var totalColumns = this.countCols();\n\n      if (!selected) {\n        return true;\n      }\n\n      return this.selection.isSelectedByRowHeader() || this.selection.isSelectedByCorner() || !this.isColumnModificationAllowed() || !totalColumns;\n    },\n    hidden: function hidden() {\n      return !this.getSettings().allowRemoveColumn;\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}