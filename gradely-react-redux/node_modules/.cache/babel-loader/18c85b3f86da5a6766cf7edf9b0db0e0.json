{"ast":null,"code":"import { axios } from 'axios';\nimport { HOLD_EDIT_USER, UPDATE_STUDENT, UPDATE_USER, HOLD_EDIT_COURSE, HOLD_ADD_STUDENT, HOLD_REMOVE_STUDENT } from '../action/types';\nimport { HOLD_EDIT_USER_TYPE } from './../action/types'; //Reducer is a switch statement with actions and defines those actions\n\nconst initialState = {\n  studentList: []\n}; //Is it better to return the list from the API call and set state to that, or update state on my own\n\nconst tempReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_USER:\n      let newTemp = { ...state.editUser\n      };\n      newTemp.user = action.payload;\n      return { ...state,\n        editUser: newTemp\n      };\n\n    case UPDATE_STUDENT:\n      return { ...state,\n        editUser: action.payload\n      };\n\n    case HOLD_EDIT_USER:\n      return { ...state,\n        editUser: action.payload\n      };\n\n    case HOLD_EDIT_USER_TYPE:\n      return { ...state,\n        editUserType: action.payload\n      };\n\n    case HOLD_EDIT_COURSE:\n      return { ...state,\n        editCourse: action.payload\n      };\n\n    case HOLD_REMOVE_STUDENT:\n      let courseRemoveStudent = { ...state.editCourse\n      };\n      const course = courseRemoveStudent.filter();\n      return { ...state,\n        course: course\n      };\n\n    case HOLD_ADD_STUDENT:\n      let courseAddStudent = { ...state.editCourse\n      };\n      courseAddStudent.studentList.push(action.payload);\n      return { ...state,\n        editCourse: courseAddStudent\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default tempReducer;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/reducer/tempReducer.js"],"names":["axios","HOLD_EDIT_USER","UPDATE_STUDENT","UPDATE_USER","HOLD_EDIT_COURSE","HOLD_ADD_STUDENT","HOLD_REMOVE_STUDENT","HOLD_EDIT_USER_TYPE","initialState","studentList","tempReducer","state","action","type","newTemp","editUser","user","payload","editUserType","editCourse","courseRemoveStudent","course","filter","courseAddStudent","push"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,WAAzC,EAAsDC,gBAAtD,EAAwEC,gBAAxE,EAA0FC,mBAA1F,QAAqH,iBAArH;AACA,SAASC,mBAAT,QAAoC,mBAApC,C,CACA;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAArB,C,CAIA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,WAAL;AAEI,UAAIW,OAAO,GAAG,EACV,GAAGH,KAAK,CAACI;AADC,OAAd;AAGAD,MAAAA,OAAO,CAACE,IAAR,GAAeJ,MAAM,CAACK,OAAtB;AACA,aAAO,EACH,GAAGN,KADA;AAEHI,QAAAA,QAAQ,EAAED;AAFP,OAAP;;AAIJ,SAAKZ,cAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHI,QAAAA,QAAQ,EAAEH,MAAM,CAACK;AAFd,OAAP;;AAIJ,SAAKhB,cAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHI,QAAAA,QAAQ,EAAEH,MAAM,CAACK;AAFd,OAAP;;AAIJ,SAAKV,mBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHO,QAAAA,YAAY,EAAEN,MAAM,CAACK;AAFlB,OAAP;;AAIJ,SAAKb,gBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHQ,QAAAA,UAAU,EAAEP,MAAM,CAACK;AAFhB,OAAP;;AAIJ,SAAKX,mBAAL;AACI,UAAIc,mBAAmB,GAAG,EACtB,GAAGT,KAAK,CAACQ;AADa,OAA1B;AAIA,YAAME,MAAM,GAAGD,mBAAmB,CAACE,MAApB,EAAf;AAEA,aAAO,EACH,GAAGX,KADA;AAEHU,QAAAA,MAAM,EAAEA;AAFL,OAAP;;AAIJ,SAAKhB,gBAAL;AACI,UAAIkB,gBAAgB,GAAG,EACnB,GAAGZ,KAAK,CAACQ;AADU,OAAvB;AAGAI,MAAAA,gBAAgB,CAACd,WAAjB,CAA6Be,IAA7B,CAAkCZ,MAAM,CAACK,OAAzC;AACA,aAAO,EACH,GAAGN,KADA;AAEHQ,QAAAA,UAAU,EAAEI;AAFT,OAAP;;AAIJ;AACI,aAAOZ,KAAP;AApDR;AAsDH,CAvDD;;AAyDA,eAAeD,WAAf","sourcesContent":["import { axios } from 'axios';\r\nimport { HOLD_EDIT_USER, UPDATE_STUDENT, UPDATE_USER, HOLD_EDIT_COURSE, HOLD_ADD_STUDENT, HOLD_REMOVE_STUDENT } from '../action/types';\r\nimport { HOLD_EDIT_USER_TYPE } from './../action/types';\r\n//Reducer is a switch statement with actions and defines those actions\r\n\r\nconst initialState = {\r\n    studentList: []\r\n}\r\n\r\n//Is it better to return the list from the API call and set state to that, or update state on my own\r\nconst tempReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_USER: \r\n            \r\n            let newTemp = {\r\n                ...state.editUser\r\n            }\r\n            newTemp.user = action.payload\r\n            return {\r\n                ...state,\r\n                editUser: newTemp\r\n            }\r\n        case UPDATE_STUDENT:\r\n            return {\r\n                ...state,\r\n                editUser: action.payload\r\n            }\r\n        case HOLD_EDIT_USER:\r\n            return {\r\n                ...state,\r\n                editUser: action.payload\r\n            };\r\n        case HOLD_EDIT_USER_TYPE:\r\n            return {\r\n                ...state,\r\n                editUserType: action.payload\r\n            }\r\n        case HOLD_EDIT_COURSE:\r\n            return {\r\n                ...state,\r\n                editCourse: action.payload\r\n              }\r\n        case HOLD_REMOVE_STUDENT:\r\n            let courseRemoveStudent = {\r\n                ...state.editCourse\r\n            }\r\n            \r\n            const course = courseRemoveStudent.filter()\r\n\r\n            return {\r\n                ...state,\r\n                course: course\r\n            }\r\n        case HOLD_ADD_STUDENT:\r\n            let courseAddStudent = {\r\n                ...state.editCourse\r\n            }\r\n            courseAddStudent.studentList.push(action.payload)\r\n            return {\r\n                ...state,\r\n                editCourse: courseAddStudent\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport default tempReducer;\r\n"]},"metadata":{},"sourceType":"module"}