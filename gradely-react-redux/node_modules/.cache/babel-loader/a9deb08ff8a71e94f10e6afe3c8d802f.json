{"ast":null,"code":"import { getWindowScrollTop, getWindowScrollLeft, getParentWindow } from './element';\n/**\n * Prevent other listeners of the same event from being called.\n *\n * @param {Event} event\n */\n\nexport function stopImmediatePropagation(event) {\n  event.isImmediatePropagationEnabled = false;\n  event.cancelBubble = true;\n}\n/**\n * Check if event was stopped by `stopImmediatePropagation`.\n *\n * @param event {Event}\n * @returns {Boolean}\n */\n\nexport function isImmediatePropagationStopped(event) {\n  return event.isImmediatePropagationEnabled === false;\n}\n/**\n * Prevent further propagation of the current event (prevent bubbling).\n *\n * @param event {Event}\n */\n\nexport function stopPropagation(event) {\n  // ie8\n  // http://msdn.microsoft.com/en-us/library/ie/ff975462(v=vs.85).aspx\n  if (typeof event.stopPropagation === 'function') {\n    event.stopPropagation();\n  } else {\n    event.cancelBubble = true;\n  }\n}\n/**\n * Get horizontal coordinate of the event object relative to the whole document.\n *\n * @param {Event} event\n * @returns {Number}\n */\n\nexport function pageX(event) {\n  if (event.pageX) {\n    return event.pageX;\n  }\n\n  var rootWindow = event.target.ownerDocument.defaultView;\n  return event.clientX + getWindowScrollLeft(rootWindow);\n}\n/**\n * Get vertical coordinate of the event object relative to the whole document.\n *\n * @param {Event} event\n * @returns {Number}\n */\n\nexport function pageY(event) {\n  if (event.pageY) {\n    return event.pageY;\n  }\n\n  var frame = event.target.ownerDocument.defaultView;\n  var offset = getWindowScrollTop(frame);\n  frame = getParentWindow(frame);\n\n  while (frame) {\n    offset -= getWindowScrollTop(frame);\n    frame = getParentWindow(frame);\n  }\n\n  return event.clientY + offset;\n}\n/**\n * Check if provided event was triggered by clicking the right mouse button.\n *\n * @param {Event} event DOM Event.\n * @returns {Boolean}\n */\n\nexport function isRightClick(event) {\n  return event.button === 2;\n}\n/**\n * Check if provided event was triggered by clicking the left mouse button.\n *\n * @param {Event} event DOM Event.\n * @returns {Boolean}\n */\n\nexport function isLeftClick(event) {\n  return event.button === 0;\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/node_modules/handsontable/es/helpers/dom/event.js"],"names":["getWindowScrollTop","getWindowScrollLeft","getParentWindow","stopImmediatePropagation","event","isImmediatePropagationEnabled","cancelBubble","isImmediatePropagationStopped","stopPropagation","pageX","rootWindow","target","ownerDocument","defaultView","clientX","pageY","frame","offset","clientY","isRightClick","button","isLeftClick"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,mBAA7B,EAAkDC,eAAlD,QAAyE,WAAzE;AACA;;;;;;AAMA,OAAO,SAASC,wBAAT,CAAkCC,KAAlC,EAAyC;AAC9CA,EAAAA,KAAK,CAACC,6BAAN,GAAsC,KAAtC;AACAD,EAAAA,KAAK,CAACE,YAAN,GAAqB,IAArB;AACD;AACD;;;;;;;AAOA,OAAO,SAASC,6BAAT,CAAuCH,KAAvC,EAA8C;AACnD,SAAOA,KAAK,CAACC,6BAAN,KAAwC,KAA/C;AACD;AACD;;;;;;AAMA,OAAO,SAASG,eAAT,CAAyBJ,KAAzB,EAAgC;AACrC;AACA;AACA,MAAI,OAAOA,KAAK,CAACI,eAAb,KAAiC,UAArC,EAAiD;AAC/CJ,IAAAA,KAAK,CAACI,eAAN;AACD,GAFD,MAEO;AACLJ,IAAAA,KAAK,CAACE,YAAN,GAAqB,IAArB;AACD;AACF;AACD;;;;;;;AAOA,OAAO,SAASG,KAAT,CAAeL,KAAf,EAAsB;AAC3B,MAAIA,KAAK,CAACK,KAAV,EAAiB;AACf,WAAOL,KAAK,CAACK,KAAb;AACD;;AAED,MAAIC,UAAU,GAAGN,KAAK,CAACO,MAAN,CAAaC,aAAb,CAA2BC,WAA5C;AACA,SAAOT,KAAK,CAACU,OAAN,GAAgBb,mBAAmB,CAACS,UAAD,CAA1C;AACD;AACD;;;;;;;AAOA,OAAO,SAASK,KAAT,CAAeX,KAAf,EAAsB;AAC3B,MAAIA,KAAK,CAACW,KAAV,EAAiB;AACf,WAAOX,KAAK,CAACW,KAAb;AACD;;AAED,MAAIC,KAAK,GAAGZ,KAAK,CAACO,MAAN,CAAaC,aAAb,CAA2BC,WAAvC;AACA,MAAII,MAAM,GAAGjB,kBAAkB,CAACgB,KAAD,CAA/B;AACAA,EAAAA,KAAK,GAAGd,eAAe,CAACc,KAAD,CAAvB;;AAEA,SAAOA,KAAP,EAAc;AACZC,IAAAA,MAAM,IAAIjB,kBAAkB,CAACgB,KAAD,CAA5B;AACAA,IAAAA,KAAK,GAAGd,eAAe,CAACc,KAAD,CAAvB;AACD;;AAED,SAAOZ,KAAK,CAACc,OAAN,GAAgBD,MAAvB;AACD;AACD;;;;;;;AAOA,OAAO,SAASE,YAAT,CAAsBf,KAAtB,EAA6B;AAClC,SAAOA,KAAK,CAACgB,MAAN,KAAiB,CAAxB;AACD;AACD;;;;;;;AAOA,OAAO,SAASC,WAAT,CAAqBjB,KAArB,EAA4B;AACjC,SAAOA,KAAK,CAACgB,MAAN,KAAiB,CAAxB;AACD","sourcesContent":["import { getWindowScrollTop, getWindowScrollLeft, getParentWindow } from './element';\n/**\n * Prevent other listeners of the same event from being called.\n *\n * @param {Event} event\n */\n\nexport function stopImmediatePropagation(event) {\n  event.isImmediatePropagationEnabled = false;\n  event.cancelBubble = true;\n}\n/**\n * Check if event was stopped by `stopImmediatePropagation`.\n *\n * @param event {Event}\n * @returns {Boolean}\n */\n\nexport function isImmediatePropagationStopped(event) {\n  return event.isImmediatePropagationEnabled === false;\n}\n/**\n * Prevent further propagation of the current event (prevent bubbling).\n *\n * @param event {Event}\n */\n\nexport function stopPropagation(event) {\n  // ie8\n  // http://msdn.microsoft.com/en-us/library/ie/ff975462(v=vs.85).aspx\n  if (typeof event.stopPropagation === 'function') {\n    event.stopPropagation();\n  } else {\n    event.cancelBubble = true;\n  }\n}\n/**\n * Get horizontal coordinate of the event object relative to the whole document.\n *\n * @param {Event} event\n * @returns {Number}\n */\n\nexport function pageX(event) {\n  if (event.pageX) {\n    return event.pageX;\n  }\n\n  var rootWindow = event.target.ownerDocument.defaultView;\n  return event.clientX + getWindowScrollLeft(rootWindow);\n}\n/**\n * Get vertical coordinate of the event object relative to the whole document.\n *\n * @param {Event} event\n * @returns {Number}\n */\n\nexport function pageY(event) {\n  if (event.pageY) {\n    return event.pageY;\n  }\n\n  var frame = event.target.ownerDocument.defaultView;\n  var offset = getWindowScrollTop(frame);\n  frame = getParentWindow(frame);\n\n  while (frame) {\n    offset -= getWindowScrollTop(frame);\n    frame = getParentWindow(frame);\n  }\n\n  return event.clientY + offset;\n}\n/**\n * Check if provided event was triggered by clicking the right mouse button.\n *\n * @param {Event} event DOM Event.\n * @returns {Boolean}\n */\n\nexport function isRightClick(event) {\n  return event.button === 2;\n}\n/**\n * Check if provided event was triggered by clicking the left mouse button.\n *\n * @param {Event} event DOM Event.\n * @returns {Boolean}\n */\n\nexport function isLeftClick(event) {\n  return event.button === 0;\n}"]},"metadata":{},"sourceType":"module"}