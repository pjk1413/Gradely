{"ast":null,"code":"import { isUndefined } from '../../helpers/mixed';\nimport { isObject } from '../../helpers/object';\nimport { isRightClick } from '../../helpers/dom/event';\nexport var ASC_SORT_STATE = 'asc';\nexport var DESC_SORT_STATE = 'desc';\nexport var HEADER_SPAN_CLASS = 'colHeader';\n/**\n * Get if column state is valid.\n *\n * @param {Number} columnState Particular column state.\n * @returns {Boolean}\n */\n\nfunction isValidColumnState(columnState) {\n  if (isUndefined(columnState)) {\n    return false;\n  }\n\n  var column = columnState.column,\n      sortOrder = columnState.sortOrder;\n  return Number.isInteger(column) && [ASC_SORT_STATE, DESC_SORT_STATE].includes(sortOrder);\n}\n/**\n * Get if all sorted columns states are valid.\n *\n * @param {Array} sortStates\n * @returns {Boolean}\n */\n\n\nexport function areValidSortStates(sortStates) {\n  if (Array.isArray(sortStates) === false || sortStates.every(function (columnState) {\n    return isObject(columnState);\n  }) === false) {\n    return false;\n  }\n\n  var sortedColumns = sortStates.map(function (_ref) {\n    var column = _ref.column;\n    return column;\n  });\n  var indexOccursOnlyOnce = new Set(sortedColumns).size === sortedColumns.length;\n  return indexOccursOnlyOnce && sortStates.every(isValidColumnState);\n}\n/**\n * Get next sort order for particular column. The order sequence looks as follows: 'asc' -> 'desc' -> undefined -> 'asc'\n *\n * @param {String|undefined} sortOrder sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n * @returns {String|undefined} Next sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n */\n\nexport function getNextSortOrder(sortOrder) {\n  if (sortOrder === DESC_SORT_STATE) {\n    return;\n  } else if (sortOrder === ASC_SORT_STATE) {\n    return DESC_SORT_STATE;\n  }\n\n  return ASC_SORT_STATE;\n}\n/**\n * Get `span` DOM element inside `th` DOM element.\n *\n * @param {Element} TH th HTML element.\n * @returns {Element | null}\n */\n\nexport function getHeaderSpanElement(TH) {\n  var headerSpanElement = TH.querySelector(\".\".concat(HEADER_SPAN_CLASS));\n  return headerSpanElement;\n}\n/**\n *\n * Get if handled header is first level column header.\n *\n * @param {Number} column Visual column index.\n * @param {Element} TH th HTML element.\n * @returns {Boolean}\n */\n\nexport function isFirstLevelColumnHeader(column, TH) {\n  if (column < 0 || !TH.parentNode) {\n    return false;\n  }\n\n  var TRs = TH.parentNode.parentNode.childNodes;\n  var headerLevel = Array.from(TRs).indexOf(TH.parentNode) - TRs.length;\n\n  if (headerLevel !== -1) {\n    return false;\n  }\n\n  return true;\n}\n/**\n *  Get if header was clicked properly. Click on column header and NOT done by right click return `true`.\n *\n * @param {Number} row Visual row index.\n * @param {Number} column Visual column index.\n * @param {Event} clickEvent Click event.\n * @returns {Boolean}\n */\n\nexport function wasHeaderClickedProperly(row, column, clickEvent) {\n  return row === -1 && column >= 0 && isRightClick(clickEvent) === false;\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/node_modules/handsontable/es/plugins/columnSorting/utils.js"],"names":["isUndefined","isObject","isRightClick","ASC_SORT_STATE","DESC_SORT_STATE","HEADER_SPAN_CLASS","isValidColumnState","columnState","column","sortOrder","Number","isInteger","includes","areValidSortStates","sortStates","Array","isArray","every","sortedColumns","map","_ref","indexOccursOnlyOnce","Set","size","length","getNextSortOrder","getHeaderSpanElement","TH","headerSpanElement","querySelector","concat","isFirstLevelColumnHeader","parentNode","TRs","childNodes","headerLevel","from","indexOf","wasHeaderClickedProperly","row","clickEvent"],"mappings":"AAYA,SAASA,WAAT,QAA4B,qBAA5B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAO,IAAIC,cAAc,GAAG,KAArB;AACP,OAAO,IAAIC,eAAe,GAAG,MAAtB;AACP,OAAO,IAAIC,iBAAiB,GAAG,WAAxB;AACP;;;;;;;AAOA,SAASC,kBAAT,CAA4BC,WAA5B,EAAyC;AACvC,MAAIP,WAAW,CAACO,WAAD,CAAf,EAA8B;AAC5B,WAAO,KAAP;AACD;;AAED,MAAIC,MAAM,GAAGD,WAAW,CAACC,MAAzB;AAAA,MACIC,SAAS,GAAGF,WAAW,CAACE,SAD5B;AAEA,SAAOC,MAAM,CAACC,SAAP,CAAiBH,MAAjB,KAA4B,CAACL,cAAD,EAAiBC,eAAjB,EAAkCQ,QAAlC,CAA2CH,SAA3C,CAAnC;AACD;AACD;;;;;;;;AAQA,OAAO,SAASI,kBAAT,CAA4BC,UAA5B,EAAwC;AAC7C,MAAIC,KAAK,CAACC,OAAN,CAAcF,UAAd,MAA8B,KAA9B,IAAuCA,UAAU,CAACG,KAAX,CAAiB,UAAUV,WAAV,EAAuB;AACjF,WAAON,QAAQ,CAACM,WAAD,CAAf;AACD,GAF0C,MAEpC,KAFP,EAEc;AACZ,WAAO,KAAP;AACD;;AAED,MAAIW,aAAa,GAAGJ,UAAU,CAACK,GAAX,CAAe,UAAUC,IAAV,EAAgB;AACjD,QAAIZ,MAAM,GAAGY,IAAI,CAACZ,MAAlB;AACA,WAAOA,MAAP;AACD,GAHmB,CAApB;AAIA,MAAIa,mBAAmB,GAAG,IAAIC,GAAJ,CAAQJ,aAAR,EAAuBK,IAAvB,KAAgCL,aAAa,CAACM,MAAxE;AACA,SAAOH,mBAAmB,IAAIP,UAAU,CAACG,KAAX,CAAiBX,kBAAjB,CAA9B;AACD;AACD;;;;;;;AAOA,OAAO,SAASmB,gBAAT,CAA0BhB,SAA1B,EAAqC;AAC1C,MAAIA,SAAS,KAAKL,eAAlB,EAAmC;AACjC;AACD,GAFD,MAEO,IAAIK,SAAS,KAAKN,cAAlB,EAAkC;AACvC,WAAOC,eAAP;AACD;;AAED,SAAOD,cAAP;AACD;AACD;;;;;;;AAOA,OAAO,SAASuB,oBAAT,CAA8BC,EAA9B,EAAkC;AACvC,MAAIC,iBAAiB,GAAGD,EAAE,CAACE,aAAH,CAAiB,IAAIC,MAAJ,CAAWzB,iBAAX,CAAjB,CAAxB;AACA,SAAOuB,iBAAP;AACD;AACD;;;;;;;;;AASA,OAAO,SAASG,wBAAT,CAAkCvB,MAAlC,EAA0CmB,EAA1C,EAA8C;AACnD,MAAInB,MAAM,GAAG,CAAT,IAAc,CAACmB,EAAE,CAACK,UAAtB,EAAkC;AAChC,WAAO,KAAP;AACD;;AAED,MAAIC,GAAG,GAAGN,EAAE,CAACK,UAAH,CAAcA,UAAd,CAAyBE,UAAnC;AACA,MAAIC,WAAW,GAAGpB,KAAK,CAACqB,IAAN,CAAWH,GAAX,EAAgBI,OAAhB,CAAwBV,EAAE,CAACK,UAA3B,IAAyCC,GAAG,CAACT,MAA/D;;AAEA,MAAIW,WAAW,KAAK,CAAC,CAArB,EAAwB;AACtB,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD;AACD;;;;;;;;;AASA,OAAO,SAASG,wBAAT,CAAkCC,GAAlC,EAAuC/B,MAAvC,EAA+CgC,UAA/C,EAA2D;AAChE,SAAOD,GAAG,KAAK,CAAC,CAAT,IAAc/B,MAAM,IAAI,CAAxB,IAA6BN,YAAY,CAACsC,UAAD,CAAZ,KAA6B,KAAjE;AACD","sourcesContent":["import \"core-js/modules/es.array.every\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.number.constructor\";\nimport \"core-js/modules/es.number.is-integer\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.set\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport { isUndefined } from '../../helpers/mixed';\nimport { isObject } from '../../helpers/object';\nimport { isRightClick } from '../../helpers/dom/event';\nexport var ASC_SORT_STATE = 'asc';\nexport var DESC_SORT_STATE = 'desc';\nexport var HEADER_SPAN_CLASS = 'colHeader';\n/**\n * Get if column state is valid.\n *\n * @param {Number} columnState Particular column state.\n * @returns {Boolean}\n */\n\nfunction isValidColumnState(columnState) {\n  if (isUndefined(columnState)) {\n    return false;\n  }\n\n  var column = columnState.column,\n      sortOrder = columnState.sortOrder;\n  return Number.isInteger(column) && [ASC_SORT_STATE, DESC_SORT_STATE].includes(sortOrder);\n}\n/**\n * Get if all sorted columns states are valid.\n *\n * @param {Array} sortStates\n * @returns {Boolean}\n */\n\n\nexport function areValidSortStates(sortStates) {\n  if (Array.isArray(sortStates) === false || sortStates.every(function (columnState) {\n    return isObject(columnState);\n  }) === false) {\n    return false;\n  }\n\n  var sortedColumns = sortStates.map(function (_ref) {\n    var column = _ref.column;\n    return column;\n  });\n  var indexOccursOnlyOnce = new Set(sortedColumns).size === sortedColumns.length;\n  return indexOccursOnlyOnce && sortStates.every(isValidColumnState);\n}\n/**\n * Get next sort order for particular column. The order sequence looks as follows: 'asc' -> 'desc' -> undefined -> 'asc'\n *\n * @param {String|undefined} sortOrder sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n * @returns {String|undefined} Next sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n */\n\nexport function getNextSortOrder(sortOrder) {\n  if (sortOrder === DESC_SORT_STATE) {\n    return;\n  } else if (sortOrder === ASC_SORT_STATE) {\n    return DESC_SORT_STATE;\n  }\n\n  return ASC_SORT_STATE;\n}\n/**\n * Get `span` DOM element inside `th` DOM element.\n *\n * @param {Element} TH th HTML element.\n * @returns {Element | null}\n */\n\nexport function getHeaderSpanElement(TH) {\n  var headerSpanElement = TH.querySelector(\".\".concat(HEADER_SPAN_CLASS));\n  return headerSpanElement;\n}\n/**\n *\n * Get if handled header is first level column header.\n *\n * @param {Number} column Visual column index.\n * @param {Element} TH th HTML element.\n * @returns {Boolean}\n */\n\nexport function isFirstLevelColumnHeader(column, TH) {\n  if (column < 0 || !TH.parentNode) {\n    return false;\n  }\n\n  var TRs = TH.parentNode.parentNode.childNodes;\n  var headerLevel = Array.from(TRs).indexOf(TH.parentNode) - TRs.length;\n\n  if (headerLevel !== -1) {\n    return false;\n  }\n\n  return true;\n}\n/**\n *  Get if header was clicked properly. Click on column header and NOT done by right click return `true`.\n *\n * @param {Number} row Visual row index.\n * @param {Number} column Visual column index.\n * @param {Event} clickEvent Click event.\n * @returns {Boolean}\n */\n\nexport function wasHeaderClickedProperly(row, column, clickEvent) {\n  return row === -1 && column >= 0 && isRightClick(clickEvent) === false;\n}"]},"metadata":{},"sourceType":"module"}