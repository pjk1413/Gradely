{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"unistore/react\";\nimport * as PointSet from \"./point-set\";\nimport * as PointMap from \"./point-map\";\nimport FloatingRect, { mapStateToProps } from \"./FloatingRect\";\n\nvar Copied = function Copied(props) {\n  return React.createElement(FloatingRect, Object.assign({}, props, {\n    className: \"copied\"\n  }));\n};\n\nexport default connect(function (state) {\n  return mapStateToProps(state.hasPasted ? PointSet.from([]) : PointMap.map(function () {\n    return true;\n  }, state.copied))(state);\n})(Copied);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/react-spreadsheet/dist/Copied.js"],"names":["React","connect","PointSet","PointMap","FloatingRect","mapStateToProps","Copied","props","createElement","Object","assign","className","state","hasPasted","from","map","copied"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,OAAOC,YAAP,IAAuBC,eAAvB,QAA8C,gBAA9C;;AAEA,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,SAAOP,KAAK,CAACQ,aAAN,CAAoBJ,YAApB,EAAkCK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAChEI,IAAAA,SAAS,EAAE;AADqD,GAAzB,CAAlC,CAAP;AAGD,CAJD;;AAMA,eAAeV,OAAO,CAAC,UAAUW,KAAV,EAAiB;AACtC,SAAOP,eAAe,CAACO,KAAK,CAACC,SAAN,GAAkBX,QAAQ,CAACY,IAAT,CAAc,EAAd,CAAlB,GAAsCX,QAAQ,CAACY,GAAT,CAAa,YAAY;AACpF,WAAO,IAAP;AACD,GAF4D,EAE1DH,KAAK,CAACI,MAFoD,CAAvC,CAAf,CAEWJ,KAFX,CAAP;AAGD,CAJqB,CAAP,CAIZN,MAJY,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"unistore/react\";\nimport * as PointSet from \"./point-set\";\nimport * as PointMap from \"./point-map\";\nimport FloatingRect, { mapStateToProps } from \"./FloatingRect\";\n\nvar Copied = function Copied(props) {\n  return React.createElement(FloatingRect, Object.assign({}, props, {\n    className: \"copied\"\n  }));\n};\n\nexport default connect(function (state) {\n  return mapStateToProps(state.hasPasted ? PointSet.from([]) : PointMap.map(function () {\n    return true;\n  }, state.copied))(state);\n})(Copied);"]},"metadata":{},"sourceType":"module"}