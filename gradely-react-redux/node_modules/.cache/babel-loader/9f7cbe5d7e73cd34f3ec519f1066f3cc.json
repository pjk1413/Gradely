{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as Types from \"./types\";\nexport var moveCursorToEnd = function moveCursorToEnd(el) {\n  el.selectionStart = el.selectionEnd = el.value.length;\n};\n/**\n * Creates an array of numbers (positive and/or negative) progressing from start up to, but not including, end. A step of -1 is used if a negative start is specified without an end or step. If end is not specified, it's set to start with start then set to 0.\n * @param end\n * @param start\n * @param step\n */\n\nexport function range(end) {\n  var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var array = [];\n\n  if (Math.sign(end - start) === -1) {\n    for (var element = start; element > end; element -= step) {\n      array.push(element);\n    }\n\n    return array;\n  }\n\n  for (var _element = start; _element < end; _element += step) {\n    array.push(_element);\n  }\n\n  return array;\n}\nexport function updateData(data, cellDescriptor) {\n  var row = data[cellDescriptor.row];\n\n  var nextData = _toConsumableArray(data);\n\n  var nextRow = row ? _toConsumableArray(row) : [];\n  nextRow[cellDescriptor.column] = cellDescriptor.data;\n  nextData[cellDescriptor.row] = nextRow;\n  return nextData;\n}\nexport function setCell(state, active, cell) {\n  return updateData(state.data, _objectSpread({}, active, {\n    data: cell\n  }));\n}\nexport function isActive(active, _ref) {\n  var row = _ref.row,\n      column = _ref.column;\n  return Boolean(active && column === active.column && row === active.row);\n}\nexport var getOffsetRect = function getOffsetRect(element) {\n  return {\n    width: element.offsetWidth,\n    height: element.offsetHeight,\n    left: element.offsetLeft,\n    top: element.offsetTop\n  };\n};\nexport var writeTextToClipboard = function writeTextToClipboard(event, data) {\n  if (event.clipboardData) {\n    event.clipboardData.setData(\"text/plain\", data);\n  }\n};\nexport var readTextFromClipboard = function readTextFromClipboard(event) {\n  if (window.clipboardData && window.clipboardData.getData) {\n    return window.clipboardData.getData(\"Text\");\n  }\n\n  if (event.clipboardData && event.clipboardData.getData) {\n    return event.clipboardData.getData(\"text/plain\");\n  }\n\n  return \"\";\n};\nexport function createEmptyMatrix(rows, columns) {\n  return range(rows).map(function () {\n    return Array(columns);\n  });\n}\nexport var getCellDimensions = function getCellDimensions(point, state) {\n  var rowDimensions = state.rowDimensions[point.row];\n  var columnDimensions = state.columnDimensions[point.column];\n  return rowDimensions && columnDimensions && _objectSpread({}, rowDimensions, columnDimensions);\n};","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/react-spreadsheet/dist/util.js"],"names":["_objectSpread","_toConsumableArray","Types","moveCursorToEnd","el","selectionStart","selectionEnd","value","length","range","end","start","arguments","undefined","step","array","Math","sign","element","push","_element","updateData","data","cellDescriptor","row","nextData","nextRow","column","setCell","state","active","cell","isActive","_ref","Boolean","getOffsetRect","width","offsetWidth","height","offsetHeight","left","offsetLeft","top","offsetTop","writeTextToClipboard","event","clipboardData","setData","readTextFromClipboard","window","getData","createEmptyMatrix","rows","columns","map","Array","getCellDimensions","point","rowDimensions","columnDimensions"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as Types from \"./types\";\nexport var moveCursorToEnd = function moveCursorToEnd(el) {\n  el.selectionStart = el.selectionEnd = el.value.length;\n};\n/**\n * Creates an array of numbers (positive and/or negative) progressing from start up to, but not including, end. A step of -1 is used if a negative start is specified without an end or step. If end is not specified, it's set to start with start then set to 0.\n * @param end\n * @param start\n * @param step\n */\n\nexport function range(end) {\n  var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var array = [];\n\n  if (Math.sign(end - start) === -1) {\n    for (var element = start; element > end; element -= step) {\n      array.push(element);\n    }\n\n    return array;\n  }\n\n  for (var _element = start; _element < end; _element += step) {\n    array.push(_element);\n  }\n\n  return array;\n}\nexport function updateData(data, cellDescriptor) {\n  var row = data[cellDescriptor.row];\n\n  var nextData = _toConsumableArray(data);\n\n  var nextRow = row ? _toConsumableArray(row) : [];\n  nextRow[cellDescriptor.column] = cellDescriptor.data;\n  nextData[cellDescriptor.row] = nextRow;\n  return nextData;\n}\nexport function setCell(state, active, cell) {\n  return updateData(state.data, _objectSpread({}, active, {\n    data: cell\n  }));\n}\nexport function isActive(active, _ref) {\n  var row = _ref.row,\n      column = _ref.column;\n  return Boolean(active && column === active.column && row === active.row);\n}\nexport var getOffsetRect = function getOffsetRect(element) {\n  return {\n    width: element.offsetWidth,\n    height: element.offsetHeight,\n    left: element.offsetLeft,\n    top: element.offsetTop\n  };\n};\nexport var writeTextToClipboard = function writeTextToClipboard(event, data) {\n  if (event.clipboardData) {\n    event.clipboardData.setData(\"text/plain\", data);\n  }\n};\nexport var readTextFromClipboard = function readTextFromClipboard(event) {\n  if (window.clipboardData && window.clipboardData.getData) {\n    return window.clipboardData.getData(\"Text\");\n  }\n\n  if (event.clipboardData && event.clipboardData.getData) {\n    return event.clipboardData.getData(\"text/plain\");\n  }\n\n  return \"\";\n};\nexport function createEmptyMatrix(rows, columns) {\n  return range(rows).map(function () {\n    return Array(columns);\n  });\n}\nexport var getCellDimensions = function getCellDimensions(point, state) {\n  var rowDimensions = state.rowDimensions[point.row];\n  var columnDimensions = state.columnDimensions[point.column];\n  return rowDimensions && columnDimensions && _objectSpread({}, rowDimensions, columnDimensions);\n};"]},"metadata":{},"sourceType":"module"}