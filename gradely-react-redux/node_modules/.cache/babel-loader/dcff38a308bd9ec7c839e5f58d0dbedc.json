{"ast":null,"code":"import \"core-js/modules/es.string.replace\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport BasePlugin from '../_base';\nimport { objectEach } from '../../helpers/object';\nimport { registerPlugin } from '../../plugins';\nimport Endpoints from './endpoints';\n/**\n * @plugin ColumnSummary\n *\n * @description\n * Allows making pre-defined calculations on the cell values and display the results within Handsontable.\n * [See the demo for more information](https://docs.handsontable.com/pro/demo-summary-calculations.html).\n *s\n * @example\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   colHeaders: true,\n *   rowHeaders: true,\n *   columnSummary: [\n *     {\n *       destinationRow: 4,\n *       destinationColumn: 1,\n *       type: 'min'\n *     },\n *     {\n *       destinationRow: 0,\n *       destinationColumn: 3,\n *       reversedRowCoords: true,\n *       type: 'max'\n *     },\n *     {\n *       destinationRow: 4,\n *       destinationColumn: 5,\n *       type: 'sum',\n *       forceNumeric: true\n *     }\n *   ]\n * });\n */\n\nvar ColumnSummary = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(ColumnSummary, _BasePlugin);\n\n  function ColumnSummary(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, ColumnSummary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSummary).call(this, hotInstance));\n    /**\n     * The Endpoints class instance. Used to make all endpoint-related operations.\n     *\n     * @private\n     * @type {null|Endpoints}\n     */\n\n    _this.endpoints = null;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link ColumnSummary#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(ColumnSummary, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().columnSummary;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.settings = this.hot.getSettings().columnSummary;\n      this.endpoints = new Endpoints(this, this.settings);\n      this.addHook('afterInit', function () {\n        return _this2.onAfterInit.apply(_this2, arguments);\n      });\n      this.addHook('afterChange', function () {\n        return _this2.onAfterChange.apply(_this2, arguments);\n      });\n      this.addHook('beforeCreateRow', function (index, amount, source) {\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_row', index, amount, null, source);\n      });\n      this.addHook('beforeCreateCol', function (index, amount, source) {\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_col', index, amount, null, source);\n      });\n      this.addHook('beforeRemoveRow', function () {\n        var _this2$endpoints;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return (_this2$endpoints = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints, ['remove_row'].concat(args));\n      });\n      this.addHook('beforeRemoveCol', function () {\n        var _this2$endpoints2;\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return (_this2$endpoints2 = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints2, ['remove_col'].concat(args));\n      });\n      this.addHook('beforeRowMove', function () {\n        return _this2.onBeforeRowMove.apply(_this2, arguments);\n      });\n      this.addHook('afterCreateRow', function (index, amount, source) {\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_row', index, amount, null, source);\n      });\n      this.addHook('afterCreateCol', function (index, amount, source) {\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_col', index, amount, null, source);\n      });\n      this.addHook('afterRemoveRow', function () {\n        var _this2$endpoints3;\n\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        return (_this2$endpoints3 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints3, ['remove_row'].concat(args));\n      });\n      this.addHook('afterRemoveCol', function () {\n        var _this2$endpoints4;\n\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return (_this2$endpoints4 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints4, ['remove_col'].concat(args));\n      });\n      this.addHook('afterRowMove', function () {\n        return _this2.onAfterRowMove.apply(_this2, arguments);\n      });\n\n      _get(_getPrototypeOf(ColumnSummary.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.endpoints = null;\n      this.settings = null;\n      this.currentEndpoint = null;\n    }\n    /**\n     * Calculates math for a single endpoint.\n     *\n     * @private\n     * @param {Object} endpoint Contains information about the endpoint.\n     */\n\n  }, {\n    key: \"calculate\",\n    value: function calculate(endpoint) {\n      switch (endpoint.type.toLowerCase()) {\n        case 'sum':\n          endpoint.result = this.calculateSum(endpoint);\n          break;\n\n        case 'min':\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n          break;\n\n        case 'max':\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n          break;\n\n        case 'count':\n          endpoint.result = this.countEntries(endpoint);\n          break;\n\n        case 'average':\n          endpoint.result = this.calculateAverage(endpoint);\n          break;\n\n        case 'custom':\n          endpoint.result = endpoint.customFunction.call(this, endpoint);\n          break;\n\n        default:\n          break;\n      }\n    }\n    /**\n     * Calculates sum of the values contained in ranges provided in the plugin config.\n     *\n     * @private\n     * @param {Object} endpoint Contains the endpoint information.\n     * @returns {Number} Sum for the selected range\n     */\n\n  }, {\n    key: \"calculateSum\",\n    value: function calculateSum(endpoint) {\n      var _this3 = this;\n\n      var sum = 0;\n      objectEach(endpoint.ranges, function (range) {\n        sum += _this3.getPartialSum(range, endpoint.sourceColumn);\n      });\n      return sum;\n    }\n    /**\n     * Returns partial sum of values from a single row range\n     *\n     * @private\n     * @param {Array} rowRange Range for the sum.\n     * @param {Number} col Column index.\n     * @returns {Number} The partial sum.\n     */\n\n  }, {\n    key: \"getPartialSum\",\n    value: function getPartialSum(rowRange, col) {\n      var sum = 0;\n      var i = rowRange[1] || rowRange[0];\n      var cellValue = null;\n      var biggestDecimalPlacesCount = 0;\n\n      do {\n        cellValue = this.getCellValue(i, col) || 0;\n        var decimalPlaces = (\"\".concat(cellValue).split('.')[1] || []).length || 1;\n\n        if (decimalPlaces > biggestDecimalPlacesCount) {\n          biggestDecimalPlacesCount = decimalPlaces;\n        }\n\n        sum += cellValue || 0;\n        i -= 1;\n      } while (i >= rowRange[0]); // Workaround for e.g. 802.2 + 1.1 = 803.3000000000001\n\n\n      return Math.round(sum * Math.pow(10, biggestDecimalPlacesCount)) / Math.pow(10, biggestDecimalPlacesCount);\n    }\n    /**\n     * Calculates the minimal value for the selected ranges\n     *\n     * @private\n     * @param {Object} endpoint Contains the endpoint information.\n     * @param {String} type `'min'` or `'max'`.\n     * @returns {Number} Min or Max value.\n     */\n\n  }, {\n    key: \"calculateMinMax\",\n    value: function calculateMinMax(endpoint, type) {\n      var _this4 = this;\n\n      var result = null;\n      objectEach(endpoint.ranges, function (range) {\n        var partialResult = _this4.getPartialMinMax(range, endpoint.sourceColumn, type);\n\n        if (result === null && partialResult !== null) {\n          result = partialResult;\n        }\n\n        if (partialResult !== null) {\n          switch (type) {\n            case 'min':\n              result = Math.min(result, partialResult);\n              break;\n\n            case 'max':\n              result = Math.max(result, partialResult);\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n      return result === null ? 'Not enough data' : result;\n    }\n    /**\n     * Returns a local minimum of the provided sub-range\n     *\n     * @private\n     * @param {Array} rowRange Range for the calculation.\n     * @param {Number} col Column index.\n     * @param {String} type `'min'` or `'max'`\n     * @returns {Number} Min or max value.\n     */\n\n  }, {\n    key: \"getPartialMinMax\",\n    value: function getPartialMinMax(rowRange, col, type) {\n      var result = null;\n      var i = rowRange[1] || rowRange[0];\n      var cellValue;\n\n      do {\n        cellValue = this.getCellValue(i, col) || null;\n\n        if (result === null) {\n          result = cellValue;\n        } else if (cellValue !== null) {\n          switch (type) {\n            case 'min':\n              result = Math.min(result, cellValue);\n              break;\n\n            case 'max':\n              result = Math.max(result, cellValue);\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        i -= 1;\n      } while (i >= rowRange[0]);\n\n      return result;\n    }\n    /**\n     * Counts empty cells in the provided row range.\n     *\n     * @private\n     * @param {Array} rowRange Row range for the calculation.\n     * @param {Number} col Column index.\n     * @returns {Number} Empty cells count.\n     */\n\n  }, {\n    key: \"countEmpty\",\n    value: function countEmpty(rowRange, col) {\n      var cellValue;\n      var counter = 0;\n      var i = rowRange[1] || rowRange[0];\n\n      do {\n        cellValue = this.getCellValue(i, col);\n\n        if (!cellValue) {\n          counter += 1;\n        }\n\n        i -= 1;\n      } while (i >= rowRange[0]);\n\n      return counter;\n    }\n    /**\n     * Counts non-empty cells in the provided row range.\n     *\n     * @private\n     * @param {Object} endpoint Contains the endpoint information.\n     * @returns {Number} Entry count.\n     */\n\n  }, {\n    key: \"countEntries\",\n    value: function countEntries(endpoint) {\n      var _this5 = this;\n\n      var result = 0;\n      var ranges = endpoint.ranges;\n      objectEach(ranges, function (range) {\n        var partial = range[1] === void 0 ? 1 : range[1] - range[0] + 1;\n\n        var emptyCount = _this5.countEmpty(range, endpoint.sourceColumn);\n\n        result += partial;\n        result -= emptyCount;\n      });\n      return result;\n    }\n    /**\n     * Calculates the average value from the cells in the range.\n     *\n     * @private\n     * @param {Object} endpoint Contains the endpoint information.\n     * @returns {Number} Avarage value.\n     */\n\n  }, {\n    key: \"calculateAverage\",\n    value: function calculateAverage(endpoint) {\n      var sum = this.calculateSum(endpoint);\n      var entriesCount = this.countEntries(endpoint);\n      return sum / entriesCount;\n    }\n    /**\n     * Returns a cell value, taking into consideration a basic validation.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {Number} col Column index.\n     * @returns {String} The cell value.\n     */\n\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue(row, col) {\n      var visualRowIndex = this.endpoints.getVisualRowIndex(row);\n      var visualColumnIndex = this.endpoints.getVisualColumnIndex(col);\n      var cellValue = this.hot.getSourceDataAtCell(row, col);\n      var cellClassName = this.hot.getCellMeta(visualRowIndex, visualColumnIndex).className || '';\n\n      if (cellClassName.indexOf('columnSummaryResult') > -1) {\n        return null;\n      }\n\n      if (this.endpoints.currentEndpoint.forceNumeric) {\n        if (typeof cellValue === 'string') {\n          cellValue = cellValue.replace(/,/, '.');\n        }\n\n        cellValue = parseFloat(cellValue);\n      }\n\n      if (isNaN(cellValue)) {\n        if (!this.endpoints.currentEndpoint.suppressDataTypeErrors) {\n          throw new Error(\"ColumnSummary plugin: cell at (\".concat(row, \", \").concat(col, \") is not in a numeric format. Cannot do the calculation.\"));\n        }\n      }\n\n      return cellValue;\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.endpoints.endpoints = this.endpoints.parseSettings();\n      this.endpoints.refreshAllEndpoints(true);\n    }\n    /**\n     * `afterChange` hook callback.\n     *\n     * @private\n     * @param {Array} changes\n     * @param {String} source\n     */\n\n  }, {\n    key: \"onAfterChange\",\n    value: function onAfterChange(changes, source) {\n      if (changes && source !== 'ColumnSummary.reset' && source !== 'ColumnSummary.set' && source !== 'loadData') {\n        this.endpoints.refreshChangedEndpoints(changes);\n      }\n    }\n    /**\n     * `beforeRowMove` hook callback.\n     *\n     * @private\n     * @param {Array} rows Array of logical rows to be moved.\n     */\n\n  }, {\n    key: \"onBeforeRowMove\",\n    value: function onBeforeRowMove(rows) {\n      this.endpoints.resetSetupBeforeStructureAlteration('move_row', rows[0], rows.length, rows, this.pluginName);\n    }\n    /**\n     * `afterRowMove` hook callback.\n     *\n     * @private\n     * @param {Array} rows Array of logical rows that were moved.\n     * @param {Number} target Index of the destination row.\n     */\n\n  }, {\n    key: \"onAfterRowMove\",\n    value: function onAfterRowMove(rows, target) {\n      this.endpoints.resetSetupAfterStructureAlteration('move_row', target, rows.length, rows, this.pluginName);\n    }\n  }]);\n\n  return ColumnSummary;\n}(BasePlugin);\n\nregisterPlugin('columnSummary', ColumnSummary);\nexport default ColumnSummary;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/node_modules/handsontable/es/plugins/columnSummary/columnSummary.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","value","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","objectEach","registerPlugin","Endpoints","ColumnSummary","_BasePlugin","hotInstance","_this","endpoints","isEnabled","hot","getSettings","columnSummary","enablePlugin","_this2","enabled","settings","addHook","onAfterInit","apply","arguments","onAfterChange","index","amount","source","resetSetupBeforeStructureAlteration","_this2$endpoints","_len","args","Array","_key","concat","_this2$endpoints2","_len2","_key2","onBeforeRowMove","resetSetupAfterStructureAlteration","_this2$endpoints3","_len3","_key3","_this2$endpoints4","_len4","_key4","onAfterRowMove","disablePlugin","currentEndpoint","calculate","endpoint","type","toLowerCase","result","calculateSum","calculateMinMax","countEntries","calculateAverage","customFunction","_this3","sum","ranges","range","getPartialSum","sourceColumn","rowRange","col","cellValue","biggestDecimalPlacesCount","getCellValue","decimalPlaces","split","Math","round","pow","_this4","partialResult","getPartialMinMax","min","max","countEmpty","counter","_this5","partial","emptyCount","entriesCount","row","visualRowIndex","getVisualRowIndex","visualColumnIndex","getVisualColumnIndex","getSourceDataAtCell","cellClassName","getCellMeta","className","indexOf","forceNumeric","replace","parseFloat","isNaN","suppressDataTypeErrors","Error","parseSettings","refreshAllEndpoints","changes","refreshChangedEndpoints","rows","pluginName"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.string.split\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from '../_base';\nimport { objectEach } from '../../helpers/object';\nimport { registerPlugin } from '../../plugins';\nimport Endpoints from './endpoints';\n/**\n * @plugin ColumnSummary\n *\n * @description\n * Allows making pre-defined calculations on the cell values and display the results within Handsontable.\n * [See the demo for more information](https://docs.handsontable.com/pro/demo-summary-calculations.html).\n *s\n * @example\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   colHeaders: true,\n *   rowHeaders: true,\n *   columnSummary: [\n *     {\n *       destinationRow: 4,\n *       destinationColumn: 1,\n *       type: 'min'\n *     },\n *     {\n *       destinationRow: 0,\n *       destinationColumn: 3,\n *       reversedRowCoords: true,\n *       type: 'max'\n *     },\n *     {\n *       destinationRow: 4,\n *       destinationColumn: 5,\n *       type: 'sum',\n *       forceNumeric: true\n *     }\n *   ]\n * });\n */\n\nvar ColumnSummary =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(ColumnSummary, _BasePlugin);\n\n  function ColumnSummary(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, ColumnSummary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSummary).call(this, hotInstance));\n    /**\n     * The Endpoints class instance. Used to make all endpoint-related operations.\n     *\n     * @private\n     * @type {null|Endpoints}\n     */\n\n    _this.endpoints = null;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link ColumnSummary#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(ColumnSummary, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().columnSummary;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.settings = this.hot.getSettings().columnSummary;\n      this.endpoints = new Endpoints(this, this.settings);\n      this.addHook('afterInit', function () {\n        return _this2.onAfterInit.apply(_this2, arguments);\n      });\n      this.addHook('afterChange', function () {\n        return _this2.onAfterChange.apply(_this2, arguments);\n      });\n      this.addHook('beforeCreateRow', function (index, amount, source) {\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_row', index, amount, null, source);\n      });\n      this.addHook('beforeCreateCol', function (index, amount, source) {\n        return _this2.endpoints.resetSetupBeforeStructureAlteration('insert_col', index, amount, null, source);\n      });\n      this.addHook('beforeRemoveRow', function () {\n        var _this2$endpoints;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return (_this2$endpoints = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints, ['remove_row'].concat(args));\n      });\n      this.addHook('beforeRemoveCol', function () {\n        var _this2$endpoints2;\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return (_this2$endpoints2 = _this2.endpoints).resetSetupBeforeStructureAlteration.apply(_this2$endpoints2, ['remove_col'].concat(args));\n      });\n      this.addHook('beforeRowMove', function () {\n        return _this2.onBeforeRowMove.apply(_this2, arguments);\n      });\n      this.addHook('afterCreateRow', function (index, amount, source) {\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_row', index, amount, null, source);\n      });\n      this.addHook('afterCreateCol', function (index, amount, source) {\n        return _this2.endpoints.resetSetupAfterStructureAlteration('insert_col', index, amount, null, source);\n      });\n      this.addHook('afterRemoveRow', function () {\n        var _this2$endpoints3;\n\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        return (_this2$endpoints3 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints3, ['remove_row'].concat(args));\n      });\n      this.addHook('afterRemoveCol', function () {\n        var _this2$endpoints4;\n\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return (_this2$endpoints4 = _this2.endpoints).resetSetupAfterStructureAlteration.apply(_this2$endpoints4, ['remove_col'].concat(args));\n      });\n      this.addHook('afterRowMove', function () {\n        return _this2.onAfterRowMove.apply(_this2, arguments);\n      });\n\n      _get(_getPrototypeOf(ColumnSummary.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.endpoints = null;\n      this.settings = null;\n      this.currentEndpoint = null;\n    }\n    /**\n     * Calculates math for a single endpoint.\n     *\n     * @private\n     * @param {Object} endpoint Contains information about the endpoint.\n     */\n\n  }, {\n    key: \"calculate\",\n    value: function calculate(endpoint) {\n      switch (endpoint.type.toLowerCase()) {\n        case 'sum':\n          endpoint.result = this.calculateSum(endpoint);\n          break;\n\n        case 'min':\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n          break;\n\n        case 'max':\n          endpoint.result = this.calculateMinMax(endpoint, endpoint.type);\n          break;\n\n        case 'count':\n          endpoint.result = this.countEntries(endpoint);\n          break;\n\n        case 'average':\n          endpoint.result = this.calculateAverage(endpoint);\n          break;\n\n        case 'custom':\n          endpoint.result = endpoint.customFunction.call(this, endpoint);\n          break;\n\n        default:\n          break;\n      }\n    }\n    /**\n     * Calculates sum of the values contained in ranges provided in the plugin config.\n     *\n     * @private\n     * @param {Object} endpoint Contains the endpoint information.\n     * @returns {Number} Sum for the selected range\n     */\n\n  }, {\n    key: \"calculateSum\",\n    value: function calculateSum(endpoint) {\n      var _this3 = this;\n\n      var sum = 0;\n      objectEach(endpoint.ranges, function (range) {\n        sum += _this3.getPartialSum(range, endpoint.sourceColumn);\n      });\n      return sum;\n    }\n    /**\n     * Returns partial sum of values from a single row range\n     *\n     * @private\n     * @param {Array} rowRange Range for the sum.\n     * @param {Number} col Column index.\n     * @returns {Number} The partial sum.\n     */\n\n  }, {\n    key: \"getPartialSum\",\n    value: function getPartialSum(rowRange, col) {\n      var sum = 0;\n      var i = rowRange[1] || rowRange[0];\n      var cellValue = null;\n      var biggestDecimalPlacesCount = 0;\n\n      do {\n        cellValue = this.getCellValue(i, col) || 0;\n        var decimalPlaces = (\"\".concat(cellValue).split('.')[1] || []).length || 1;\n\n        if (decimalPlaces > biggestDecimalPlacesCount) {\n          biggestDecimalPlacesCount = decimalPlaces;\n        }\n\n        sum += cellValue || 0;\n        i -= 1;\n      } while (i >= rowRange[0]); // Workaround for e.g. 802.2 + 1.1 = 803.3000000000001\n\n\n      return Math.round(sum * Math.pow(10, biggestDecimalPlacesCount)) / Math.pow(10, biggestDecimalPlacesCount);\n    }\n    /**\n     * Calculates the minimal value for the selected ranges\n     *\n     * @private\n     * @param {Object} endpoint Contains the endpoint information.\n     * @param {String} type `'min'` or `'max'`.\n     * @returns {Number} Min or Max value.\n     */\n\n  }, {\n    key: \"calculateMinMax\",\n    value: function calculateMinMax(endpoint, type) {\n      var _this4 = this;\n\n      var result = null;\n      objectEach(endpoint.ranges, function (range) {\n        var partialResult = _this4.getPartialMinMax(range, endpoint.sourceColumn, type);\n\n        if (result === null && partialResult !== null) {\n          result = partialResult;\n        }\n\n        if (partialResult !== null) {\n          switch (type) {\n            case 'min':\n              result = Math.min(result, partialResult);\n              break;\n\n            case 'max':\n              result = Math.max(result, partialResult);\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n      return result === null ? 'Not enough data' : result;\n    }\n    /**\n     * Returns a local minimum of the provided sub-range\n     *\n     * @private\n     * @param {Array} rowRange Range for the calculation.\n     * @param {Number} col Column index.\n     * @param {String} type `'min'` or `'max'`\n     * @returns {Number} Min or max value.\n     */\n\n  }, {\n    key: \"getPartialMinMax\",\n    value: function getPartialMinMax(rowRange, col, type) {\n      var result = null;\n      var i = rowRange[1] || rowRange[0];\n      var cellValue;\n\n      do {\n        cellValue = this.getCellValue(i, col) || null;\n\n        if (result === null) {\n          result = cellValue;\n        } else if (cellValue !== null) {\n          switch (type) {\n            case 'min':\n              result = Math.min(result, cellValue);\n              break;\n\n            case 'max':\n              result = Math.max(result, cellValue);\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        i -= 1;\n      } while (i >= rowRange[0]);\n\n      return result;\n    }\n    /**\n     * Counts empty cells in the provided row range.\n     *\n     * @private\n     * @param {Array} rowRange Row range for the calculation.\n     * @param {Number} col Column index.\n     * @returns {Number} Empty cells count.\n     */\n\n  }, {\n    key: \"countEmpty\",\n    value: function countEmpty(rowRange, col) {\n      var cellValue;\n      var counter = 0;\n      var i = rowRange[1] || rowRange[0];\n\n      do {\n        cellValue = this.getCellValue(i, col);\n\n        if (!cellValue) {\n          counter += 1;\n        }\n\n        i -= 1;\n      } while (i >= rowRange[0]);\n\n      return counter;\n    }\n    /**\n     * Counts non-empty cells in the provided row range.\n     *\n     * @private\n     * @param {Object} endpoint Contains the endpoint information.\n     * @returns {Number} Entry count.\n     */\n\n  }, {\n    key: \"countEntries\",\n    value: function countEntries(endpoint) {\n      var _this5 = this;\n\n      var result = 0;\n      var ranges = endpoint.ranges;\n      objectEach(ranges, function (range) {\n        var partial = range[1] === void 0 ? 1 : range[1] - range[0] + 1;\n\n        var emptyCount = _this5.countEmpty(range, endpoint.sourceColumn);\n\n        result += partial;\n        result -= emptyCount;\n      });\n      return result;\n    }\n    /**\n     * Calculates the average value from the cells in the range.\n     *\n     * @private\n     * @param {Object} endpoint Contains the endpoint information.\n     * @returns {Number} Avarage value.\n     */\n\n  }, {\n    key: \"calculateAverage\",\n    value: function calculateAverage(endpoint) {\n      var sum = this.calculateSum(endpoint);\n      var entriesCount = this.countEntries(endpoint);\n      return sum / entriesCount;\n    }\n    /**\n     * Returns a cell value, taking into consideration a basic validation.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {Number} col Column index.\n     * @returns {String} The cell value.\n     */\n\n  }, {\n    key: \"getCellValue\",\n    value: function getCellValue(row, col) {\n      var visualRowIndex = this.endpoints.getVisualRowIndex(row);\n      var visualColumnIndex = this.endpoints.getVisualColumnIndex(col);\n      var cellValue = this.hot.getSourceDataAtCell(row, col);\n      var cellClassName = this.hot.getCellMeta(visualRowIndex, visualColumnIndex).className || '';\n\n      if (cellClassName.indexOf('columnSummaryResult') > -1) {\n        return null;\n      }\n\n      if (this.endpoints.currentEndpoint.forceNumeric) {\n        if (typeof cellValue === 'string') {\n          cellValue = cellValue.replace(/,/, '.');\n        }\n\n        cellValue = parseFloat(cellValue);\n      }\n\n      if (isNaN(cellValue)) {\n        if (!this.endpoints.currentEndpoint.suppressDataTypeErrors) {\n          throw new Error(\"ColumnSummary plugin: cell at (\".concat(row, \", \").concat(col, \") is not in a numeric format. Cannot do the calculation.\"));\n        }\n      }\n\n      return cellValue;\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.endpoints.endpoints = this.endpoints.parseSettings();\n      this.endpoints.refreshAllEndpoints(true);\n    }\n    /**\n     * `afterChange` hook callback.\n     *\n     * @private\n     * @param {Array} changes\n     * @param {String} source\n     */\n\n  }, {\n    key: \"onAfterChange\",\n    value: function onAfterChange(changes, source) {\n      if (changes && source !== 'ColumnSummary.reset' && source !== 'ColumnSummary.set' && source !== 'loadData') {\n        this.endpoints.refreshChangedEndpoints(changes);\n      }\n    }\n    /**\n     * `beforeRowMove` hook callback.\n     *\n     * @private\n     * @param {Array} rows Array of logical rows to be moved.\n     */\n\n  }, {\n    key: \"onBeforeRowMove\",\n    value: function onBeforeRowMove(rows) {\n      this.endpoints.resetSetupBeforeStructureAlteration('move_row', rows[0], rows.length, rows, this.pluginName);\n    }\n    /**\n     * `afterRowMove` hook callback.\n     *\n     * @private\n     * @param {Array} rows Array of logical rows that were moved.\n     * @param {Number} target Index of the destination row.\n     */\n\n  }, {\n    key: \"onAfterRowMove\",\n    value: function onAfterRowMove(rows, target) {\n      this.endpoints.resetSetupAfterStructureAlteration('move_row', target, rows.length, rows, this.pluginName);\n    }\n  }]);\n\n  return ColumnSummary;\n}(BasePlugin);\n\nregisterPlugin('columnSummary', ColumnSummary);\nexport default ColumnSummary;"]},"metadata":{},"sourceType":"module"}