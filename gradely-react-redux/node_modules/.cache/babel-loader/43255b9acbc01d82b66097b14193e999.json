{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport React, { Component } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport 'handsontable/dist/handsontable.full.css';\nimport { connect } from 'react-redux';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.data = [[,,,,,]], container, hot1;\n  }\n\n  negativeValueRenderer(instance, td, row, col, prop, value, cellProperties) {\n    Handsontable.renderers.TextRenderer.apply(this, arguments); // if row contains negative number\n\n    if (parseInt(value, 10) < 0) {\n      // add class \"negative\"\n      td.className = 'make-me-red';\n    }\n\n    if (!value || value === '') {\n      td.style.background = '#EEE';\n    } else {\n      if (value === 'Nissan') {\n        td.style.fontStyle = 'italic';\n      }\n\n      td.style.background = '';\n    }\n  }\n\n  firstRowRenderer(instance, td, row, col, prop, value, cellProperties) {\n    Handsontable.renderers.TextRenderer.apply(this, arguments);\n    td.style.fontWeight = 'bold';\n    td.style.color = 'green';\n    td.style.background = '#CEC';\n  }\n\n  getHeaders() {}\n\n  render() {\n    container = document.getElementById('example1');\n    hot1 = new Handsontable(container, {\n      data: data,\n      afterSelection: function (row, col, row2, col2) {\n        var meta = this.getCellMeta(row2, col2);\n\n        if (meta.readOnly) {\n          this.updateSettings({\n            fillHandle: false\n          });\n        } else {\n          this.updateSettings({\n            fillHandle: true\n          });\n        }\n      },\n      cells: function (row, col) {\n        var cellProperties = {};\n        var data = this.instance.getData();\n\n        if (row === 0 || data[row] && data[row][col] === 'readOnly') {\n          cellProperties.readOnly = true; // make cell read-only if it is first row or the text reads 'readOnly'\n        }\n\n        if (row === 0) {\n          cellProperties.renderer = firstRowRenderer; // uses function directly\n        } else {\n          cellProperties.renderer = \"negativeValueRenderer\"; // uses lookup map\n        }\n\n        return cellProperties;\n      }\n    });\n    let colHeaders = this.props.editCourse && this.props.editCourse.assignments.map(assignment => {\n      return {\n        id: assignment.id,\n        value: assignment.name\n      };\n    });\n    colHeaders && colHeaders.unshift(\"\");\n    let rowHeaders = this.props.editCourse && this.props.editCourse.studentList.map(student => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }\n      }, student.user.firstName + \" \" + student.user.lastName);\n    });\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      data: this.data,\n      colHeaders: colHeaders,\n      rowHeaders: rowHeaders,\n      colWidths: 100,\n      // width: \"600\", \n      // height: \"300\",\n      headerTooltips: {\n        rows: true,\n        columns: true,\n        onlyTrimmed: false\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hot-app\",\n      className: \"table table-hover table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HotTable, {\n      className: \"my-3\",\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  temp: state.temp.grid\n});\n\nexport default connect(mapStateToProps, {})(Table);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/Table.js"],"names":["React","Component","HotTable","connect","Table","constructor","data","container","hot1","negativeValueRenderer","instance","td","row","col","prop","value","cellProperties","Handsontable","renderers","TextRenderer","apply","arguments","parseInt","className","style","background","fontStyle","firstRowRenderer","fontWeight","color","getHeaders","render","document","getElementById","afterSelection","row2","col2","meta","getCellMeta","readOnly","updateSettings","fillHandle","cells","getData","renderer","colHeaders","props","editCourse","assignments","map","assignment","id","name","unshift","rowHeaders","studentList","student","user","firstName","lastName","settings","licenseKey","colWidths","headerTooltips","rows","columns","onlyTrimmed","mapStateToProps","state","temp","grid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { HotTable } from '@handsontable/react'\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport 'handsontable/dist/handsontable.full.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Table extends Component {\r\n    constructor() {\r\n        super()\r\n        this.data = [\r\n            [, , , , , ]\r\n        ], container, hot1;\r\n    }\r\n\r\n    negativeValueRenderer(instance, td, row, col, prop, value, cellProperties) {\r\n        Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n      \r\n        // if row contains negative number\r\n        if (parseInt(value, 10) < 0) {\r\n          // add class \"negative\"\r\n          td.className = 'make-me-red';\r\n        }\r\n      \r\n        if (!value || value === '') {\r\n          td.style.background = '#EEE';\r\n        }\r\n        else {\r\n          if (value === 'Nissan') {\r\n            td.style.fontStyle = 'italic';\r\n          }\r\n          td.style.background = '';\r\n        }\r\n      }\r\n\r\n    firstRowRenderer(instance, td, row, col, prop, value, cellProperties) {\r\n        Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n        td.style.fontWeight = 'bold';\r\n        td.style.color = 'green';\r\n        td.style.background = '#CEC';\r\n      }\r\n\r\n    getHeaders() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        container = document.getElementById('example1');\r\nhot1 = new Handsontable(container, {\r\n  data: data,\r\n  afterSelection: function (row, col, row2, col2) {\r\n    var meta = this.getCellMeta(row2, col2);\r\n\r\n    if (meta.readOnly) {\r\n      this.updateSettings({fillHandle: false});\r\n    }\r\n    else {\r\n      this.updateSettings({fillHandle: true});\r\n    }\r\n  },\r\n  cells: function (row, col) {\r\n    var cellProperties = {};\r\n    var data = this.instance.getData();\r\n\r\n    if (row === 0 || data[row] && data[row][col] === 'readOnly') {\r\n      cellProperties.readOnly = true; // make cell read-only if it is first row or the text reads 'readOnly'\r\n    }\r\n    if (row === 0) {\r\n      cellProperties.renderer = firstRowRenderer; // uses function directly\r\n    }\r\n    else {\r\n      cellProperties.renderer = \"negativeValueRenderer\"; // uses lookup map\r\n    }\r\n\r\n    return cellProperties;\r\n  }\r\n});\r\n        let colHeaders = this.props.editCourse && this.props.editCourse.assignments.map(assignment => {\r\n            return {id: assignment.id, value: assignment.name}\r\n        })\r\n        colHeaders && colHeaders.unshift(\"\")\r\n\r\n        let rowHeaders = this.props.editCourse && this.props.editCourse.studentList.map(student => {\r\n            return <td>{student.user.firstName + \" \" + student.user.lastName}</td>\r\n        })\r\n\r\n\r\n        const settings = {\r\n            licenseKey: 'non-commercial-and-evaluation', \r\n            data: this.data,\r\n            colHeaders: colHeaders,\r\n            rowHeaders: rowHeaders,\r\n            colWidths: 100,\r\n            // width: \"600\", \r\n            // height: \"300\",\r\n            headerTooltips: {\r\n                rows: true,\r\n                columns: true,\r\n                onlyTrimmed: false\r\n              }\r\n        }\r\n\r\n        return (\r\n            <div id=\"hot-app\" className=\"table table-hover table-sm\">\r\n                <HotTable className=\"my-3\" settings={settings}  />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    editCourse: state.temp.editCourse,\r\n    temp: state.temp.grid,\r\n  })\r\n  \r\n  export default connect(mapStateToProps, {})(Table)"]},"metadata":{},"sourceType":"module"}