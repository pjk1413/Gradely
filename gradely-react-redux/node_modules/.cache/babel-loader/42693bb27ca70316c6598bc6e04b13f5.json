{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport { addClass, closest, isChildOf, hasClass, offset, outerWidth, outerHeight } from './../../helpers/dom/element';\nimport { deepClone, deepExtend, isObject } from './../../helpers/object';\nimport EventManager from './../../eventManager';\nimport { CellCoords } from './../../3rdparty/walkontable/src';\nimport { registerPlugin } from './../../plugins';\nimport BasePlugin from './../_base';\nimport CommentEditor from './commentEditor';\nimport { checkSelectionConsistency, markLabelAsSelected } from './../contextMenu/utils';\nimport DisplaySwitch from './displaySwitch';\nimport * as C from './../../i18n/constants';\nvar privatePool = new WeakMap();\nvar META_COMMENT = 'comment';\nvar META_COMMENT_VALUE = 'value';\nvar META_STYLE = 'style';\nvar META_READONLY = 'readOnly';\n/**\n * @plugin Comments\n *\n * @description\n * This plugin allows setting and managing cell comments by either an option in the context menu or with the use of\n * the API.\n *\n * To enable the plugin, you'll need to set the comments property of the config object to `true`:\n * ```js\n * comments: true\n * ```\n *\n * or an object with extra predefined plugin config:\n *\n * ```js\n * comments: {\n *   displayDelay: 1000\n * }\n * ```\n *\n * To add comments at the table initialization, define the `comment` property in the `cell` config array as in an example below.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   date: getData(),\n *   comments: true,\n *   cell: [\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]\n * });\n *\n * // Access to the Comments plugin instance:\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n */\n\nvar Comments = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(Comments, _BasePlugin);\n\n  function Comments(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comments).call(this, hotInstance));\n    /**\n     * Instance of {@link CommentEditor}.\n     *\n     * @private\n     * @type {CommentEditor}\n     */\n\n    _this.editor = null;\n    /**\n     * Instance of {@link DisplaySwitch}.\n     *\n     * @private\n     * @type {DisplaySwitch}\n     */\n\n    _this.displaySwitch = null;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = null;\n    /**\n     * Current cell range, an object with `from` property, with `row` and `col` properties (e.q. `{from: {row: 1, col: 6}}`).\n     *\n     * @type {Object}\n     */\n\n    _this.range = {};\n    /**\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.mouseDown = false;\n    /**\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.contextMenuEvent = false;\n    /**\n     * @private\n     * @type {*}\n     */\n\n    _this.timer = null;\n    privatePool.set(_assertThisInitialized(_this), {\n      tempEditorDimensions: {},\n      cellBelowCursor: null\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link Comments#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Comments, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().comments;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (!this.editor) {\n        this.editor = new CommentEditor(this.hot.rootDocument);\n      }\n\n      if (!this.eventManager) {\n        this.eventManager = new EventManager(this);\n      }\n\n      if (!this.displaySwitch) {\n        this.displaySwitch = new DisplaySwitch(this.getDisplayDelaySetting());\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.addToContextMenu(options);\n      });\n      this.addHook('afterRenderer', function (TD, row, col, prop, value, cellProperties) {\n        return _this2.onAfterRenderer(TD, cellProperties);\n      });\n      this.addHook('afterScrollHorizontally', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterBeginEditing', function () {\n        return _this2.onAfterBeginEditing();\n      });\n      this.displaySwitch.addLocalHook('hide', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('show', function (row, col) {\n        return _this2.showAtCell(row, col);\n      });\n      this.registerListeners();\n\n      _get(_getPrototypeOf(Comments.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(Comments.prototype), \"updatePlugin\", this).call(this);\n\n      this.displaySwitch.updateDelay(this.getDisplayDelaySetting());\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(Comments.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Registers all necessary DOM listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      this.eventManager.addEventListener(rootDocument, 'mouseover', function (event) {\n        return _this3.onMouseOver(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mousedown', function (event) {\n        return _this3.onMouseDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'blur', function () {\n        return _this3.onEditorBlur();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mousedown', function (event) {\n        return _this3.onEditorMouseDown(event);\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mouseup', function (event) {\n        return _this3.onEditorMouseUp(event);\n      });\n    }\n    /**\n     * Sets the current cell range to be able to use general methods like {@link Comments#setComment}, {@link Comments#removeComment}, {@link Comments#show}.\n     *\n     * @param {Object} range Object with `from` property, each with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"setRange\",\n    value: function setRange(range) {\n      this.range = range;\n    }\n    /**\n     * Clears the currently selected cell.\n     */\n\n  }, {\n    key: \"clearRange\",\n    value: function clearRange() {\n      this.range = {};\n    }\n    /**\n     * Checks if the event target is a cell containing a comment.\n     *\n     * @private\n     * @param {Event} event DOM event\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"targetIsCellWithComment\",\n    value: function targetIsCellWithComment(event) {\n      var closestCell = closest(event.target, 'TD', 'TBODY');\n      return !!(closestCell && hasClass(closestCell, 'htCommentCell') && closest(closestCell, [this.hot.rootElement]));\n    }\n    /**\n     * Checks if the event target is a comment textarea.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"targetIsCommentTextArea\",\n    value: function targetIsCommentTextArea(event) {\n      return this.editor.getInputElement() === event.target;\n    }\n    /**\n     * Sets a comment for a cell according to the previously set range (see {@link Comments#setRange}).\n     *\n     * @param {String} value Comment contents.\n     */\n\n  }, {\n    key: \"setComment\",\n    value: function setComment(value) {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var editorValue = this.editor.getValue();\n      var comment = '';\n\n      if (value !== null && value !== void 0) {\n        comment = value;\n      } else if (editorValue !== null && editorValue !== void 0) {\n        comment = editorValue;\n      }\n\n      var row = this.range.from.row;\n      var col = this.range.from.col;\n      this.updateCommentMeta(row, col, _defineProperty({}, META_COMMENT_VALUE, comment));\n      this.hot.render();\n    }\n    /**\n     * Sets a comment for a specified cell.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} value Comment contents.\n     */\n\n  }, {\n    key: \"setCommentAtCell\",\n    value: function setCommentAtCell(row, column, value) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.setComment(value);\n    }\n    /**\n     * Removes a comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @param {Boolean} [forceRender=true] If set to `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeComment\",\n    value: function removeComment() {\n      var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      this.hot.setCellMeta(this.range.from.row, this.range.from.col, META_COMMENT, void 0);\n\n      if (forceRender) {\n        this.hot.render();\n      }\n\n      this.hide();\n    }\n    /**\n     * Removes a comment from a specified cell.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Boolean} [forceRender=true] If `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeCommentAtCell\",\n    value: function removeCommentAtCell(row, column) {\n      var forceRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.removeComment(forceRender);\n    }\n    /**\n     * Gets comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {String|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getComment\",\n    value: function getComment() {\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Gets comment from a cell at the provided coordinates.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @returns {String|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getCommentAtCell\",\n    value: function getCommentAtCell(row, column) {\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Shows the comment editor accordingly to the previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {Boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n      this.refreshEditor(true);\n      this.editor.setValue(meta[META_COMMENT] ? meta[META_COMMENT][META_COMMENT_VALUE] : null || '');\n\n      if (this.editor.hidden) {\n        this.editor.show();\n      }\n\n      return true;\n    }\n    /**\n     * Shows comment editor according to cell coordinates.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @returns {Boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"showAtCell\",\n    value: function showAtCell(row, column) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      return this.show();\n    }\n    /**\n     * Hides the comment editor.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (!this.editor.hidden) {\n        this.editor.hide();\n      }\n    }\n    /**\n     * Refreshes comment editor position and styling.\n     *\n     * @param {Boolean} [force=false] If `true` then recalculation will be forced.\n     */\n\n  }, {\n    key: \"refreshEditor\",\n    value: function refreshEditor() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!force && (!this.range.from || !this.editor.isVisible())) {\n        return;\n      }\n\n      var rootWindow = this.hot.rootWindow;\n      var _this$hot$view$wt = this.hot.view.wt,\n          wtTable = _this$hot$view$wt.wtTable,\n          wtOverlays = _this$hot$view$wt.wtOverlays,\n          wtViewport = _this$hot$view$wt.wtViewport;\n      var scrollableElement = wtOverlays.scrollableElement;\n      var TD = wtTable.getCell(this.range.from);\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      var cellOffset = offset(TD);\n      var lastColWidth = wtTable.getStretchedColumnWidth(column);\n      var cellTopOffset = cellOffset.top < 0 ? 0 : cellOffset.top;\n      var cellLeftOffset = cellOffset.left;\n\n      if (wtViewport.hasVerticalScroll() && scrollableElement !== rootWindow) {\n        cellTopOffset -= wtOverlays.topOverlay.getScrollPosition();\n      }\n\n      if (wtViewport.hasHorizontalScroll() && scrollableElement !== rootWindow) {\n        cellLeftOffset -= wtOverlays.leftOverlay.getScrollPosition();\n      }\n\n      var x = cellLeftOffset + lastColWidth;\n      var y = cellTopOffset;\n      var commentStyle = this.getCommentMeta(row, column, META_STYLE);\n      var readOnly = this.getCommentMeta(row, column, META_READONLY);\n\n      if (commentStyle) {\n        this.editor.setSize(commentStyle.width, commentStyle.height);\n      } else {\n        this.editor.resetSize();\n      }\n\n      this.editor.setReadOnlyState(readOnly);\n      this.editor.setPosition(x, y);\n    }\n    /**\n     * Checks if there is a comment for selected range.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"checkSelectionCommentsConsistency\",\n    value: function checkSelectionCommentsConsistency() {\n      var selected = this.hot.getSelectedRangeLast();\n\n      if (!selected) {\n        return false;\n      }\n\n      var hasComment = false;\n      var cell = selected.from; // IN EXCEL THERE IS COMMENT ONLY FOR TOP LEFT CELL IN SELECTION\n\n      if (this.getCommentMeta(cell.row, cell.col, META_COMMENT_VALUE)) {\n        hasComment = true;\n      }\n\n      return hasComment;\n    }\n    /**\n     * Sets or update the comment-related cell meta.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Object} metaObject Object defining all the comment-related meta information.\n     */\n\n  }, {\n    key: \"updateCommentMeta\",\n    value: function updateCommentMeta(row, column, metaObject) {\n      var oldComment = this.hot.getCellMeta(row, column)[META_COMMENT];\n      var newComment;\n\n      if (oldComment) {\n        newComment = deepClone(oldComment);\n        deepExtend(newComment, metaObject);\n      } else {\n        newComment = metaObject;\n      }\n\n      this.hot.setCellMeta(row, column, META_COMMENT, newComment);\n    }\n    /**\n     * Gets the comment related meta information.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} property Cell meta property.\n     * @returns {Mixed}\n     */\n\n  }, {\n    key: \"getCommentMeta\",\n    value: function getCommentMeta(row, column, property) {\n      var cellMeta = this.hot.getCellMeta(row, column);\n\n      if (!cellMeta[META_COMMENT]) {\n        return void 0;\n      }\n\n      return cellMeta[META_COMMENT][property];\n    }\n    /**\n     * `mousedown` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      this.mouseDown = true;\n\n      if (!this.hot.view || !this.hot.view.wt) {\n        return;\n      }\n\n      if (!this.contextMenuEvent && !this.targetIsCommentTextArea(event)) {\n        var eventCell = closest(event.target, 'TD', 'TBODY');\n        var coordinates = null;\n\n        if (eventCell) {\n          coordinates = this.hot.view.wt.wtTable.getCoords(eventCell);\n        }\n\n        if (!eventCell || this.range.from && coordinates && (this.range.from.row !== coordinates.row || this.range.from.col !== coordinates.col)) {\n          this.hide();\n        }\n      }\n\n      this.contextMenuEvent = false;\n    }\n    /**\n     * `mouseover` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseover` event.\n     */\n\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(event) {\n      var priv = privatePool.get(this);\n      var rootDocument = this.hot.rootDocument;\n      priv.cellBelowCursor = rootDocument.elementFromPoint(event.clientX, event.clientY);\n\n      if (this.mouseDown || this.editor.isFocused() || hasClass(event.target, 'wtBorder') || priv.cellBelowCursor !== event.target || !this.editor) {\n        return;\n      }\n\n      if (this.targetIsCellWithComment(event)) {\n        var coordinates = this.hot.view.wt.wtTable.getCoords(event.target);\n        var range = {\n          from: new CellCoords(coordinates.row, coordinates.col)\n        };\n        this.displaySwitch.show(range);\n      } else if (isChildOf(event.target, rootDocument) && !this.targetIsCommentTextArea(event)) {\n        this.displaySwitch.hide();\n      }\n    }\n    /**\n     * `mouseup` event callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.mouseDown = false;\n    }\n    /** *\n     * The `afterRenderer` hook callback..\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {Object} cellProperties The rendered cell's property object.\n     */\n\n  }, {\n    key: \"onAfterRenderer\",\n    value: function onAfterRenderer(TD, cellProperties) {\n      if (cellProperties[META_COMMENT] && cellProperties[META_COMMENT][META_COMMENT_VALUE]) {\n        addClass(TD, cellProperties.commentedCellClassName);\n      }\n    }\n    /**\n     * `blur` event callback for the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onEditorBlur\",\n    value: function onEditorBlur() {\n      this.setComment();\n    }\n    /**\n     * `mousedown` hook. Along with `onEditorMouseUp` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onEditorMouseDown\",\n    value: function onEditorMouseDown(event) {\n      var priv = privatePool.get(this);\n      priv.tempEditorDimensions = {\n        width: outerWidth(event.target),\n        height: outerHeight(event.target)\n      };\n    }\n    /**\n     * `mouseup` hook. Along with `onEditorMouseDown` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseup` event.\n     */\n\n  }, {\n    key: \"onEditorMouseUp\",\n    value: function onEditorMouseUp(event) {\n      var priv = privatePool.get(this);\n      var currentWidth = outerWidth(event.target);\n      var currentHeight = outerHeight(event.target);\n\n      if (currentWidth !== priv.tempEditorDimensions.width + 1 || currentHeight !== priv.tempEditorDimensions.height + 2) {\n        this.updateCommentMeta(this.range.from.row, this.range.from.col, _defineProperty({}, META_STYLE, {\n          width: currentWidth,\n          height: currentHeight\n        }));\n      }\n    }\n    /**\n     * Context Menu's \"Add comment\" callback. Results in showing the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuAddComment\",\n    value: function onContextMenuAddComment() {\n      var _this4 = this;\n\n      this.displaySwitch.cancelHiding();\n      var coords = this.hot.getSelectedRangeLast();\n      this.contextMenuEvent = true;\n      this.setRange({\n        from: coords.from\n      });\n      this.show();\n      setTimeout(function () {\n        if (_this4.hot) {\n          _this4.hot.deselectCell();\n\n          _this4.editor.focus();\n        }\n      }, 10);\n    }\n    /**\n     * Context Menu's \"remove comment\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuRemoveComment\",\n    value: function onContextMenuRemoveComment() {\n      var _this$hot$getSelected = this.hot.getSelectedRangeLast(),\n          from = _this$hot$getSelected.from,\n          to = _this$hot$getSelected.to;\n\n      this.contextMenuEvent = true;\n\n      for (var i = from.row; i <= to.row; i++) {\n        for (var j = from.col; j <= to.col; j++) {\n          this.removeCommentAtCell(i, j, false);\n        }\n      }\n\n      this.hot.render();\n    }\n    /**\n     * Context Menu's \"make comment read-only\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuMakeReadOnly\",\n    value: function onContextMenuMakeReadOnly() {\n      var _this$hot$getSelected2 = this.hot.getSelectedRangeLast(),\n          from = _this$hot$getSelected2.from,\n          to = _this$hot$getSelected2.to;\n\n      this.contextMenuEvent = true;\n\n      for (var i = from.row; i <= to.row; i++) {\n        for (var j = from.col; j <= to.col; j++) {\n          var currentState = !!this.getCommentMeta(i, j, META_READONLY);\n          this.updateCommentMeta(i, j, _defineProperty({}, META_READONLY, !currentState));\n        }\n      }\n    }\n    /**\n     * Add Comments plugin options to the Context Menu.\n     *\n     * @private\n     * @param {Object} defaultOptions\n     */\n\n  }, {\n    key: \"addToContextMenu\",\n    value: function addToContextMenu(defaultOptions) {\n      var _this5 = this;\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'commentsAddEdit',\n        name: function name() {\n          if (_this5.checkSelectionCommentsConsistency()) {\n            return _this5.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_EDIT_COMMENT);\n          }\n\n          return _this5.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ADD_COMMENT);\n        },\n        callback: function callback() {\n          return _this5.onContextMenuAddComment();\n        },\n        disabled: function disabled() {\n          return !(this.getSelectedLast() && !this.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsRemove',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COMMENT);\n        },\n        callback: function callback() {\n          return _this5.onContextMenuRemoveComment();\n        },\n        disabled: function disabled() {\n          return _this5.hot.selection.isSelectedByCorner();\n        }\n      }, {\n        key: 'commentsReadOnly',\n        name: function name() {\n          var _this6 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n          var hasProperty = checkSelectionConsistency(this.getSelectedRangeLast(), function (row, col) {\n            var readOnlyProperty = _this6.getCellMeta(row, col)[META_COMMENT];\n\n            if (readOnlyProperty) {\n              readOnlyProperty = readOnlyProperty[META_READONLY];\n            }\n\n            if (readOnlyProperty) {\n              return true;\n            }\n          });\n\n          if (hasProperty) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          return _this5.onContextMenuMakeReadOnly();\n        },\n        disabled: function disabled() {\n          return _this5.hot.selection.isSelectedByCorner() || !_this5.checkSelectionCommentsConsistency();\n        }\n      });\n    }\n    /**\n     * Get `displayDelay` setting of comment plugin.\n     *\n     * @private\n     * @returns {Number|undefined}\n     */\n\n  }, {\n    key: \"getDisplayDelaySetting\",\n    value: function getDisplayDelaySetting() {\n      var commentSetting = this.hot.getSettings().comments;\n\n      if (isObject(commentSetting)) {\n        return commentSetting.displayDelay;\n      }\n\n      return void 0;\n    }\n    /**\n     * `afterBeginEditing` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterBeginEditing\",\n    value: function onAfterBeginEditing() {\n      this.hide();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editor) {\n        this.editor.destroy();\n      }\n\n      if (this.displaySwitch) {\n        this.displaySwitch.destroy();\n      }\n\n      _get(_getPrototypeOf(Comments.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return Comments;\n}(BasePlugin);\n\nregisterPlugin('comments', Comments);\nexport default Comments;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/node_modules/handsontable/es/plugins/comments/comments.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","addClass","closest","isChildOf","hasClass","offset","outerWidth","outerHeight","deepClone","deepExtend","isObject","EventManager","CellCoords","registerPlugin","BasePlugin","CommentEditor","checkSelectionConsistency","markLabelAsSelected","DisplaySwitch","C","privatePool","WeakMap","META_COMMENT","META_COMMENT_VALUE","META_STYLE","META_READONLY","Comments","_BasePlugin","hotInstance","_this","editor","displaySwitch","eventManager","range","mouseDown","contextMenuEvent","timer","set","tempEditorDimensions","cellBelowCursor","isEnabled","hot","getSettings","comments","enablePlugin","_this2","enabled","rootDocument","getDisplayDelaySetting","addHook","options","addToContextMenu","TD","row","col","prop","cellProperties","onAfterRenderer","hide","onAfterBeginEditing","addLocalHook","showAtCell","registerListeners","updatePlugin","disablePlugin","updateDelay","_this3","addEventListener","event","onMouseOver","onMouseDown","onMouseUp","getInputElement","onEditorBlur","onEditorMouseDown","onEditorMouseUp","setRange","clearRange","targetIsCellWithComment","closestCell","rootElement","targetIsCommentTextArea","setComment","from","Error","editorValue","getValue","comment","updateCommentMeta","render","setCommentAtCell","column","removeComment","forceRender","arguments","undefined","setCellMeta","removeCommentAtCell","getComment","getCommentMeta","getCommentAtCell","show","meta","getCellMeta","refreshEditor","setValue","hidden","force","isVisible","rootWindow","_this$hot$view$wt","view","wt","wtTable","wtOverlays","wtViewport","scrollableElement","getCell","cellOffset","lastColWidth","getStretchedColumnWidth","cellTopOffset","top","cellLeftOffset","left","hasVerticalScroll","topOverlay","getScrollPosition","hasHorizontalScroll","leftOverlay","x","y","commentStyle","readOnly","setSize","width","height","resetSize","setReadOnlyState","setPosition","checkSelectionCommentsConsistency","selected","getSelectedRangeLast","hasComment","cell","metaObject","oldComment","newComment","cellMeta","eventCell","coordinates","getCoords","priv","elementFromPoint","clientX","clientY","isFocused","commentedCellClassName","currentWidth","currentHeight","onContextMenuAddComment","_this4","cancelHiding","coords","setTimeout","deselectCell","focus","onContextMenuRemoveComment","_this$hot$getSelected","to","j","onContextMenuMakeReadOnly","_this$hot$getSelected2","currentState","defaultOptions","_this5","items","push","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_EDIT_COMMENT","CONTEXTMENU_ITEMS_ADD_COMMENT","callback","disabled","getSelectedLast","selection","isSelectedByCorner","CONTEXTMENU_ITEMS_REMOVE_COMMENT","_this6","label","CONTEXTMENU_ITEMS_READ_ONLY_COMMENT","hasProperty","readOnlyProperty","commentSetting","displayDelay","destroy"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.weak-map\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.timers\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { addClass, closest, isChildOf, hasClass, offset, outerWidth, outerHeight } from './../../helpers/dom/element';\nimport { deepClone, deepExtend, isObject } from './../../helpers/object';\nimport EventManager from './../../eventManager';\nimport { CellCoords } from './../../3rdparty/walkontable/src';\nimport { registerPlugin } from './../../plugins';\nimport BasePlugin from './../_base';\nimport CommentEditor from './commentEditor';\nimport { checkSelectionConsistency, markLabelAsSelected } from './../contextMenu/utils';\nimport DisplaySwitch from './displaySwitch';\nimport * as C from './../../i18n/constants';\nvar privatePool = new WeakMap();\nvar META_COMMENT = 'comment';\nvar META_COMMENT_VALUE = 'value';\nvar META_STYLE = 'style';\nvar META_READONLY = 'readOnly';\n/**\n * @plugin Comments\n *\n * @description\n * This plugin allows setting and managing cell comments by either an option in the context menu or with the use of\n * the API.\n *\n * To enable the plugin, you'll need to set the comments property of the config object to `true`:\n * ```js\n * comments: true\n * ```\n *\n * or an object with extra predefined plugin config:\n *\n * ```js\n * comments: {\n *   displayDelay: 1000\n * }\n * ```\n *\n * To add comments at the table initialization, define the `comment` property in the `cell` config array as in an example below.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   date: getData(),\n *   comments: true,\n *   cell: [\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]\n * });\n *\n * // Access to the Comments plugin instance:\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n */\n\nvar Comments =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(Comments, _BasePlugin);\n\n  function Comments(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comments).call(this, hotInstance));\n    /**\n     * Instance of {@link CommentEditor}.\n     *\n     * @private\n     * @type {CommentEditor}\n     */\n\n    _this.editor = null;\n    /**\n     * Instance of {@link DisplaySwitch}.\n     *\n     * @private\n     * @type {DisplaySwitch}\n     */\n\n    _this.displaySwitch = null;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = null;\n    /**\n     * Current cell range, an object with `from` property, with `row` and `col` properties (e.q. `{from: {row: 1, col: 6}}`).\n     *\n     * @type {Object}\n     */\n\n    _this.range = {};\n    /**\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.mouseDown = false;\n    /**\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.contextMenuEvent = false;\n    /**\n     * @private\n     * @type {*}\n     */\n\n    _this.timer = null;\n    privatePool.set(_assertThisInitialized(_this), {\n      tempEditorDimensions: {},\n      cellBelowCursor: null\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link Comments#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Comments, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().comments;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (!this.editor) {\n        this.editor = new CommentEditor(this.hot.rootDocument);\n      }\n\n      if (!this.eventManager) {\n        this.eventManager = new EventManager(this);\n      }\n\n      if (!this.displaySwitch) {\n        this.displaySwitch = new DisplaySwitch(this.getDisplayDelaySetting());\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.addToContextMenu(options);\n      });\n      this.addHook('afterRenderer', function (TD, row, col, prop, value, cellProperties) {\n        return _this2.onAfterRenderer(TD, cellProperties);\n      });\n      this.addHook('afterScrollHorizontally', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterBeginEditing', function () {\n        return _this2.onAfterBeginEditing();\n      });\n      this.displaySwitch.addLocalHook('hide', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('show', function (row, col) {\n        return _this2.showAtCell(row, col);\n      });\n      this.registerListeners();\n\n      _get(_getPrototypeOf(Comments.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(Comments.prototype), \"updatePlugin\", this).call(this);\n\n      this.displaySwitch.updateDelay(this.getDisplayDelaySetting());\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(Comments.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Registers all necessary DOM listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      this.eventManager.addEventListener(rootDocument, 'mouseover', function (event) {\n        return _this3.onMouseOver(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mousedown', function (event) {\n        return _this3.onMouseDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'blur', function () {\n        return _this3.onEditorBlur();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mousedown', function (event) {\n        return _this3.onEditorMouseDown(event);\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mouseup', function (event) {\n        return _this3.onEditorMouseUp(event);\n      });\n    }\n    /**\n     * Sets the current cell range to be able to use general methods like {@link Comments#setComment}, {@link Comments#removeComment}, {@link Comments#show}.\n     *\n     * @param {Object} range Object with `from` property, each with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"setRange\",\n    value: function setRange(range) {\n      this.range = range;\n    }\n    /**\n     * Clears the currently selected cell.\n     */\n\n  }, {\n    key: \"clearRange\",\n    value: function clearRange() {\n      this.range = {};\n    }\n    /**\n     * Checks if the event target is a cell containing a comment.\n     *\n     * @private\n     * @param {Event} event DOM event\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"targetIsCellWithComment\",\n    value: function targetIsCellWithComment(event) {\n      var closestCell = closest(event.target, 'TD', 'TBODY');\n      return !!(closestCell && hasClass(closestCell, 'htCommentCell') && closest(closestCell, [this.hot.rootElement]));\n    }\n    /**\n     * Checks if the event target is a comment textarea.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"targetIsCommentTextArea\",\n    value: function targetIsCommentTextArea(event) {\n      return this.editor.getInputElement() === event.target;\n    }\n    /**\n     * Sets a comment for a cell according to the previously set range (see {@link Comments#setRange}).\n     *\n     * @param {String} value Comment contents.\n     */\n\n  }, {\n    key: \"setComment\",\n    value: function setComment(value) {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var editorValue = this.editor.getValue();\n      var comment = '';\n\n      if (value !== null && value !== void 0) {\n        comment = value;\n      } else if (editorValue !== null && editorValue !== void 0) {\n        comment = editorValue;\n      }\n\n      var row = this.range.from.row;\n      var col = this.range.from.col;\n      this.updateCommentMeta(row, col, _defineProperty({}, META_COMMENT_VALUE, comment));\n      this.hot.render();\n    }\n    /**\n     * Sets a comment for a specified cell.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} value Comment contents.\n     */\n\n  }, {\n    key: \"setCommentAtCell\",\n    value: function setCommentAtCell(row, column, value) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.setComment(value);\n    }\n    /**\n     * Removes a comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @param {Boolean} [forceRender=true] If set to `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeComment\",\n    value: function removeComment() {\n      var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      this.hot.setCellMeta(this.range.from.row, this.range.from.col, META_COMMENT, void 0);\n\n      if (forceRender) {\n        this.hot.render();\n      }\n\n      this.hide();\n    }\n    /**\n     * Removes a comment from a specified cell.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Boolean} [forceRender=true] If `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeCommentAtCell\",\n    value: function removeCommentAtCell(row, column) {\n      var forceRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.removeComment(forceRender);\n    }\n    /**\n     * Gets comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {String|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getComment\",\n    value: function getComment() {\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Gets comment from a cell at the provided coordinates.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @returns {String|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getCommentAtCell\",\n    value: function getCommentAtCell(row, column) {\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Shows the comment editor accordingly to the previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {Boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n      this.refreshEditor(true);\n      this.editor.setValue(meta[META_COMMENT] ? meta[META_COMMENT][META_COMMENT_VALUE] : null || '');\n\n      if (this.editor.hidden) {\n        this.editor.show();\n      }\n\n      return true;\n    }\n    /**\n     * Shows comment editor according to cell coordinates.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @returns {Boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"showAtCell\",\n    value: function showAtCell(row, column) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      return this.show();\n    }\n    /**\n     * Hides the comment editor.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (!this.editor.hidden) {\n        this.editor.hide();\n      }\n    }\n    /**\n     * Refreshes comment editor position and styling.\n     *\n     * @param {Boolean} [force=false] If `true` then recalculation will be forced.\n     */\n\n  }, {\n    key: \"refreshEditor\",\n    value: function refreshEditor() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!force && (!this.range.from || !this.editor.isVisible())) {\n        return;\n      }\n\n      var rootWindow = this.hot.rootWindow;\n      var _this$hot$view$wt = this.hot.view.wt,\n          wtTable = _this$hot$view$wt.wtTable,\n          wtOverlays = _this$hot$view$wt.wtOverlays,\n          wtViewport = _this$hot$view$wt.wtViewport;\n      var scrollableElement = wtOverlays.scrollableElement;\n      var TD = wtTable.getCell(this.range.from);\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      var cellOffset = offset(TD);\n      var lastColWidth = wtTable.getStretchedColumnWidth(column);\n      var cellTopOffset = cellOffset.top < 0 ? 0 : cellOffset.top;\n      var cellLeftOffset = cellOffset.left;\n\n      if (wtViewport.hasVerticalScroll() && scrollableElement !== rootWindow) {\n        cellTopOffset -= wtOverlays.topOverlay.getScrollPosition();\n      }\n\n      if (wtViewport.hasHorizontalScroll() && scrollableElement !== rootWindow) {\n        cellLeftOffset -= wtOverlays.leftOverlay.getScrollPosition();\n      }\n\n      var x = cellLeftOffset + lastColWidth;\n      var y = cellTopOffset;\n      var commentStyle = this.getCommentMeta(row, column, META_STYLE);\n      var readOnly = this.getCommentMeta(row, column, META_READONLY);\n\n      if (commentStyle) {\n        this.editor.setSize(commentStyle.width, commentStyle.height);\n      } else {\n        this.editor.resetSize();\n      }\n\n      this.editor.setReadOnlyState(readOnly);\n      this.editor.setPosition(x, y);\n    }\n    /**\n     * Checks if there is a comment for selected range.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"checkSelectionCommentsConsistency\",\n    value: function checkSelectionCommentsConsistency() {\n      var selected = this.hot.getSelectedRangeLast();\n\n      if (!selected) {\n        return false;\n      }\n\n      var hasComment = false;\n      var cell = selected.from; // IN EXCEL THERE IS COMMENT ONLY FOR TOP LEFT CELL IN SELECTION\n\n      if (this.getCommentMeta(cell.row, cell.col, META_COMMENT_VALUE)) {\n        hasComment = true;\n      }\n\n      return hasComment;\n    }\n    /**\n     * Sets or update the comment-related cell meta.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Object} metaObject Object defining all the comment-related meta information.\n     */\n\n  }, {\n    key: \"updateCommentMeta\",\n    value: function updateCommentMeta(row, column, metaObject) {\n      var oldComment = this.hot.getCellMeta(row, column)[META_COMMENT];\n      var newComment;\n\n      if (oldComment) {\n        newComment = deepClone(oldComment);\n        deepExtend(newComment, metaObject);\n      } else {\n        newComment = metaObject;\n      }\n\n      this.hot.setCellMeta(row, column, META_COMMENT, newComment);\n    }\n    /**\n     * Gets the comment related meta information.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} property Cell meta property.\n     * @returns {Mixed}\n     */\n\n  }, {\n    key: \"getCommentMeta\",\n    value: function getCommentMeta(row, column, property) {\n      var cellMeta = this.hot.getCellMeta(row, column);\n\n      if (!cellMeta[META_COMMENT]) {\n        return void 0;\n      }\n\n      return cellMeta[META_COMMENT][property];\n    }\n    /**\n     * `mousedown` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      this.mouseDown = true;\n\n      if (!this.hot.view || !this.hot.view.wt) {\n        return;\n      }\n\n      if (!this.contextMenuEvent && !this.targetIsCommentTextArea(event)) {\n        var eventCell = closest(event.target, 'TD', 'TBODY');\n        var coordinates = null;\n\n        if (eventCell) {\n          coordinates = this.hot.view.wt.wtTable.getCoords(eventCell);\n        }\n\n        if (!eventCell || this.range.from && coordinates && (this.range.from.row !== coordinates.row || this.range.from.col !== coordinates.col)) {\n          this.hide();\n        }\n      }\n\n      this.contextMenuEvent = false;\n    }\n    /**\n     * `mouseover` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseover` event.\n     */\n\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(event) {\n      var priv = privatePool.get(this);\n      var rootDocument = this.hot.rootDocument;\n      priv.cellBelowCursor = rootDocument.elementFromPoint(event.clientX, event.clientY);\n\n      if (this.mouseDown || this.editor.isFocused() || hasClass(event.target, 'wtBorder') || priv.cellBelowCursor !== event.target || !this.editor) {\n        return;\n      }\n\n      if (this.targetIsCellWithComment(event)) {\n        var coordinates = this.hot.view.wt.wtTable.getCoords(event.target);\n        var range = {\n          from: new CellCoords(coordinates.row, coordinates.col)\n        };\n        this.displaySwitch.show(range);\n      } else if (isChildOf(event.target, rootDocument) && !this.targetIsCommentTextArea(event)) {\n        this.displaySwitch.hide();\n      }\n    }\n    /**\n     * `mouseup` event callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.mouseDown = false;\n    }\n    /** *\n     * The `afterRenderer` hook callback..\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {Object} cellProperties The rendered cell's property object.\n     */\n\n  }, {\n    key: \"onAfterRenderer\",\n    value: function onAfterRenderer(TD, cellProperties) {\n      if (cellProperties[META_COMMENT] && cellProperties[META_COMMENT][META_COMMENT_VALUE]) {\n        addClass(TD, cellProperties.commentedCellClassName);\n      }\n    }\n    /**\n     * `blur` event callback for the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onEditorBlur\",\n    value: function onEditorBlur() {\n      this.setComment();\n    }\n    /**\n     * `mousedown` hook. Along with `onEditorMouseUp` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onEditorMouseDown\",\n    value: function onEditorMouseDown(event) {\n      var priv = privatePool.get(this);\n      priv.tempEditorDimensions = {\n        width: outerWidth(event.target),\n        height: outerHeight(event.target)\n      };\n    }\n    /**\n     * `mouseup` hook. Along with `onEditorMouseDown` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseup` event.\n     */\n\n  }, {\n    key: \"onEditorMouseUp\",\n    value: function onEditorMouseUp(event) {\n      var priv = privatePool.get(this);\n      var currentWidth = outerWidth(event.target);\n      var currentHeight = outerHeight(event.target);\n\n      if (currentWidth !== priv.tempEditorDimensions.width + 1 || currentHeight !== priv.tempEditorDimensions.height + 2) {\n        this.updateCommentMeta(this.range.from.row, this.range.from.col, _defineProperty({}, META_STYLE, {\n          width: currentWidth,\n          height: currentHeight\n        }));\n      }\n    }\n    /**\n     * Context Menu's \"Add comment\" callback. Results in showing the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuAddComment\",\n    value: function onContextMenuAddComment() {\n      var _this4 = this;\n\n      this.displaySwitch.cancelHiding();\n      var coords = this.hot.getSelectedRangeLast();\n      this.contextMenuEvent = true;\n      this.setRange({\n        from: coords.from\n      });\n      this.show();\n      setTimeout(function () {\n        if (_this4.hot) {\n          _this4.hot.deselectCell();\n\n          _this4.editor.focus();\n        }\n      }, 10);\n    }\n    /**\n     * Context Menu's \"remove comment\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuRemoveComment\",\n    value: function onContextMenuRemoveComment() {\n      var _this$hot$getSelected = this.hot.getSelectedRangeLast(),\n          from = _this$hot$getSelected.from,\n          to = _this$hot$getSelected.to;\n\n      this.contextMenuEvent = true;\n\n      for (var i = from.row; i <= to.row; i++) {\n        for (var j = from.col; j <= to.col; j++) {\n          this.removeCommentAtCell(i, j, false);\n        }\n      }\n\n      this.hot.render();\n    }\n    /**\n     * Context Menu's \"make comment read-only\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuMakeReadOnly\",\n    value: function onContextMenuMakeReadOnly() {\n      var _this$hot$getSelected2 = this.hot.getSelectedRangeLast(),\n          from = _this$hot$getSelected2.from,\n          to = _this$hot$getSelected2.to;\n\n      this.contextMenuEvent = true;\n\n      for (var i = from.row; i <= to.row; i++) {\n        for (var j = from.col; j <= to.col; j++) {\n          var currentState = !!this.getCommentMeta(i, j, META_READONLY);\n          this.updateCommentMeta(i, j, _defineProperty({}, META_READONLY, !currentState));\n        }\n      }\n    }\n    /**\n     * Add Comments plugin options to the Context Menu.\n     *\n     * @private\n     * @param {Object} defaultOptions\n     */\n\n  }, {\n    key: \"addToContextMenu\",\n    value: function addToContextMenu(defaultOptions) {\n      var _this5 = this;\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'commentsAddEdit',\n        name: function name() {\n          if (_this5.checkSelectionCommentsConsistency()) {\n            return _this5.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_EDIT_COMMENT);\n          }\n\n          return _this5.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ADD_COMMENT);\n        },\n        callback: function callback() {\n          return _this5.onContextMenuAddComment();\n        },\n        disabled: function disabled() {\n          return !(this.getSelectedLast() && !this.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsRemove',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COMMENT);\n        },\n        callback: function callback() {\n          return _this5.onContextMenuRemoveComment();\n        },\n        disabled: function disabled() {\n          return _this5.hot.selection.isSelectedByCorner();\n        }\n      }, {\n        key: 'commentsReadOnly',\n        name: function name() {\n          var _this6 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n          var hasProperty = checkSelectionConsistency(this.getSelectedRangeLast(), function (row, col) {\n            var readOnlyProperty = _this6.getCellMeta(row, col)[META_COMMENT];\n\n            if (readOnlyProperty) {\n              readOnlyProperty = readOnlyProperty[META_READONLY];\n            }\n\n            if (readOnlyProperty) {\n              return true;\n            }\n          });\n\n          if (hasProperty) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          return _this5.onContextMenuMakeReadOnly();\n        },\n        disabled: function disabled() {\n          return _this5.hot.selection.isSelectedByCorner() || !_this5.checkSelectionCommentsConsistency();\n        }\n      });\n    }\n    /**\n     * Get `displayDelay` setting of comment plugin.\n     *\n     * @private\n     * @returns {Number|undefined}\n     */\n\n  }, {\n    key: \"getDisplayDelaySetting\",\n    value: function getDisplayDelaySetting() {\n      var commentSetting = this.hot.getSettings().comments;\n\n      if (isObject(commentSetting)) {\n        return commentSetting.displayDelay;\n      }\n\n      return void 0;\n    }\n    /**\n     * `afterBeginEditing` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterBeginEditing\",\n    value: function onAfterBeginEditing() {\n      this.hide();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editor) {\n        this.editor.destroy();\n      }\n\n      if (this.displaySwitch) {\n        this.displaySwitch.destroy();\n      }\n\n      _get(_getPrototypeOf(Comments.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return Comments;\n}(BasePlugin);\n\nregisterPlugin('comments', Comments);\nexport default Comments;"]},"metadata":{},"sourceType":"module"}