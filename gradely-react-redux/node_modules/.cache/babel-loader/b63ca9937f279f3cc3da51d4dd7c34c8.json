{"ast":null,"code":"import \"core-js/modules/es.string.replace\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { requestAnimationFrame, cancelAnimationFrame } from './../helpers/feature';\n/**\n * @class Interval\n * @util\n */\n\nvar Interval = /*#__PURE__*/function () {\n  _createClass(Interval, null, [{\n    key: \"create\",\n    value: function create(func, delay) {\n      return new Interval(func, delay);\n    }\n  }]);\n\n  function Interval(func, delay) {\n    var _this = this;\n\n    _classCallCheck(this, Interval);\n    /**\n     * Animation frame request id.\n     *\n     * @type {Number}\n     */\n\n\n    this.timer = null;\n    /**\n     * Function to invoke repeatedly.\n     *\n     * @type {Function}\n     */\n\n    this.func = func;\n    /**\n     * Number of milliseconds that function should wait before next call.\n     */\n\n    this.delay = parseDelay(delay);\n    /**\n     * Flag which indicates if interval object was stopped.\n     *\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.stopped = true;\n    /**\n     * Interval time (in milliseconds) of the last callback call.\n     *\n     * @private\n     * @type {Number}\n     */\n\n    this._then = null;\n    /**\n     * Bounded function `func`.\n     *\n     * @private\n     * @type {Function}\n     */\n\n    this._callback = function () {\n      return _this.__callback();\n    };\n  }\n  /**\n   * Start loop.\n   *\n   * @returns {Interval}\n   */\n\n\n  _createClass(Interval, [{\n    key: \"start\",\n    value: function start() {\n      if (this.stopped) {\n        this._then = Date.now();\n        this.stopped = false;\n        this.timer = requestAnimationFrame(this._callback);\n      }\n\n      return this;\n    }\n    /**\n     * Stop looping.\n     *\n     * @returns {Interval}\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!this.stopped) {\n        this.stopped = true;\n        cancelAnimationFrame(this.timer);\n        this.timer = null;\n      }\n\n      return this;\n    }\n    /**\n     * Loop callback, fired on every animation frame.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"__callback\",\n    value: function __callback() {\n      this.timer = requestAnimationFrame(this._callback);\n\n      if (this.delay) {\n        var now = Date.now();\n        var elapsed = now - this._then;\n\n        if (elapsed > this.delay) {\n          this._then = now - elapsed % this.delay;\n          this.func();\n        }\n      } else {\n        this.func();\n      }\n    }\n  }]);\n\n  return Interval;\n}();\n\nexport default Interval;\n/**\n * Convert delay from string format to milliseconds.\n *\n * @param {Number|String} delay\n * @returns {Number}\n */\n\nexport function parseDelay(delay) {\n  var result = delay;\n\n  if (typeof result === 'string' && /fps$/.test(result)) {\n    result = 1000 / parseInt(result.replace('fps', '') || 0, 10);\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/utils/interval.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","requestAnimationFrame","cancelAnimationFrame","Interval","value","create","func","delay","_this","timer","parseDelay","stopped","_then","_callback","__callback","start","Date","now","stop","elapsed","result","test","parseInt","replace"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.replace\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { requestAnimationFrame, cancelAnimationFrame } from './../helpers/feature';\n/**\n * @class Interval\n * @util\n */\n\nvar Interval =\n/*#__PURE__*/\nfunction () {\n  _createClass(Interval, null, [{\n    key: \"create\",\n    value: function create(func, delay) {\n      return new Interval(func, delay);\n    }\n  }]);\n\n  function Interval(func, delay) {\n    var _this = this;\n\n    _classCallCheck(this, Interval);\n\n    /**\n     * Animation frame request id.\n     *\n     * @type {Number}\n     */\n    this.timer = null;\n    /**\n     * Function to invoke repeatedly.\n     *\n     * @type {Function}\n     */\n\n    this.func = func;\n    /**\n     * Number of milliseconds that function should wait before next call.\n     */\n\n    this.delay = parseDelay(delay);\n    /**\n     * Flag which indicates if interval object was stopped.\n     *\n     * @type {Boolean}\n     * @default true\n     */\n\n    this.stopped = true;\n    /**\n     * Interval time (in milliseconds) of the last callback call.\n     *\n     * @private\n     * @type {Number}\n     */\n\n    this._then = null;\n    /**\n     * Bounded function `func`.\n     *\n     * @private\n     * @type {Function}\n     */\n\n    this._callback = function () {\n      return _this.__callback();\n    };\n  }\n  /**\n   * Start loop.\n   *\n   * @returns {Interval}\n   */\n\n\n  _createClass(Interval, [{\n    key: \"start\",\n    value: function start() {\n      if (this.stopped) {\n        this._then = Date.now();\n        this.stopped = false;\n        this.timer = requestAnimationFrame(this._callback);\n      }\n\n      return this;\n    }\n    /**\n     * Stop looping.\n     *\n     * @returns {Interval}\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!this.stopped) {\n        this.stopped = true;\n        cancelAnimationFrame(this.timer);\n        this.timer = null;\n      }\n\n      return this;\n    }\n    /**\n     * Loop callback, fired on every animation frame.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"__callback\",\n    value: function __callback() {\n      this.timer = requestAnimationFrame(this._callback);\n\n      if (this.delay) {\n        var now = Date.now();\n        var elapsed = now - this._then;\n\n        if (elapsed > this.delay) {\n          this._then = now - elapsed % this.delay;\n          this.func();\n        }\n      } else {\n        this.func();\n      }\n    }\n  }]);\n\n  return Interval;\n}();\n\nexport default Interval;\n/**\n * Convert delay from string format to milliseconds.\n *\n * @param {Number|String} delay\n * @returns {Number}\n */\n\nexport function parseDelay(delay) {\n  var result = delay;\n\n  if (typeof result === 'string' && /fps$/.test(result)) {\n    result = 1000 / parseInt(result.replace('fps', '') || 0, 10);\n  }\n\n  return result;\n}"]},"metadata":{},"sourceType":"module"}