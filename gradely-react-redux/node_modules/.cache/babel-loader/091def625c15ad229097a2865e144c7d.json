{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport React, { Component } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport 'handsontable/dist/handsontable.full.css';\nimport { connect } from 'react-redux';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.data = [[], [], []];\n    this.state = {};\n  }\n\n  componentDidUpdate() {}\n\n  colHeaders(index) {\n    return index + ': ID';\n  }\n\n  render() {\n    let data = [];\n    let columnAssignmentLabel = [];\n    let setUpData = [];\n    let colHeaders = [];\n    let rowHeaders = [];\n    let rowStudentLabel = [];\n\n    if (this.props.editCourse && this.props.editCourse.assignments) {\n      setUpData = this.props.editCourse.assignments.map(assignment => {\n        return [assignment.id, null];\n      });\n      colHeaders = this.props.editCourse.assignments.map(assignment => {\n        columnAssignmentLabel.push({\n          assignment: assignment\n        });\n        return assignment.name + \" (\" + assignment.totalPoints + \")\";\n      });\n      rowHeaders = this.props.editCourse.students.map(student => {\n        rowStudentLabel.push({\n          student: student\n        });\n        const firstName = student.user && student.user.firstName;\n        const lastName = student.user && student.user.lastName;\n        return firstName + \" \" + lastName;\n      });\n      rowStudentLabel.forEach(student => {\n        //columnAssignmentLabel acts as index\n        const studentScores = this.props.editCourse.assignments.map(assignment => {\n          return student.student && student.student.assignmentScores && student.student.assignmentScores.filter(score => {\n            console.log(score);\n            return [assignment.id, score.points];\n          });\n        });\n        const tempScores = new Map(studentScores);\n        const finalScores = Object.fromEntries(tempScores);\n        data.push(finalScores);\n      });\n    }\n\n    const tempDataSchema = new Map(setUpData);\n    const dataSchema = Object.fromEntries(tempDataSchema);\n    console.log(data);\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      data: data,\n      dataSchema: dataSchema,\n      colHeaders: colHeaders,\n      rowHeaders: rowHeaders,\n      rowHeaderWidth: 150,\n      columns: columnAssignmentLabel,\n      //row: rowStudentLabel,\n      // width: \"600\", \n      // height: \"300\",\n      headerTooltips: {\n        rows: true,\n        columns: true,\n        onlyTrimmed: false\n      }\n    };\n    console.log(data);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hot-app\",\n      className: \"table table-hover table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HotTable, {\n      id: \"example1\",\n      className: \"my-3\",\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  grid: state.temp.grid\n});\n\nexport default connect(mapStateToProps, {})(Table);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/Table.js"],"names":["React","Component","HotTable","connect","Table","constructor","data","state","componentDidUpdate","colHeaders","index","render","columnAssignmentLabel","setUpData","rowHeaders","rowStudentLabel","props","editCourse","assignments","map","assignment","id","push","name","totalPoints","students","student","firstName","user","lastName","forEach","studentScores","assignmentScores","filter","score","console","log","points","tempScores","Map","finalScores","Object","fromEntries","tempDataSchema","dataSchema","settings","licenseKey","rowHeaderWidth","columns","headerTooltips","rows","onlyTrimmed","mapStateToProps","temp","grid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { HotTable } from '@handsontable/react'\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport 'handsontable/dist/handsontable.full.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Table extends Component {\r\n    constructor() {\r\n        super()\r\n        this.data = [\r\n            [], [], []\r\n        ]\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    colHeaders(index) {\r\n        return index + ': ID'\r\n    }\r\n\r\n    render() {\r\n        let data = []\r\n        let columnAssignmentLabel = []\r\n        let setUpData = []\r\n        let colHeaders = []\r\n        let rowHeaders = []\r\n        let rowStudentLabel = []\r\n\r\n        if (this.props.editCourse && this.props.editCourse.assignments) {\r\n\r\n            setUpData = this.props.editCourse.assignments.map(assignment => {\r\n                return [assignment.id, null]\r\n            })\r\n\r\n            colHeaders = this.props.editCourse.assignments.map(assignment => {\r\n                columnAssignmentLabel.push({ assignment: assignment })\r\n                return assignment.name + \" (\" + assignment.totalPoints + \")\"\r\n            })\r\n\r\n            rowHeaders = this.props.editCourse.students.map(student => {\r\n                rowStudentLabel.push({ student: student })\r\n                const firstName = student.user && student.user.firstName\r\n                const lastName = student.user && student.user.lastName\r\n                return firstName + \" \" + lastName\r\n            })\r\n\r\n            rowStudentLabel.forEach(student => {\r\n\r\n                //columnAssignmentLabel acts as index\r\n                const studentScores = this.props.editCourse.assignments.map(assignment => {\r\n                    return student.student && student.student.assignmentScores && student.student.assignmentScores.filter(score => {\r\n                        console.log(score)\r\n                        return [assignment.id, score.points]\r\n                    })\r\n\r\n                })\r\n\r\n                const tempScores = new Map(studentScores)\r\n                const finalScores = Object.fromEntries(tempScores)\r\n\r\n                data.push(finalScores)\r\n            });\r\n        }\r\n\r\n        const tempDataSchema = new Map(setUpData)\r\n        const dataSchema = Object.fromEntries(tempDataSchema);\r\n        console.log(data)\r\n\r\n        const settings = {\r\n            licenseKey: 'non-commercial-and-evaluation',\r\n            data: data,\r\n            dataSchema: dataSchema,\r\n            colHeaders: colHeaders,\r\n            rowHeaders: rowHeaders,\r\n            rowHeaderWidth: 150,\r\n            columns: columnAssignmentLabel,\r\n            //row: rowStudentLabel,\r\n            // width: \"600\", \r\n            // height: \"300\",\r\n            headerTooltips: {\r\n                rows: true,\r\n                columns: true,\r\n                onlyTrimmed: false\r\n            }\r\n        }\r\n        console.log(data)\r\n        return (\r\n            <div id=\"hot-app\" className=\"table table-hover table-sm\">\r\n                <HotTable id=\"example1\" className=\"my-3\" settings={settings} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    editCourse: state.temp.editCourse,\r\n    grid: state.temp.grid,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Table)"]},"metadata":{},"sourceType":"module"}