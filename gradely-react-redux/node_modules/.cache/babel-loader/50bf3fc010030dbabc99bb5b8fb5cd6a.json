{"ast":null,"code":"import axios from 'axios';\nimport { GET_ALL_COURSES, ADD_COURSE, GET_COURSE, GET_ALL_COURSES_NEW_ASSIGNMENT, HOLD_EDIT_COURSE, HOLD_REMOVE_ASSIGNMENT, HOLD_UPDATE_ASSIGNMENT, UPDATE_STUDENT_SCORE } from './types';\nimport { getAdminUser } from './adminActions';\nexport const getAllCourses = () => dispatch => {\n  axios.get(\"http://localhost:8080/course/all\").then(response => {\n    dispatch({\n      type: GET_ALL_COURSES,\n      payload: response.data\n    });\n  });\n};\nexport const getAllTeacherCourses = id => dispatch => {\n  console.log(\"GET TEACHER COURSES\");\n  axios.get(\"http://localhost:8080/course/scores/all/\" + id).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: GET_ALL_COURSES,\n      payload: response.data\n    });\n  });\n};\nexport const addCourse = course => dispatch => {\n  axios.post(\"http://localhost:8080/course/new\", course).then(response => {\n    dispatch({\n      type: GET_ALL_COURSES,\n      payload: response.data\n    });\n  });\n};\nexport const deleteCourse = courseId => dispatch => {\n  axios.get(\"http://localhost:8080/course/delete/\" + courseId).then(response => {\n    dispatch({\n      type: GET_ALL_COURSES,\n      payload: response.data\n    });\n  });\n};\nexport const updateAssignment = assignment => dispatch => {\n  axios.post(\"http://localhost:8080/course/assignment/update\", assignment).then(response => {\n    dispatch({\n      type: HOLD_UPDATE_ASSIGNMENT,\n      payload: assignment\n    });\n  });\n};\nexport const addAssignment = assignment => dispatch => {\n  axios.post(\"http://localhost:8080/course/assignment/new/\", assignment).then(response => {\n    dispatch({\n      type: HOLD_EDIT_COURSE,\n      payload: response.data\n    });\n  });\n};\nexport const deleteAssignment = assignmentId => dispatch => {\n  axios.get(\"http://localhost:8080/course/assignment/delete/\" + assignmentId).then(response => {\n    dispatch({\n      type: HOLD_REMOVE_ASSIGNMENT,\n      payload: assignmentId\n    });\n  });\n};\nexport const editCourseDetails = course => dispatch => {\n  axios.post(\"http://localhost:8080/course/update\", course).then(response => {\n    dispatch({\n      type: GET_ALL_COURSES,\n      payload: response.data\n    });\n  });\n};\nexport const addStudentToCourse = course => dispatch => {\n  console.log(\"COURSE ACTION\");\n  axios.post(\"http://localhost:8080/course/student/add/\", course).then(response => {\n    console.log(response.data);\n    dispatch({\n      type: GET_COURSE,\n      payload: response.data\n    });\n  });\n};\nexport const saveNewStudentScore = score => dispatch => {\n  axios.post(\"http://localhost:8080/student/new/score\", score).then(response => {\n    dispatch({\n      type: UPDATE_STUDENT_SCORE,\n      payload: score\n    });\n  });\n};\nexport const saveStudentScore = score => dispatch => {\n  axios.post(\"http://localhost:8080/student/update/score\", score).then(response => {\n    dispatch({\n      type: UPDATE_STUDENT_SCORE,\n      payload: score\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/action/courseActions.js"],"names":["axios","GET_ALL_COURSES","ADD_COURSE","GET_COURSE","GET_ALL_COURSES_NEW_ASSIGNMENT","HOLD_EDIT_COURSE","HOLD_REMOVE_ASSIGNMENT","HOLD_UPDATE_ASSIGNMENT","UPDATE_STUDENT_SCORE","getAdminUser","getAllCourses","dispatch","get","then","response","type","payload","data","getAllTeacherCourses","id","console","log","addCourse","course","post","deleteCourse","courseId","updateAssignment","assignment","addAssignment","deleteAssignment","assignmentId","editCourseDetails","addStudentToCourse","saveNewStudentScore","score","saveStudentScore"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { GET_ALL_COURSES, ADD_COURSE, GET_COURSE, GET_ALL_COURSES_NEW_ASSIGNMENT, HOLD_EDIT_COURSE, HOLD_REMOVE_ASSIGNMENT, HOLD_UPDATE_ASSIGNMENT, UPDATE_STUDENT_SCORE } from './types';\r\nimport { getAdminUser } from './adminActions';\r\n\r\nexport const getAllCourses =()=> dispatch => {\r\n    axios.get(\"http://localhost:8080/course/all\")\r\n    .then(response => {\r\n        dispatch({\r\n            type: GET_ALL_COURSES,\r\n            payload: response.data\r\n        })\r\n    })\r\n}\r\n\r\nexport const getAllTeacherCourses =(id)=> dispatch => {\r\n    console.log(\"GET TEACHER COURSES\")\r\n    axios.get(\"http://localhost:8080/course/scores/all/\" + id)\r\n    .then(response => {\r\n        console.log(response.data)\r\n        dispatch({\r\n            type: GET_ALL_COURSES,\r\n            payload: response.data\r\n        })\r\n    })\r\n}\r\n\r\nexport const addCourse =(course)=> dispatch => {\r\n    axios.post(\"http://localhost:8080/course/new\", course)\r\n    .then(response => {\r\n        dispatch({\r\n            type: GET_ALL_COURSES,\r\n            payload: response.data\r\n        })\r\n    })\r\n}\r\n\r\nexport const deleteCourse = (courseId) => dispatch => {\r\n    axios.get(\"http://localhost:8080/course/delete/\" + courseId)\r\n    .then(response => {\r\n        dispatch({\r\n            type: GET_ALL_COURSES,\r\n            payload: response.data\r\n        })\r\n    })\r\n}\r\n\r\nexport const updateAssignment = (assignment) => dispatch => {\r\n    axios.post(\"http://localhost:8080/course/assignment/update\", assignment)\r\n    .then(response => {\r\n        dispatch({\r\n            type: HOLD_UPDATE_ASSIGNMENT,\r\n            payload: assignment\r\n        })\r\n    })\r\n}\r\n\r\nexport const addAssignment = (assignment) => dispatch => {\r\n    axios.post(\"http://localhost:8080/course/assignment/new/\", assignment)\r\n    .then(response => {\r\n        dispatch({\r\n            type: HOLD_EDIT_COURSE,\r\n            payload: response.data\r\n        })\r\n    })\r\n}\r\n\r\nexport const deleteAssignment = (assignmentId) => dispatch => {\r\n    axios.get(\"http://localhost:8080/course/assignment/delete/\" + assignmentId)\r\n    .then(response => {\r\n        dispatch({\r\n            type: HOLD_REMOVE_ASSIGNMENT,\r\n            payload: assignmentId\r\n        })\r\n    })\r\n}\r\n\r\nexport const editCourseDetails = (course) => dispatch => {\r\n    axios.post(\"http://localhost:8080/course/update\", course)\r\n    .then(response => {\r\n        dispatch({\r\n            type: GET_ALL_COURSES,\r\n            payload: response.data\r\n        })\r\n    })\r\n}\r\n\r\nexport const addStudentToCourse = (course) => dispatch => {\r\n    console.log(\"COURSE ACTION\")\r\n    axios.post(\"http://localhost:8080/course/student/add/\", course)\r\n    .then(response => {\r\n        console.log(response.data)\r\n        dispatch({\r\n            type: GET_COURSE,\r\n            payload: response.data\r\n        })\r\n    })\r\n}\r\n\r\nexport const saveNewStudentScore = (score) => dispatch => {\r\n    axios.post(\"http://localhost:8080/student/new/score\", score)\r\n    .then(response => {\r\n        dispatch({\r\n            type: UPDATE_STUDENT_SCORE,\r\n            payload: score\r\n        })\r\n    })\r\n}\r\n\r\nexport const saveStudentScore = (score) => dispatch => {\r\n    axios.post(\"http://localhost:8080/student/update/score\", score)\r\n    .then(response => {\r\n        dispatch({\r\n            type: UPDATE_STUDENT_SCORE,\r\n            payload: score\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}