{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport BasePlugin from '../_base';\nimport { addClass } from '../../helpers/dom/element';\nimport { rangeEach } from '../../helpers/number';\nimport { arrayEach } from '../../helpers/array';\nimport { registerPlugin } from '../../plugins';\nimport { SEPARATOR } from '../contextMenu/predefinedItems';\nimport Hooks from '../../pluginHooks';\nimport hideColumnItem from './contextMenuItem/hideColumn';\nimport showColumnItem from './contextMenuItem/showColumn';\nHooks.getSingleton().register('beforeHideColumns');\nHooks.getSingleton().register('afterHideColumns');\nHooks.getSingleton().register('beforeUnhideColumns');\nHooks.getSingleton().register('afterUnhideColumns');\n/**\n * @plugin HiddenColumns\n *\n * @description\n * Plugin allows to hide certain columns. The hiding is achieved by rendering the columns with width set as 0px.\n * The plugin not modifies the source data and do not participate in data transformation (the shape of data returned\n * by `getData*` methods stays intact).\n *\n * Possible plugin settings:\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\n *  * `columns` as `Array`\n *  * `indicators` as `Boolean` (default `false`)\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   date: getData(),\n *   hiddenColumns: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     columns: [1, 2, 5]\n *   }\n * });\n *\n * // access to hiddenColumns plugin instance:\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\n *\n * // show single row\n * hiddenColumnsPlugin.showColumn(1);\n *\n * // show multiple columns\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\n *\n * // or as an array\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\n *\n * // hide single row\n * hiddenColumnsPlugin.hideColumn(1);\n *\n * // hide multiple columns\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\n *\n * // or as an array\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\n *\n * // rerender the table to see all changes\n * hot.render();\n * ```\n */\n\nvar HiddenColumns = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(HiddenColumns, _BasePlugin);\n\n  function HiddenColumns(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, HiddenColumns);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HiddenColumns).call(this, hotInstance));\n    /**\n     * Cached plugin settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.settings = {};\n    /**\n     * List of currently hidden columns\n     *\n     * @private\n     * @type {Number[]}\n     */\n\n    _this.hiddenColumns = [];\n    /**\n     * Last selected column index.\n     *\n     * @private\n     * @type {Number}\n     * @default -1\n     */\n\n    _this.lastSelectedColumn = -1;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link HiddenColumns#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(HiddenColumns, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().hiddenColumns;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (this.hot.hasColHeaders()) {\n        this.addHook('afterGetColHeader', function (col, TH) {\n          return _this2.onAfterGetColHeader(col, TH);\n        });\n      } else {\n        this.addHook('afterRenderer', function (TD, row, col) {\n          return _this2.onAfterGetColHeader(col, TD);\n        });\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyColWidth', function (width, col) {\n        return _this2.onModifyColWidth(width, col);\n      });\n      this.addHook('beforeSetRangeStartOnly', function (coords) {\n        return _this2.onBeforeSetRangeStart(coords);\n      });\n      this.addHook('beforeSetRangeEnd', function (coords) {\n        return _this2.onBeforeSetRangeEnd(coords);\n      });\n      this.addHook('hiddenColumn', function (column) {\n        return _this2.isHidden(column);\n      });\n      this.addHook('beforeStretchingColumnWidth', function (width, column) {\n        return _this2.onBeforeStretchingColumnWidth(width, column);\n      });\n      this.addHook('afterCreateCol', function (index, amount) {\n        return _this2.onAfterCreateCol(index, amount);\n      });\n      this.addHook('afterRemoveCol', function (index, amount) {\n        return _this2.onAfterRemoveCol(index, amount);\n      });\n      this.addHook('init', function () {\n        return _this2.onInit();\n      }); // Dirty workaround - the section below runs only if the HOT instance is already prepared.\n\n      if (this.hot.view) {\n        this.onInit();\n      }\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.settings = {};\n      this.hiddenColumns = [];\n      this.lastSelectedColumn = -1;\n      this.hot.render();\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"disablePlugin\", this).call(this);\n\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the provided columns.\n     *\n     * @param {Number[]} columns Array of column indexes.\n     */\n\n  }, {\n    key: \"showColumns\",\n    value: function showColumns(columns) {\n      var currentHideConfig = this.hiddenColumns;\n      var validColumns = this.isColumnDataValid(columns);\n      var destinationHideConfig = currentHideConfig;\n\n      if (validColumns) {\n        destinationHideConfig = this.hiddenColumns.filter(function (hiddenColumn) {\n          return columns.includes(hiddenColumn) === false;\n        });\n      }\n\n      var continueHiding = this.hot.runHooks('beforeUnhideColumns', currentHideConfig, destinationHideConfig, validColumns);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validColumns) {\n        this.hiddenColumns = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterUnhideColumns', currentHideConfig, destinationHideConfig, validColumns, validColumns && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows a single column.\n     *\n     * @param {...Number} column Visual column index.\n     */\n\n  }, {\n    key: \"showColumn\",\n    value: function showColumn() {\n      for (var _len = arguments.length, column = new Array(_len), _key = 0; _key < _len; _key++) {\n        column[_key] = arguments[_key];\n      }\n\n      this.showColumns(column);\n    }\n    /**\n     * Hides the columns provided in the array.\n     *\n     * @param {Number[]} columns Array of visual column indexes.\n     */\n\n  }, {\n    key: \"hideColumns\",\n    value: function hideColumns(columns) {\n      var currentHideConfig = this.hiddenColumns;\n      var validColumns = this.isColumnDataValid(columns);\n      var destinationHideConfig = currentHideConfig;\n\n      if (validColumns) {\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(columns)));\n      }\n\n      var continueHiding = this.hot.runHooks('beforeHideColumns', currentHideConfig, destinationHideConfig, validColumns);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validColumns) {\n        this.hiddenColumns = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterHideColumns', currentHideConfig, destinationHideConfig, validColumns, validColumns && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides a single column.\n     *\n     * @param {...Number} column Visual column index.\n     */\n\n  }, {\n    key: \"hideColumn\",\n    value: function hideColumn() {\n      for (var _len2 = arguments.length, column = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        column[_key2] = arguments[_key2];\n      }\n\n      this.hideColumns(column);\n    }\n    /**\n     * Checks if the provided column is hidden.\n     *\n     * @param {Number} column Column index.\n     * @param {Boolean} isPhysicalIndex flag which determines type of index.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(column) {\n      var isPhysicalIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var physicalColumn = column;\n\n      if (!isPhysicalIndex) {\n        physicalColumn = this.hot.toPhysicalColumn(column);\n      }\n\n      return this.hiddenColumns.includes(physicalColumn);\n    }\n    /**\n     * Check whether all of the provided column indexes are within the bounds of the table.\n     *\n     * @param {Array} columns Array of column indexes.\n     */\n\n  }, {\n    key: \"isColumnDataValid\",\n    value: function isColumnDataValid(columns) {\n      var _this3 = this;\n\n      return columns.every(function (column) {\n        return Number.isInteger(column) && column >= 0 && column < _this3.hot.countCols();\n      });\n    }\n    /**\n     * Reset all rendered cells meta.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipColumnOnPaste = false;\n\n          if (meta.baseRenderer !== null) {\n            meta.renderer = meta.baseRenderer;\n            meta.baseRenderer = null;\n          }\n        }\n      });\n    }\n    /**\n     * Sets width hidden columns on 0\n     *\n     * @private\n     * @param {Number} width Column width.\n     * @param {Number} column Column index.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onBeforeStretchingColumnWidth\",\n    value: function onBeforeStretchingColumnWidth(width, column) {\n      var stretchedWidth = width;\n\n      if (this.isHidden(column)) {\n        stretchedWidth = 0;\n      }\n\n      return stretchedWidth;\n    }\n    /**\n     * Adds the additional column width for the hidden column indicators.\n     *\n     * @private\n     * @param {Number} width\n     * @param {Number} col\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onModifyColWidth\",\n    value: function onModifyColWidth(width, col) {\n      if (this.isHidden(col)) {\n        return 0.1;\n      } else if (this.settings.indicators && (this.isHidden(col + 1) || this.isHidden(col - 1))) {\n        // add additional space for hidden column indicator\n        return width + (this.hot.hasColHeaders() ? 15 : 0);\n      }\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {Number} row\n     * @param {Number} col\n     * @param {Object} cellProperties\n     *\n     * @fires Hooks#unmodifyCol\n     */\n\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, col, cellProperties) {\n      var colIndex = this.hot.runHooks('unmodifyCol', col);\n\n      if (this.settings.copyPasteEnabled === false && this.isHidden(col)) {\n        cellProperties.skipColumnOnPaste = true;\n      }\n\n      if (this.isHidden(colIndex)) {\n        if (cellProperties.renderer !== hiddenRenderer) {\n          cellProperties.baseRenderer = cellProperties.renderer;\n        }\n\n        cellProperties.renderer = hiddenRenderer;\n      } else if (cellProperties.baseRenderer !== null) {\n        // We must pass undefined value too (for the purposes of inheritance cell/column settings).\n        cellProperties.renderer = cellProperties.baseRenderer;\n        cellProperties.baseRenderer = null;\n      }\n\n      if (this.isHidden(cellProperties.visualCol - 1)) {\n        var firstSectionHidden = true;\n        var i = cellProperties.visualCol - 1;\n        cellProperties.className = cellProperties.className || '';\n\n        if (cellProperties.className.indexOf('afterHiddenColumn') === -1) {\n          cellProperties.className += ' afterHiddenColumn';\n        }\n\n        do {\n          if (!this.isHidden(i)) {\n            firstSectionHidden = false;\n            break;\n          }\n\n          i -= 1;\n        } while (i >= 0);\n\n        if (firstSectionHidden && cellProperties.className.indexOf('firstVisibleColumn') === -1) {\n          cellProperties.className += ' firstVisibleColumn';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n\n        if (classArr.length) {\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenColumn');\n\n          if (containAfterHiddenColumn > -1) {\n            classArr.splice(containAfterHiddenColumn, 1);\n          }\n\n          var containFirstVisible = classArr.indexOf('firstVisibleColumn');\n\n          if (containFirstVisible > -1) {\n            classArr.splice(containFirstVisible, 1);\n          }\n\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @private\n     * @param {Array} ranges\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this4 = this;\n\n      var newRanges = [];\n\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startCol, range.endCol, function (col) {\n          if (_this4.isHidden(col)) {\n            if (!isHidden) {\n              pushRange(range.startRow, range.endRow, rangeStart, col - 1);\n            }\n\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = col;\n            }\n\n            if (col === range.endCol) {\n              pushRange(range.startRow, range.endRow, rangeStart, col);\n            }\n\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {Number} column\n     * @param {HTMLElement} TH\n     */\n\n  }, {\n    key: \"onAfterGetColHeader\",\n    value: function onAfterGetColHeader(column, TH) {\n      if (this.isHidden(column)) {\n        return;\n      }\n\n      var firstSectionHidden = true;\n      var i = column - 1;\n\n      do {\n        if (!this.isHidden(i)) {\n          firstSectionHidden = false;\n          break;\n        }\n\n        i -= 1;\n      } while (i >= 0);\n\n      if (firstSectionHidden) {\n        addClass(TH, 'firstVisibleColumn');\n      }\n\n      if (!this.settings.indicators) {\n        return;\n      }\n\n      if (this.isHidden(column - 1)) {\n        addClass(TH, 'afterHiddenColumn');\n      }\n\n      if (this.isHidden(column + 1) && column > -1) {\n        addClass(TH, 'beforeHiddenColumn');\n      }\n    }\n    /**\n     * On before set range start listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeStart\",\n    value: function onBeforeSetRangeStart(coords) {\n      var _this5 = this;\n\n      if (coords.col > 0) {\n        return;\n      }\n\n      coords.col = 0;\n\n      var getNextColumn = function getNextColumn(col) {\n        var visualColumn = col;\n\n        var physicalColumn = _this5.hot.toPhysicalColumn(visualColumn);\n\n        if (_this5.isHidden(physicalColumn, true)) {\n          visualColumn += 1;\n          visualColumn = getNextColumn(visualColumn);\n        }\n\n        return visualColumn;\n      };\n\n      coords.col = getNextColumn(coords.col);\n    }\n    /**\n     * On before set range end listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeEnd\",\n    value: function onBeforeSetRangeEnd(coords) {\n      var _this6 = this;\n\n      var columnCount = this.hot.countCols();\n\n      var getNextColumn = function getNextColumn(col) {\n        var visualColumn = col;\n\n        var physicalColumn = _this6.hot.toPhysicalColumn(visualColumn);\n\n        if (_this6.isHidden(physicalColumn, true)) {\n          if (_this6.lastSelectedColumn > visualColumn || coords.col === columnCount - 1) {\n            if (visualColumn > 0) {\n              visualColumn -= 1;\n              visualColumn = getNextColumn(visualColumn);\n            } else {\n              rangeEach(0, _this6.lastSelectedColumn, function (i) {\n                if (!_this6.isHidden(i)) {\n                  visualColumn = i;\n                  return false;\n                }\n              });\n            }\n          } else {\n            visualColumn += 1;\n            visualColumn = getNextColumn(visualColumn);\n          }\n        }\n\n        return visualColumn;\n      };\n\n      coords.col = getNextColumn(coords.col);\n      this.lastSelectedColumn = coords.col;\n    }\n    /**\n     * Add Show-hide columns to context menu.\n     *\n     * @private\n     * @param {Object} options\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: SEPARATOR\n      }, hideColumnItem(this), showColumnItem(this));\n    }\n    /**\n     * `onAfterCreateCol` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterCreateCol\",\n    value: function onAfterCreateCol(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenColumns, function (col) {\n        var visualColumn = col;\n\n        if (visualColumn >= index) {\n          visualColumn += amount;\n        }\n\n        tempHidden.push(visualColumn);\n      });\n      this.hiddenColumns = tempHidden;\n    }\n    /**\n     * `onAfterRemoveCol` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterRemoveCol\",\n    value: function onAfterRemoveCol(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenColumns, function (col) {\n        var visualColumn = col;\n\n        if (visualColumn >= index) {\n          visualColumn -= amount;\n        }\n\n        tempHidden.push(visualColumn);\n      });\n      this.hiddenColumns = tempHidden;\n    }\n    /**\n     * `afterPluginsInitialized` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onInit\",\n    value: function onInit() {\n      var _this7 = this;\n\n      var settings = this.hot.getSettings().hiddenColumns;\n\n      if (_typeof(settings) === 'object') {\n        this.settings = settings;\n\n        if (settings.copyPasteEnabled === void 0) {\n          settings.copyPasteEnabled = true;\n        }\n\n        if (Array.isArray(settings.columns)) {\n          this.hideColumns(settings.columns);\n        }\n\n        if (!settings.copyPasteEnabled) {\n          this.addHook('modifyCopyableRange', function (ranges) {\n            return _this7.onModifyCopyableRange(ranges);\n          });\n        }\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return HiddenColumns;\n}(BasePlugin);\n\nfunction hiddenRenderer(hotInstance, td) {\n  td.textContent = '';\n}\n\nregisterPlugin('hiddenColumns', HiddenColumns);\nexport default HiddenColumns;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/plugins/hiddenColumns/hiddenColumns.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","value","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","addClass","rangeEach","arrayEach","registerPlugin","SEPARATOR","Hooks","hideColumnItem","showColumnItem","getSingleton","register","HiddenColumns","_BasePlugin","hotInstance","_this","settings","hiddenColumns","lastSelectedColumn","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","hasColHeaders","addHook","col","TH","onAfterGetColHeader","TD","row","options","onAfterContextMenuDefaultOptions","cellProperties","onAfterGetCellMeta","width","onModifyColWidth","coords","onBeforeSetRangeStart","onBeforeSetRangeEnd","column","isHidden","onBeforeStretchingColumnWidth","index","amount","onAfterCreateCol","onAfterRemoveCol","onInit","view","updatePlugin","disablePlugin","render","resetCellsMeta","showColumns","columns","currentHideConfig","validColumns","isColumnDataValid","destinationHideConfig","filter","hiddenColumn","includes","continueHiding","runHooks","showColumn","_len","arguments","Array","_key","hideColumns","from","Set","concat","hideColumn","_len2","_key2","isPhysicalIndex","undefined","physicalColumn","toPhysicalColumn","_this3","every","Number","isInteger","countCols","getCellsMeta","meta","skipColumnOnPaste","baseRenderer","renderer","stretchedWidth","indicators","colIndex","copyPasteEnabled","hiddenRenderer","visualCol","firstSectionHidden","className","indexOf","classArr","split","containAfterHiddenColumn","splice","containFirstVisible","join","onModifyCopyableRange","ranges","_this4","newRanges","pushRange","startRow","endRow","startCol","endCol","push","range","rangeStart","_this5","getNextColumn","visualColumn","_this6","columnCount","items","name","tempHidden","_this7","isArray","destroy","td","textContent"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.every\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.number.constructor\";\nimport \"core-js/modules/es.number.is-integer\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.set\";\nimport \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.split\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from '../_base';\nimport { addClass } from '../../helpers/dom/element';\nimport { rangeEach } from '../../helpers/number';\nimport { arrayEach } from '../../helpers/array';\nimport { registerPlugin } from '../../plugins';\nimport { SEPARATOR } from '../contextMenu/predefinedItems';\nimport Hooks from '../../pluginHooks';\nimport hideColumnItem from './contextMenuItem/hideColumn';\nimport showColumnItem from './contextMenuItem/showColumn';\nHooks.getSingleton().register('beforeHideColumns');\nHooks.getSingleton().register('afterHideColumns');\nHooks.getSingleton().register('beforeUnhideColumns');\nHooks.getSingleton().register('afterUnhideColumns');\n/**\n * @plugin HiddenColumns\n *\n * @description\n * Plugin allows to hide certain columns. The hiding is achieved by rendering the columns with width set as 0px.\n * The plugin not modifies the source data and do not participate in data transformation (the shape of data returned\n * by `getData*` methods stays intact).\n *\n * Possible plugin settings:\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\n *  * `columns` as `Array`\n *  * `indicators` as `Boolean` (default `false`)\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   date: getData(),\n *   hiddenColumns: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     columns: [1, 2, 5]\n *   }\n * });\n *\n * // access to hiddenColumns plugin instance:\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\n *\n * // show single row\n * hiddenColumnsPlugin.showColumn(1);\n *\n * // show multiple columns\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\n *\n * // or as an array\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\n *\n * // hide single row\n * hiddenColumnsPlugin.hideColumn(1);\n *\n * // hide multiple columns\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\n *\n * // or as an array\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\n *\n * // rerender the table to see all changes\n * hot.render();\n * ```\n */\n\nvar HiddenColumns =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(HiddenColumns, _BasePlugin);\n\n  function HiddenColumns(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, HiddenColumns);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HiddenColumns).call(this, hotInstance));\n    /**\n     * Cached plugin settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.settings = {};\n    /**\n     * List of currently hidden columns\n     *\n     * @private\n     * @type {Number[]}\n     */\n\n    _this.hiddenColumns = [];\n    /**\n     * Last selected column index.\n     *\n     * @private\n     * @type {Number}\n     * @default -1\n     */\n\n    _this.lastSelectedColumn = -1;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link HiddenColumns#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(HiddenColumns, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().hiddenColumns;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (this.hot.hasColHeaders()) {\n        this.addHook('afterGetColHeader', function (col, TH) {\n          return _this2.onAfterGetColHeader(col, TH);\n        });\n      } else {\n        this.addHook('afterRenderer', function (TD, row, col) {\n          return _this2.onAfterGetColHeader(col, TD);\n        });\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyColWidth', function (width, col) {\n        return _this2.onModifyColWidth(width, col);\n      });\n      this.addHook('beforeSetRangeStartOnly', function (coords) {\n        return _this2.onBeforeSetRangeStart(coords);\n      });\n      this.addHook('beforeSetRangeEnd', function (coords) {\n        return _this2.onBeforeSetRangeEnd(coords);\n      });\n      this.addHook('hiddenColumn', function (column) {\n        return _this2.isHidden(column);\n      });\n      this.addHook('beforeStretchingColumnWidth', function (width, column) {\n        return _this2.onBeforeStretchingColumnWidth(width, column);\n      });\n      this.addHook('afterCreateCol', function (index, amount) {\n        return _this2.onAfterCreateCol(index, amount);\n      });\n      this.addHook('afterRemoveCol', function (index, amount) {\n        return _this2.onAfterRemoveCol(index, amount);\n      });\n      this.addHook('init', function () {\n        return _this2.onInit();\n      }); // Dirty workaround - the section below runs only if the HOT instance is already prepared.\n\n      if (this.hot.view) {\n        this.onInit();\n      }\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.settings = {};\n      this.hiddenColumns = [];\n      this.lastSelectedColumn = -1;\n      this.hot.render();\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"disablePlugin\", this).call(this);\n\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the provided columns.\n     *\n     * @param {Number[]} columns Array of column indexes.\n     */\n\n  }, {\n    key: \"showColumns\",\n    value: function showColumns(columns) {\n      var currentHideConfig = this.hiddenColumns;\n      var validColumns = this.isColumnDataValid(columns);\n      var destinationHideConfig = currentHideConfig;\n\n      if (validColumns) {\n        destinationHideConfig = this.hiddenColumns.filter(function (hiddenColumn) {\n          return columns.includes(hiddenColumn) === false;\n        });\n      }\n\n      var continueHiding = this.hot.runHooks('beforeUnhideColumns', currentHideConfig, destinationHideConfig, validColumns);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validColumns) {\n        this.hiddenColumns = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterUnhideColumns', currentHideConfig, destinationHideConfig, validColumns, validColumns && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows a single column.\n     *\n     * @param {...Number} column Visual column index.\n     */\n\n  }, {\n    key: \"showColumn\",\n    value: function showColumn() {\n      for (var _len = arguments.length, column = new Array(_len), _key = 0; _key < _len; _key++) {\n        column[_key] = arguments[_key];\n      }\n\n      this.showColumns(column);\n    }\n    /**\n     * Hides the columns provided in the array.\n     *\n     * @param {Number[]} columns Array of visual column indexes.\n     */\n\n  }, {\n    key: \"hideColumns\",\n    value: function hideColumns(columns) {\n      var currentHideConfig = this.hiddenColumns;\n      var validColumns = this.isColumnDataValid(columns);\n      var destinationHideConfig = currentHideConfig;\n\n      if (validColumns) {\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(columns)));\n      }\n\n      var continueHiding = this.hot.runHooks('beforeHideColumns', currentHideConfig, destinationHideConfig, validColumns);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validColumns) {\n        this.hiddenColumns = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterHideColumns', currentHideConfig, destinationHideConfig, validColumns, validColumns && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides a single column.\n     *\n     * @param {...Number} column Visual column index.\n     */\n\n  }, {\n    key: \"hideColumn\",\n    value: function hideColumn() {\n      for (var _len2 = arguments.length, column = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        column[_key2] = arguments[_key2];\n      }\n\n      this.hideColumns(column);\n    }\n    /**\n     * Checks if the provided column is hidden.\n     *\n     * @param {Number} column Column index.\n     * @param {Boolean} isPhysicalIndex flag which determines type of index.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(column) {\n      var isPhysicalIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var physicalColumn = column;\n\n      if (!isPhysicalIndex) {\n        physicalColumn = this.hot.toPhysicalColumn(column);\n      }\n\n      return this.hiddenColumns.includes(physicalColumn);\n    }\n    /**\n     * Check whether all of the provided column indexes are within the bounds of the table.\n     *\n     * @param {Array} columns Array of column indexes.\n     */\n\n  }, {\n    key: \"isColumnDataValid\",\n    value: function isColumnDataValid(columns) {\n      var _this3 = this;\n\n      return columns.every(function (column) {\n        return Number.isInteger(column) && column >= 0 && column < _this3.hot.countCols();\n      });\n    }\n    /**\n     * Reset all rendered cells meta.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipColumnOnPaste = false;\n\n          if (meta.baseRenderer !== null) {\n            meta.renderer = meta.baseRenderer;\n            meta.baseRenderer = null;\n          }\n        }\n      });\n    }\n    /**\n     * Sets width hidden columns on 0\n     *\n     * @private\n     * @param {Number} width Column width.\n     * @param {Number} column Column index.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onBeforeStretchingColumnWidth\",\n    value: function onBeforeStretchingColumnWidth(width, column) {\n      var stretchedWidth = width;\n\n      if (this.isHidden(column)) {\n        stretchedWidth = 0;\n      }\n\n      return stretchedWidth;\n    }\n    /**\n     * Adds the additional column width for the hidden column indicators.\n     *\n     * @private\n     * @param {Number} width\n     * @param {Number} col\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onModifyColWidth\",\n    value: function onModifyColWidth(width, col) {\n      if (this.isHidden(col)) {\n        return 0.1;\n      } else if (this.settings.indicators && (this.isHidden(col + 1) || this.isHidden(col - 1))) {\n        // add additional space for hidden column indicator\n        return width + (this.hot.hasColHeaders() ? 15 : 0);\n      }\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {Number} row\n     * @param {Number} col\n     * @param {Object} cellProperties\n     *\n     * @fires Hooks#unmodifyCol\n     */\n\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, col, cellProperties) {\n      var colIndex = this.hot.runHooks('unmodifyCol', col);\n\n      if (this.settings.copyPasteEnabled === false && this.isHidden(col)) {\n        cellProperties.skipColumnOnPaste = true;\n      }\n\n      if (this.isHidden(colIndex)) {\n        if (cellProperties.renderer !== hiddenRenderer) {\n          cellProperties.baseRenderer = cellProperties.renderer;\n        }\n\n        cellProperties.renderer = hiddenRenderer;\n      } else if (cellProperties.baseRenderer !== null) {\n        // We must pass undefined value too (for the purposes of inheritance cell/column settings).\n        cellProperties.renderer = cellProperties.baseRenderer;\n        cellProperties.baseRenderer = null;\n      }\n\n      if (this.isHidden(cellProperties.visualCol - 1)) {\n        var firstSectionHidden = true;\n        var i = cellProperties.visualCol - 1;\n        cellProperties.className = cellProperties.className || '';\n\n        if (cellProperties.className.indexOf('afterHiddenColumn') === -1) {\n          cellProperties.className += ' afterHiddenColumn';\n        }\n\n        do {\n          if (!this.isHidden(i)) {\n            firstSectionHidden = false;\n            break;\n          }\n\n          i -= 1;\n        } while (i >= 0);\n\n        if (firstSectionHidden && cellProperties.className.indexOf('firstVisibleColumn') === -1) {\n          cellProperties.className += ' firstVisibleColumn';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n\n        if (classArr.length) {\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenColumn');\n\n          if (containAfterHiddenColumn > -1) {\n            classArr.splice(containAfterHiddenColumn, 1);\n          }\n\n          var containFirstVisible = classArr.indexOf('firstVisibleColumn');\n\n          if (containFirstVisible > -1) {\n            classArr.splice(containFirstVisible, 1);\n          }\n\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @private\n     * @param {Array} ranges\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this4 = this;\n\n      var newRanges = [];\n\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startCol, range.endCol, function (col) {\n          if (_this4.isHidden(col)) {\n            if (!isHidden) {\n              pushRange(range.startRow, range.endRow, rangeStart, col - 1);\n            }\n\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = col;\n            }\n\n            if (col === range.endCol) {\n              pushRange(range.startRow, range.endRow, rangeStart, col);\n            }\n\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {Number} column\n     * @param {HTMLElement} TH\n     */\n\n  }, {\n    key: \"onAfterGetColHeader\",\n    value: function onAfterGetColHeader(column, TH) {\n      if (this.isHidden(column)) {\n        return;\n      }\n\n      var firstSectionHidden = true;\n      var i = column - 1;\n\n      do {\n        if (!this.isHidden(i)) {\n          firstSectionHidden = false;\n          break;\n        }\n\n        i -= 1;\n      } while (i >= 0);\n\n      if (firstSectionHidden) {\n        addClass(TH, 'firstVisibleColumn');\n      }\n\n      if (!this.settings.indicators) {\n        return;\n      }\n\n      if (this.isHidden(column - 1)) {\n        addClass(TH, 'afterHiddenColumn');\n      }\n\n      if (this.isHidden(column + 1) && column > -1) {\n        addClass(TH, 'beforeHiddenColumn');\n      }\n    }\n    /**\n     * On before set range start listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeStart\",\n    value: function onBeforeSetRangeStart(coords) {\n      var _this5 = this;\n\n      if (coords.col > 0) {\n        return;\n      }\n\n      coords.col = 0;\n\n      var getNextColumn = function getNextColumn(col) {\n        var visualColumn = col;\n\n        var physicalColumn = _this5.hot.toPhysicalColumn(visualColumn);\n\n        if (_this5.isHidden(physicalColumn, true)) {\n          visualColumn += 1;\n          visualColumn = getNextColumn(visualColumn);\n        }\n\n        return visualColumn;\n      };\n\n      coords.col = getNextColumn(coords.col);\n    }\n    /**\n     * On before set range end listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeEnd\",\n    value: function onBeforeSetRangeEnd(coords) {\n      var _this6 = this;\n\n      var columnCount = this.hot.countCols();\n\n      var getNextColumn = function getNextColumn(col) {\n        var visualColumn = col;\n\n        var physicalColumn = _this6.hot.toPhysicalColumn(visualColumn);\n\n        if (_this6.isHidden(physicalColumn, true)) {\n          if (_this6.lastSelectedColumn > visualColumn || coords.col === columnCount - 1) {\n            if (visualColumn > 0) {\n              visualColumn -= 1;\n              visualColumn = getNextColumn(visualColumn);\n            } else {\n              rangeEach(0, _this6.lastSelectedColumn, function (i) {\n                if (!_this6.isHidden(i)) {\n                  visualColumn = i;\n                  return false;\n                }\n              });\n            }\n          } else {\n            visualColumn += 1;\n            visualColumn = getNextColumn(visualColumn);\n          }\n        }\n\n        return visualColumn;\n      };\n\n      coords.col = getNextColumn(coords.col);\n      this.lastSelectedColumn = coords.col;\n    }\n    /**\n     * Add Show-hide columns to context menu.\n     *\n     * @private\n     * @param {Object} options\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: SEPARATOR\n      }, hideColumnItem(this), showColumnItem(this));\n    }\n    /**\n     * `onAfterCreateCol` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterCreateCol\",\n    value: function onAfterCreateCol(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenColumns, function (col) {\n        var visualColumn = col;\n\n        if (visualColumn >= index) {\n          visualColumn += amount;\n        }\n\n        tempHidden.push(visualColumn);\n      });\n      this.hiddenColumns = tempHidden;\n    }\n    /**\n     * `onAfterRemoveCol` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterRemoveCol\",\n    value: function onAfterRemoveCol(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenColumns, function (col) {\n        var visualColumn = col;\n\n        if (visualColumn >= index) {\n          visualColumn -= amount;\n        }\n\n        tempHidden.push(visualColumn);\n      });\n      this.hiddenColumns = tempHidden;\n    }\n    /**\n     * `afterPluginsInitialized` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onInit\",\n    value: function onInit() {\n      var _this7 = this;\n\n      var settings = this.hot.getSettings().hiddenColumns;\n\n      if (_typeof(settings) === 'object') {\n        this.settings = settings;\n\n        if (settings.copyPasteEnabled === void 0) {\n          settings.copyPasteEnabled = true;\n        }\n\n        if (Array.isArray(settings.columns)) {\n          this.hideColumns(settings.columns);\n        }\n\n        if (!settings.copyPasteEnabled) {\n          this.addHook('modifyCopyableRange', function (ranges) {\n            return _this7.onModifyCopyableRange(ranges);\n          });\n        }\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return HiddenColumns;\n}(BasePlugin);\n\nfunction hiddenRenderer(hotInstance, td) {\n  td.textContent = '';\n}\n\nregisterPlugin('hiddenColumns', HiddenColumns);\nexport default HiddenColumns;"]},"metadata":{},"sourceType":"module"}