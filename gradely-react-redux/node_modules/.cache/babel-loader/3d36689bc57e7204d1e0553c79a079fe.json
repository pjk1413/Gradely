{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport BasePlugin from './../_base';\nimport { arrayEach, arrayFilter } from './../../helpers/array';\nimport { cancelAnimationFrame, requestAnimationFrame } from './../../helpers/feature';\nimport { isVisible } from './../../helpers/dom/element';\nimport GhostTable from './../../utils/ghostTable';\nimport { isObject, hasOwnProperty } from './../../helpers/object';\nimport { valueAccordingPercent, rangeEach } from './../../helpers/number';\nimport { registerPlugin } from './../../plugins';\nimport SamplesGenerator from './../../utils/samplesGenerator';\nimport { isPercentValue } from './../../helpers/string';\n/**\n * @plugin AutoRowSize\n *\n * @description\n * This plugin allows to set row heights based on their highest cells.\n *\n * By default, the plugin is declared as `undefined`, which makes it disabled (same as if it was declared as `false`).\n * Enabling this plugin may decrease the overall table performance, as it needs to calculate the heights of all cells to\n * resize the rows accordingly.\n * If you experience problems with the performance, try turning this feature off and declaring the row heights manually.\n *\n * Row height calculations are divided into sync and async part. Each of this parts has their own advantages and\n * disadvantages. Synchronous calculations are faster but they block the browser UI, while the slower asynchronous\n * operations don't block the browser UI.\n *\n * To configure the sync/async distribution, you can pass an absolute value (number of columns) or a percentage value to a config object:\n * ```js\n * // as a number (300 columns in sync, rest async)\n * autoRowSize: {syncLimit: 300},\n *\n * // as a string (percent)\n * autoRowSize: {syncLimit: '40%'},\n *\n * // allow sample duplication\n * autoRowSize: {syncLimit: '40%', allowSampleDuplicates: true},\n * ```\n *\n * You can also use the `allowSampleDuplicates` option to allow sampling duplicate values when calculating the row\n * height. __Note__, that this might have a negative impact on performance.\n *\n * To configure this plugin see {@link Options#autoRowSize}.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   date: getData(),\n *   autoRowSize: true\n * });\n * // Access to plugin instance:\n * const plugin = hot.getPlugin('autoRowSize');\n *\n * plugin.getRowHeight(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n */\n\nvar AutoRowSize = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(AutoRowSize, _BasePlugin);\n\n  _createClass(AutoRowSize, null, [{\n    key: \"CALCULATION_STEP\",\n    get: function get() {\n      return 50;\n    }\n  }, {\n    key: \"SYNC_CALCULATION_LIMIT\",\n    get: function get() {\n      return 500;\n    }\n  }]);\n\n  function AutoRowSize(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, AutoRowSize);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoRowSize).call(this, hotInstance));\n    /**\n     * Cached rows heights.\n     *\n     * @type {Number[]}\n     */\n\n    _this.heights = [];\n    /**\n     * Instance of {@link GhostTable} for rows and columns size calculations.\n     *\n     * @private\n     * @type {GhostTable}\n     */\n\n    _this.ghostTable = new GhostTable(_this.hot);\n    /**\n     * Instance of {@link SamplesGenerator} for generating samples necessary for rows height calculations.\n     *\n     * @private\n     * @type {SamplesGenerator}\n     */\n\n    _this.samplesGenerator = new SamplesGenerator(function (row, col) {\n      var cellValue;\n\n      if (row >= 0) {\n        cellValue = _this.hot.getDataAtCell(row, col);\n      } else if (row === -1) {\n        cellValue = _this.hot.getColHeader(col);\n      }\n\n      return {\n        value: cellValue\n      };\n    });\n    /**\n     * `true` if only the first calculation was performed.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.firstCalculation = true;\n    /**\n     * `true` if the size calculation is in progress.\n     *\n     * @type {Boolean}\n     */\n\n    _this.inProgress = false; // moved to constructor to allow auto-sizing the rows when the plugin is disabled\n\n    _this.addHook('beforeRowResize', function (row, size, isDblClick) {\n      return _this.onBeforeRowResize(row, size, isDblClick);\n    });\n\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(AutoRowSize, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.hot.getSettings().autoRowSize === true || isObject(this.hot.getSettings().autoRowSize);\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.setSamplingOptions();\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData();\n      });\n      this.addHook('beforeChange', function (changes) {\n        return _this2.onBeforeChange(changes);\n      });\n      this.addHook('beforeColumnMove', function () {\n        return _this2.recalculateAllRowsHeight();\n      });\n      this.addHook('beforeColumnResize', function () {\n        return _this2.recalculateAllRowsHeight();\n      });\n      this.addHook('beforeColumnSort', function () {\n        return _this2.clearCache();\n      });\n      this.addHook('beforeRender', function (force) {\n        return _this2.onBeforeRender(force);\n      });\n      this.addHook('beforeRowMove', function (rowStart, rowEnd) {\n        return _this2.onBeforeRowMove(rowStart, rowEnd);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.getRowHeight(row, height);\n      });\n      this.addHook('modifyColumnHeaderHeight', function () {\n        return _this2.getColumnHeaderHeight();\n      });\n\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Calculate a given rows height.\n     *\n     * @param {Number|Object} rowRange Row index or an object with `from` and `to` indexes as a range.\n     * @param {Number|Object} colRange Column index or an object with `from` and `to` indexes as a range.\n     * @param {Boolean} [force=false] If `true` the calculation will be processed regardless of whether the width exists in the cache.\n     */\n\n  }, {\n    key: \"calculateRowsHeight\",\n    value: function calculateRowsHeight() {\n      var _this3 = this;\n\n      var rowRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countRows() - 1\n      };\n      var colRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsRange = typeof rowRange === 'number' ? {\n        from: rowRange,\n        to: rowRange\n      } : rowRange;\n      var columnsRange = typeof colRange === 'number' ? {\n        from: colRange,\n        to: colRange\n      } : colRange;\n\n      if (this.hot.getColHeader(0) !== null) {\n        var samples = this.samplesGenerator.generateRowSamples(-1, columnsRange);\n        this.ghostTable.addColumnHeadersRow(samples.get(-1));\n      }\n\n      rangeEach(rowsRange.from, rowsRange.to, function (row) {\n        // For rows we must calculate row height even when user had set height value manually.\n        // We can shrink column but cannot shrink rows!\n        if (force || _this3.heights[row] === void 0) {\n          var _samples = _this3.samplesGenerator.generateRowSamples(row, columnsRange);\n\n          arrayEach(_samples, function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                rowIndex = _ref2[0],\n                sample = _ref2[1];\n\n            return _this3.ghostTable.addRow(rowIndex, sample);\n          });\n        }\n      });\n\n      if (this.ghostTable.rows.length) {\n        this.ghostTable.getHeights(function (row, height) {\n          _this3.heights[row] = height;\n        });\n        this.ghostTable.clean();\n      }\n    }\n    /**\n     * Calculate all rows heights. The calculated row will be cached in the {@link AutoRowSize#heights} property.\n     * To retrieve height for specyfied row use {@link AutoRowSize#getRowHeight} method.\n     *\n     * @param {Object|Number} rowRange Row index or an object with `from` and `to` properties which define row range.\n     */\n\n  }, {\n    key: \"calculateAllRowsHeight\",\n    value: function calculateAllRowsHeight() {\n      var _this4 = this;\n\n      var colRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var current = 0;\n      var length = this.hot.countRows() - 1;\n      var timer = null;\n      this.inProgress = true;\n\n      var loop = function loop() {\n        // When hot was destroyed after calculating finished cancel frame\n        if (!_this4.hot) {\n          cancelAnimationFrame(timer);\n          _this4.inProgress = false;\n          return;\n        }\n\n        _this4.calculateRowsHeight({\n          from: current,\n          to: Math.min(current + AutoRowSize.CALCULATION_STEP, length)\n        }, colRange);\n\n        current = current + AutoRowSize.CALCULATION_STEP + 1;\n\n        if (current < length) {\n          timer = requestAnimationFrame(loop);\n        } else {\n          cancelAnimationFrame(timer);\n          _this4.inProgress = false; // @TODO Should call once per render cycle, currently fired separately in different plugins\n\n          _this4.hot.view.wt.wtOverlays.adjustElementsSize(true); // tmp\n\n\n          if (_this4.hot.view.wt.wtOverlays.leftOverlay.needFullRender) {\n            _this4.hot.view.wt.wtOverlays.leftOverlay.clone.draw();\n          }\n        }\n      };\n\n      var syncLimit = this.getSyncCalculationLimit(); // sync\n\n      if (this.firstCalculation && syncLimit >= 0) {\n        this.calculateRowsHeight({\n          from: 0,\n          to: syncLimit\n        }, colRange);\n        this.firstCalculation = false;\n        current = syncLimit + 1;\n      } // async\n\n\n      if (current < length) {\n        loop();\n      } else {\n        this.inProgress = false;\n        this.hot.view.wt.wtOverlays.adjustElementsSize(false);\n      }\n    }\n    /**\n     * Sets the sampling options.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"setSamplingOptions\",\n    value: function setSamplingOptions() {\n      var setting = this.hot.getSettings().autoRowSize;\n      var samplingRatio = setting && hasOwnProperty(setting, 'samplingRatio') ? this.hot.getSettings().autoRowSize.samplingRatio : void 0;\n      var allowSampleDuplicates = setting && hasOwnProperty(setting, 'allowSampleDuplicates') ? this.hot.getSettings().autoRowSize.allowSampleDuplicates : void 0;\n\n      if (samplingRatio && !isNaN(samplingRatio)) {\n        this.samplesGenerator.setSampleCount(parseInt(samplingRatio, 10));\n      }\n\n      if (allowSampleDuplicates) {\n        this.samplesGenerator.setAllowDuplicates(allowSampleDuplicates);\n      }\n    }\n    /**\n     * Recalculates all rows height (overwrite cache values).\n     */\n\n  }, {\n    key: \"recalculateAllRowsHeight\",\n    value: function recalculateAllRowsHeight() {\n      if (isVisible(this.hot.view.wt.wtTable.TABLE)) {\n        this.clearCache();\n        this.calculateAllRowsHeight();\n      }\n    }\n    /**\n     * Gets value which tells how many rows should be calculated synchronously (rest of the rows will be calculated\n     * asynchronously). The limit is calculated based on `syncLimit` set to autoRowSize option (see {@link Options#autoRowSize}).\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getSyncCalculationLimit\",\n    value: function getSyncCalculationLimit() {\n      /* eslint-disable no-bitwise */\n      var limit = AutoRowSize.SYNC_CALCULATION_LIMIT;\n      var rowsLimit = this.hot.countRows() - 1;\n\n      if (isObject(this.hot.getSettings().autoRowSize)) {\n        limit = this.hot.getSettings().autoRowSize.syncLimit;\n\n        if (isPercentValue(limit)) {\n          limit = valueAccordingPercent(rowsLimit, limit);\n        } else {\n          // Force to Number\n          limit >>= 0;\n        }\n      }\n\n      return Math.min(limit, rowsLimit);\n    }\n    /**\n     * Gets the calculated row height.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} [defaultHeight] Default row height. It will be picked up if no calculated height found.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(row) {\n      var defaultHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : void 0;\n      var height = defaultHeight;\n\n      if (this.heights[row] !== void 0 && this.heights[row] > (defaultHeight || 0)) {\n        height = this.heights[row];\n      }\n\n      return height;\n    }\n    /**\n     * Get the calculated column header height.\n     *\n     * @returns {Number|undefined}\n     */\n\n  }, {\n    key: \"getColumnHeaderHeight\",\n    value: function getColumnHeaderHeight() {\n      return this.heights[-1];\n    }\n    /**\n     * Get the first visible row.\n     *\n     * @returns {Number} Returns row index, -1 if table is not rendered or if there are no rows to base the the calculations on.\n     */\n\n  }, {\n    key: \"getFirstVisibleRow\",\n    value: function getFirstVisibleRow() {\n      var wot = this.hot.view.wt;\n\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getFirstVisibleRow();\n      }\n\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getFirstRenderedRow();\n      }\n\n      return -1;\n    }\n    /**\n     * Gets the last visible row.\n     *\n     * @returns {Number} Returns row index or -1 if table is not rendered.\n     */\n\n  }, {\n    key: \"getLastVisibleRow\",\n    value: function getLastVisibleRow() {\n      var wot = this.hot.view.wt;\n\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getLastVisibleRow();\n      }\n\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getLastRenderedRow();\n      }\n\n      return -1;\n    }\n    /**\n     * Clears cached heights.\n     */\n\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.heights.length = 0;\n      this.heights[-1] = void 0;\n    }\n    /**\n     * Clears cache by range.\n     *\n     * @param {Object|Number} range Row index or an object with `from` and `to` properties which define row range.\n     */\n\n  }, {\n    key: \"clearCacheByRange\",\n    value: function clearCacheByRange(range) {\n      var _this5 = this;\n\n      var _ref3 = typeof range === 'number' ? {\n        from: range,\n        to: range\n      } : range,\n          from = _ref3.from,\n          to = _ref3.to;\n\n      rangeEach(Math.min(from, to), Math.max(from, to), function (row) {\n        _this5.heights[row] = void 0;\n      });\n    }\n    /**\n     * Checks if all heights were calculated. If not then return `true` (need recalculate).\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isNeedRecalculate\",\n    value: function isNeedRecalculate() {\n      return !!arrayFilter(this.heights, function (item) {\n        return item === void 0;\n      }).length;\n    }\n    /**\n     * On before render listener.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onBeforeRender\",\n    value: function onBeforeRender() {\n      var force = this.hot.renderCall;\n      var fixedRowsBottom = this.hot.getSettings().fixedRowsBottom;\n      var firstVisibleRow = this.getFirstVisibleRow();\n      var lastVisibleRow = this.getLastVisibleRow();\n\n      if (firstVisibleRow === -1 || lastVisibleRow === -1) {\n        return;\n      }\n\n      this.calculateRowsHeight({\n        from: firstVisibleRow,\n        to: lastVisibleRow\n      }, void 0, force); // Calculate rows height synchronously for bottom overlay\n\n      if (fixedRowsBottom) {\n        var totalRows = this.hot.countRows() - 1;\n        this.calculateRowsHeight({\n          from: totalRows - fixedRowsBottom,\n          to: totalRows\n        });\n      }\n\n      if (this.isNeedRecalculate() && !this.inProgress) {\n        this.calculateAllRowsHeight();\n      }\n    }\n    /**\n     * On before row move listener.\n     *\n     * @private\n     * @param {Number} from Row index where was grabbed.\n     * @param {Number} to Destination row index.\n     */\n\n  }, {\n    key: \"onBeforeRowMove\",\n    value: function onBeforeRowMove(from, to) {\n      this.clearCacheByRange({\n        from: from,\n        to: to\n      });\n      this.calculateAllRowsHeight();\n    }\n    /**\n     * On before row resize listener.\n     *\n     * @private\n     * @param {Number} row\n     * @param {Number} size\n     * @param {Boolean} isDblClick\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onBeforeRowResize\",\n    value: function onBeforeRowResize(row, size, isDblClick) {\n      var newSize = size;\n\n      if (isDblClick) {\n        this.calculateRowsHeight(row, void 0, true);\n        newSize = this.getRowHeight(row);\n      }\n\n      return newSize;\n    }\n    /**\n     * On after load data listener.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      var _this6 = this;\n\n      if (this.hot.view) {\n        this.recalculateAllRowsHeight();\n      } else {\n        // first load - initialization\n        setTimeout(function () {\n          if (_this6.hot) {\n            _this6.recalculateAllRowsHeight();\n          }\n        }, 0);\n      }\n    }\n    /**\n     * On before change listener.\n     *\n     * @private\n     * @param {Array} changes\n     */\n\n  }, {\n    key: \"onBeforeChange\",\n    value: function onBeforeChange(changes) {\n      var range = null;\n\n      if (changes.length === 1) {\n        range = changes[0][0];\n      } else if (changes.length > 1) {\n        range = {\n          from: changes[0][0],\n          to: changes[changes.length - 1][0]\n        };\n      }\n\n      if (range !== null) {\n        this.clearCacheByRange(range);\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.ghostTable.clean();\n\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return AutoRowSize;\n}(BasePlugin);\n\nregisterPlugin('autoRowSize', AutoRowSize);\nexport default AutoRowSize;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/node_modules/handsontable/es/plugins/autoRowSize/autoRowSize.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Object","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_get","target","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","arrayEach","arrayFilter","cancelAnimationFrame","requestAnimationFrame","isVisible","GhostTable","isObject","valueAccordingPercent","rangeEach","registerPlugin","SamplesGenerator","isPercentValue","AutoRowSize","_BasePlugin","hotInstance","_this","heights","ghostTable","hot","samplesGenerator","row","col","cellValue","getDataAtCell","getColHeader","firstCalculation","inProgress","addHook","size","isDblClick","onBeforeRowResize","isEnabled","getSettings","autoRowSize","enablePlugin","_this2","enabled","setSamplingOptions","onAfterLoadData","changes","onBeforeChange","recalculateAllRowsHeight","clearCache","force","onBeforeRender","rowStart","rowEnd","onBeforeRowMove","height","getRowHeight","getColumnHeaderHeight","disablePlugin","calculateRowsHeight","_this3","rowRange","arguments","from","to","countRows","colRange","countCols","rowsRange","columnsRange","samples","generateRowSamples","addColumnHeadersRow","_samples","_ref","_ref2","rowIndex","sample","addRow","rows","getHeights","clean","calculateAllRowsHeight","_this4","current","timer","loop","Math","min","CALCULATION_STEP","view","wt","wtOverlays","adjustElementsSize","leftOverlay","needFullRender","clone","draw","syncLimit","getSyncCalculationLimit","setting","samplingRatio","allowSampleDuplicates","isNaN","setSampleCount","parseInt","setAllowDuplicates","wtTable","TABLE","limit","SYNC_CALCULATION_LIMIT","rowsLimit","defaultHeight","getFirstVisibleRow","wot","wtViewport","rowsVisibleCalculator","rowsRenderCalculator","getFirstRenderedRow","getLastVisibleRow","getLastRenderedRow","clearCacheByRange","range","_this5","_ref3","max","isNeedRecalculate","item","renderCall","fixedRowsBottom","firstVisibleRow","lastVisibleRow","totalRows","newSize","_this6","setTimeout","destroy"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.timers\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from './../_base';\nimport { arrayEach, arrayFilter } from './../../helpers/array';\nimport { cancelAnimationFrame, requestAnimationFrame } from './../../helpers/feature';\nimport { isVisible } from './../../helpers/dom/element';\nimport GhostTable from './../../utils/ghostTable';\nimport { isObject, hasOwnProperty } from './../../helpers/object';\nimport { valueAccordingPercent, rangeEach } from './../../helpers/number';\nimport { registerPlugin } from './../../plugins';\nimport SamplesGenerator from './../../utils/samplesGenerator';\nimport { isPercentValue } from './../../helpers/string';\n/**\n * @plugin AutoRowSize\n *\n * @description\n * This plugin allows to set row heights based on their highest cells.\n *\n * By default, the plugin is declared as `undefined`, which makes it disabled (same as if it was declared as `false`).\n * Enabling this plugin may decrease the overall table performance, as it needs to calculate the heights of all cells to\n * resize the rows accordingly.\n * If you experience problems with the performance, try turning this feature off and declaring the row heights manually.\n *\n * Row height calculations are divided into sync and async part. Each of this parts has their own advantages and\n * disadvantages. Synchronous calculations are faster but they block the browser UI, while the slower asynchronous\n * operations don't block the browser UI.\n *\n * To configure the sync/async distribution, you can pass an absolute value (number of columns) or a percentage value to a config object:\n * ```js\n * // as a number (300 columns in sync, rest async)\n * autoRowSize: {syncLimit: 300},\n *\n * // as a string (percent)\n * autoRowSize: {syncLimit: '40%'},\n *\n * // allow sample duplication\n * autoRowSize: {syncLimit: '40%', allowSampleDuplicates: true},\n * ```\n *\n * You can also use the `allowSampleDuplicates` option to allow sampling duplicate values when calculating the row\n * height. __Note__, that this might have a negative impact on performance.\n *\n * To configure this plugin see {@link Options#autoRowSize}.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   date: getData(),\n *   autoRowSize: true\n * });\n * // Access to plugin instance:\n * const plugin = hot.getPlugin('autoRowSize');\n *\n * plugin.getRowHeight(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n */\n\nvar AutoRowSize =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(AutoRowSize, _BasePlugin);\n\n  _createClass(AutoRowSize, null, [{\n    key: \"CALCULATION_STEP\",\n    get: function get() {\n      return 50;\n    }\n  }, {\n    key: \"SYNC_CALCULATION_LIMIT\",\n    get: function get() {\n      return 500;\n    }\n  }]);\n\n  function AutoRowSize(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, AutoRowSize);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoRowSize).call(this, hotInstance));\n    /**\n     * Cached rows heights.\n     *\n     * @type {Number[]}\n     */\n\n    _this.heights = [];\n    /**\n     * Instance of {@link GhostTable} for rows and columns size calculations.\n     *\n     * @private\n     * @type {GhostTable}\n     */\n\n    _this.ghostTable = new GhostTable(_this.hot);\n    /**\n     * Instance of {@link SamplesGenerator} for generating samples necessary for rows height calculations.\n     *\n     * @private\n     * @type {SamplesGenerator}\n     */\n\n    _this.samplesGenerator = new SamplesGenerator(function (row, col) {\n      var cellValue;\n\n      if (row >= 0) {\n        cellValue = _this.hot.getDataAtCell(row, col);\n      } else if (row === -1) {\n        cellValue = _this.hot.getColHeader(col);\n      }\n\n      return {\n        value: cellValue\n      };\n    });\n    /**\n     * `true` if only the first calculation was performed.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.firstCalculation = true;\n    /**\n     * `true` if the size calculation is in progress.\n     *\n     * @type {Boolean}\n     */\n\n    _this.inProgress = false; // moved to constructor to allow auto-sizing the rows when the plugin is disabled\n\n    _this.addHook('beforeRowResize', function (row, size, isDblClick) {\n      return _this.onBeforeRowResize(row, size, isDblClick);\n    });\n\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(AutoRowSize, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.hot.getSettings().autoRowSize === true || isObject(this.hot.getSettings().autoRowSize);\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.setSamplingOptions();\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData();\n      });\n      this.addHook('beforeChange', function (changes) {\n        return _this2.onBeforeChange(changes);\n      });\n      this.addHook('beforeColumnMove', function () {\n        return _this2.recalculateAllRowsHeight();\n      });\n      this.addHook('beforeColumnResize', function () {\n        return _this2.recalculateAllRowsHeight();\n      });\n      this.addHook('beforeColumnSort', function () {\n        return _this2.clearCache();\n      });\n      this.addHook('beforeRender', function (force) {\n        return _this2.onBeforeRender(force);\n      });\n      this.addHook('beforeRowMove', function (rowStart, rowEnd) {\n        return _this2.onBeforeRowMove(rowStart, rowEnd);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.getRowHeight(row, height);\n      });\n      this.addHook('modifyColumnHeaderHeight', function () {\n        return _this2.getColumnHeaderHeight();\n      });\n\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Calculate a given rows height.\n     *\n     * @param {Number|Object} rowRange Row index or an object with `from` and `to` indexes as a range.\n     * @param {Number|Object} colRange Column index or an object with `from` and `to` indexes as a range.\n     * @param {Boolean} [force=false] If `true` the calculation will be processed regardless of whether the width exists in the cache.\n     */\n\n  }, {\n    key: \"calculateRowsHeight\",\n    value: function calculateRowsHeight() {\n      var _this3 = this;\n\n      var rowRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countRows() - 1\n      };\n      var colRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsRange = typeof rowRange === 'number' ? {\n        from: rowRange,\n        to: rowRange\n      } : rowRange;\n      var columnsRange = typeof colRange === 'number' ? {\n        from: colRange,\n        to: colRange\n      } : colRange;\n\n      if (this.hot.getColHeader(0) !== null) {\n        var samples = this.samplesGenerator.generateRowSamples(-1, columnsRange);\n        this.ghostTable.addColumnHeadersRow(samples.get(-1));\n      }\n\n      rangeEach(rowsRange.from, rowsRange.to, function (row) {\n        // For rows we must calculate row height even when user had set height value manually.\n        // We can shrink column but cannot shrink rows!\n        if (force || _this3.heights[row] === void 0) {\n          var _samples = _this3.samplesGenerator.generateRowSamples(row, columnsRange);\n\n          arrayEach(_samples, function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                rowIndex = _ref2[0],\n                sample = _ref2[1];\n\n            return _this3.ghostTable.addRow(rowIndex, sample);\n          });\n        }\n      });\n\n      if (this.ghostTable.rows.length) {\n        this.ghostTable.getHeights(function (row, height) {\n          _this3.heights[row] = height;\n        });\n        this.ghostTable.clean();\n      }\n    }\n    /**\n     * Calculate all rows heights. The calculated row will be cached in the {@link AutoRowSize#heights} property.\n     * To retrieve height for specyfied row use {@link AutoRowSize#getRowHeight} method.\n     *\n     * @param {Object|Number} rowRange Row index or an object with `from` and `to` properties which define row range.\n     */\n\n  }, {\n    key: \"calculateAllRowsHeight\",\n    value: function calculateAllRowsHeight() {\n      var _this4 = this;\n\n      var colRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var current = 0;\n      var length = this.hot.countRows() - 1;\n      var timer = null;\n      this.inProgress = true;\n\n      var loop = function loop() {\n        // When hot was destroyed after calculating finished cancel frame\n        if (!_this4.hot) {\n          cancelAnimationFrame(timer);\n          _this4.inProgress = false;\n          return;\n        }\n\n        _this4.calculateRowsHeight({\n          from: current,\n          to: Math.min(current + AutoRowSize.CALCULATION_STEP, length)\n        }, colRange);\n\n        current = current + AutoRowSize.CALCULATION_STEP + 1;\n\n        if (current < length) {\n          timer = requestAnimationFrame(loop);\n        } else {\n          cancelAnimationFrame(timer);\n          _this4.inProgress = false; // @TODO Should call once per render cycle, currently fired separately in different plugins\n\n          _this4.hot.view.wt.wtOverlays.adjustElementsSize(true); // tmp\n\n\n          if (_this4.hot.view.wt.wtOverlays.leftOverlay.needFullRender) {\n            _this4.hot.view.wt.wtOverlays.leftOverlay.clone.draw();\n          }\n        }\n      };\n\n      var syncLimit = this.getSyncCalculationLimit(); // sync\n\n      if (this.firstCalculation && syncLimit >= 0) {\n        this.calculateRowsHeight({\n          from: 0,\n          to: syncLimit\n        }, colRange);\n        this.firstCalculation = false;\n        current = syncLimit + 1;\n      } // async\n\n\n      if (current < length) {\n        loop();\n      } else {\n        this.inProgress = false;\n        this.hot.view.wt.wtOverlays.adjustElementsSize(false);\n      }\n    }\n    /**\n     * Sets the sampling options.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"setSamplingOptions\",\n    value: function setSamplingOptions() {\n      var setting = this.hot.getSettings().autoRowSize;\n      var samplingRatio = setting && hasOwnProperty(setting, 'samplingRatio') ? this.hot.getSettings().autoRowSize.samplingRatio : void 0;\n      var allowSampleDuplicates = setting && hasOwnProperty(setting, 'allowSampleDuplicates') ? this.hot.getSettings().autoRowSize.allowSampleDuplicates : void 0;\n\n      if (samplingRatio && !isNaN(samplingRatio)) {\n        this.samplesGenerator.setSampleCount(parseInt(samplingRatio, 10));\n      }\n\n      if (allowSampleDuplicates) {\n        this.samplesGenerator.setAllowDuplicates(allowSampleDuplicates);\n      }\n    }\n    /**\n     * Recalculates all rows height (overwrite cache values).\n     */\n\n  }, {\n    key: \"recalculateAllRowsHeight\",\n    value: function recalculateAllRowsHeight() {\n      if (isVisible(this.hot.view.wt.wtTable.TABLE)) {\n        this.clearCache();\n        this.calculateAllRowsHeight();\n      }\n    }\n    /**\n     * Gets value which tells how many rows should be calculated synchronously (rest of the rows will be calculated\n     * asynchronously). The limit is calculated based on `syncLimit` set to autoRowSize option (see {@link Options#autoRowSize}).\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getSyncCalculationLimit\",\n    value: function getSyncCalculationLimit() {\n      /* eslint-disable no-bitwise */\n      var limit = AutoRowSize.SYNC_CALCULATION_LIMIT;\n      var rowsLimit = this.hot.countRows() - 1;\n\n      if (isObject(this.hot.getSettings().autoRowSize)) {\n        limit = this.hot.getSettings().autoRowSize.syncLimit;\n\n        if (isPercentValue(limit)) {\n          limit = valueAccordingPercent(rowsLimit, limit);\n        } else {\n          // Force to Number\n          limit >>= 0;\n        }\n      }\n\n      return Math.min(limit, rowsLimit);\n    }\n    /**\n     * Gets the calculated row height.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} [defaultHeight] Default row height. It will be picked up if no calculated height found.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(row) {\n      var defaultHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : void 0;\n      var height = defaultHeight;\n\n      if (this.heights[row] !== void 0 && this.heights[row] > (defaultHeight || 0)) {\n        height = this.heights[row];\n      }\n\n      return height;\n    }\n    /**\n     * Get the calculated column header height.\n     *\n     * @returns {Number|undefined}\n     */\n\n  }, {\n    key: \"getColumnHeaderHeight\",\n    value: function getColumnHeaderHeight() {\n      return this.heights[-1];\n    }\n    /**\n     * Get the first visible row.\n     *\n     * @returns {Number} Returns row index, -1 if table is not rendered or if there are no rows to base the the calculations on.\n     */\n\n  }, {\n    key: \"getFirstVisibleRow\",\n    value: function getFirstVisibleRow() {\n      var wot = this.hot.view.wt;\n\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getFirstVisibleRow();\n      }\n\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getFirstRenderedRow();\n      }\n\n      return -1;\n    }\n    /**\n     * Gets the last visible row.\n     *\n     * @returns {Number} Returns row index or -1 if table is not rendered.\n     */\n\n  }, {\n    key: \"getLastVisibleRow\",\n    value: function getLastVisibleRow() {\n      var wot = this.hot.view.wt;\n\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getLastVisibleRow();\n      }\n\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getLastRenderedRow();\n      }\n\n      return -1;\n    }\n    /**\n     * Clears cached heights.\n     */\n\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.heights.length = 0;\n      this.heights[-1] = void 0;\n    }\n    /**\n     * Clears cache by range.\n     *\n     * @param {Object|Number} range Row index or an object with `from` and `to` properties which define row range.\n     */\n\n  }, {\n    key: \"clearCacheByRange\",\n    value: function clearCacheByRange(range) {\n      var _this5 = this;\n\n      var _ref3 = typeof range === 'number' ? {\n        from: range,\n        to: range\n      } : range,\n          from = _ref3.from,\n          to = _ref3.to;\n\n      rangeEach(Math.min(from, to), Math.max(from, to), function (row) {\n        _this5.heights[row] = void 0;\n      });\n    }\n    /**\n     * Checks if all heights were calculated. If not then return `true` (need recalculate).\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isNeedRecalculate\",\n    value: function isNeedRecalculate() {\n      return !!arrayFilter(this.heights, function (item) {\n        return item === void 0;\n      }).length;\n    }\n    /**\n     * On before render listener.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onBeforeRender\",\n    value: function onBeforeRender() {\n      var force = this.hot.renderCall;\n      var fixedRowsBottom = this.hot.getSettings().fixedRowsBottom;\n      var firstVisibleRow = this.getFirstVisibleRow();\n      var lastVisibleRow = this.getLastVisibleRow();\n\n      if (firstVisibleRow === -1 || lastVisibleRow === -1) {\n        return;\n      }\n\n      this.calculateRowsHeight({\n        from: firstVisibleRow,\n        to: lastVisibleRow\n      }, void 0, force); // Calculate rows height synchronously for bottom overlay\n\n      if (fixedRowsBottom) {\n        var totalRows = this.hot.countRows() - 1;\n        this.calculateRowsHeight({\n          from: totalRows - fixedRowsBottom,\n          to: totalRows\n        });\n      }\n\n      if (this.isNeedRecalculate() && !this.inProgress) {\n        this.calculateAllRowsHeight();\n      }\n    }\n    /**\n     * On before row move listener.\n     *\n     * @private\n     * @param {Number} from Row index where was grabbed.\n     * @param {Number} to Destination row index.\n     */\n\n  }, {\n    key: \"onBeforeRowMove\",\n    value: function onBeforeRowMove(from, to) {\n      this.clearCacheByRange({\n        from: from,\n        to: to\n      });\n      this.calculateAllRowsHeight();\n    }\n    /**\n     * On before row resize listener.\n     *\n     * @private\n     * @param {Number} row\n     * @param {Number} size\n     * @param {Boolean} isDblClick\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onBeforeRowResize\",\n    value: function onBeforeRowResize(row, size, isDblClick) {\n      var newSize = size;\n\n      if (isDblClick) {\n        this.calculateRowsHeight(row, void 0, true);\n        newSize = this.getRowHeight(row);\n      }\n\n      return newSize;\n    }\n    /**\n     * On after load data listener.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      var _this6 = this;\n\n      if (this.hot.view) {\n        this.recalculateAllRowsHeight();\n      } else {\n        // first load - initialization\n        setTimeout(function () {\n          if (_this6.hot) {\n            _this6.recalculateAllRowsHeight();\n          }\n        }, 0);\n      }\n    }\n    /**\n     * On before change listener.\n     *\n     * @private\n     * @param {Array} changes\n     */\n\n  }, {\n    key: \"onBeforeChange\",\n    value: function onBeforeChange(changes) {\n      var range = null;\n\n      if (changes.length === 1) {\n        range = changes[0][0];\n      } else if (changes.length > 1) {\n        range = {\n          from: changes[0][0],\n          to: changes[changes.length - 1][0]\n        };\n      }\n\n      if (range !== null) {\n        this.clearCacheByRange(range);\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.ghostTable.clean();\n\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return AutoRowSize;\n}(BasePlugin);\n\nregisterPlugin('autoRowSize', AutoRowSize);\nexport default AutoRowSize;"]},"metadata":{},"sourceType":"module"}