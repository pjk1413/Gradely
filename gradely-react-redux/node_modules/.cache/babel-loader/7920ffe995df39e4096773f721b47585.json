{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport BasePlugin from './../_base';\nimport { registerPlugin } from './../../plugins';\nimport { isObject } from './../../helpers/object';\nimport { rangeEach } from './../../helpers/number';\nimport { isUndefined } from './../../helpers/mixed';\nvar DEFAULT_SEARCH_RESULT_CLASS = 'htSearchResult';\n\nvar DEFAULT_CALLBACK = function DEFAULT_CALLBACK(instance, row, col, data, testResult) {\n  instance.getCellMeta(row, col).isSearchResult = testResult;\n};\n\nvar DEFAULT_QUERY_METHOD = function DEFAULT_QUERY_METHOD(query, value) {\n  if (isUndefined(query) || query === null || !query.toLowerCase || query.length === 0) {\n    return false;\n  }\n\n  if (isUndefined(value) || value === null) {\n    return false;\n  }\n\n  return value.toString().toLowerCase().indexOf(query.toLowerCase()) !== -1;\n};\n/**\n * @plugin Search\n *\n * @description\n * The search plugin provides an easy interface to search data across Handsontable.\n *\n * In order to enable search mechanism, {@link Options#search} option must be set to `true`.\n *\n * @example\n * ```js\n * // as boolean\n * search: true\n * // as a object with one or more options\n * search: {\n *   callback: myNewCallbackFunction,\n *   queryMethod: myNewQueryMethod,\n *   searchResultClass: 'customClass'\n * }\n *\n * // Access to search plugin instance:\n * const searchPlugin = hot.getPlugin('search');\n *\n * // Set callback programmatically:\n * searchPlugin.setCallback(myNewCallbackFunction);\n * // Set query method programmatically:\n * searchPlugin.setQueryMethod(myNewQueryMethod);\n * // Set search result cells class programmatically:\n * searchPlugin.setSearchResultClass(customClass);\n * ```\n */\n\n\nvar Search = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(Search, _BasePlugin);\n\n  function Search(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, hotInstance));\n    /**\n     * Function called during querying for each cell from the {@link DataMap}.\n     *\n     * @private\n     * @type {Function}\n     */\n\n    _this.callback = DEFAULT_CALLBACK;\n    /**\n     * Query function is responsible for determining whether a query matches the value stored in a cell.\n     *\n     * @private\n     * @type {Function}\n     */\n\n    _this.queryMethod = DEFAULT_QUERY_METHOD;\n    /**\n     * Class name added to each cell that belongs to the searched query.\n     *\n     * @private\n     * @type {String}\n     */\n\n    _this.searchResultClass = DEFAULT_SEARCH_RESULT_CLASS;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Search, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.hot.getSettings().search;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      var searchSettings = this.hot.getSettings().search;\n      this.updatePluginSettings(searchSettings);\n      this.addHook('beforeRenderer', function () {\n        return _this2.onBeforeRenderer.apply(_this2, arguments);\n      });\n\n      _get(_getPrototypeOf(Search.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      var _this3 = this;\n\n      var beforeRendererCallback = function beforeRendererCallback() {\n        return _this3.onBeforeRenderer.apply(_this3, arguments);\n      };\n\n      this.hot.addHook('beforeRenderer', beforeRendererCallback);\n      this.hot.addHookOnce('afterRender', function () {\n        _this3.hot.removeHook('beforeRenderer', beforeRendererCallback);\n      });\n\n      _get(_getPrototypeOf(Search.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(Search.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Makes the query.\n     *\n     * @param {String} queryStr Value to be search.\n     * @param {Function} [callback] Callback function performed on cells with values which matches to the searched query.\n     * @param {Function} [queryMethod] Query function responsible for determining whether a query matches the value stored in a cell.\n     * @returns {Object[]} Return an array of objects with `row`, `col`, `data` properties or empty array.\n     */\n\n  }, {\n    key: \"query\",\n    value: function query(queryStr) {\n      var _this4 = this;\n\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getCallback();\n      var queryMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.getQueryMethod();\n      var rowCount = this.hot.countRows();\n      var colCount = this.hot.countCols();\n      var queryResult = [];\n      var instance = this.hot;\n      rangeEach(0, rowCount - 1, function (rowIndex) {\n        rangeEach(0, colCount - 1, function (colIndex) {\n          var cellData = _this4.hot.getDataAtCell(rowIndex, colIndex);\n\n          var cellProperties = _this4.hot.getCellMeta(rowIndex, colIndex);\n\n          var cellCallback = cellProperties.search.callback || callback;\n          var cellQueryMethod = cellProperties.search.queryMethod || queryMethod;\n          var testResult = cellQueryMethod(queryStr, cellData, cellProperties);\n\n          if (testResult) {\n            var singleResult = {\n              row: rowIndex,\n              col: colIndex,\n              data: cellData\n            };\n            queryResult.push(singleResult);\n          }\n\n          if (cellCallback) {\n            cellCallback(instance, rowIndex, colIndex, cellData, testResult);\n          }\n        });\n      });\n      return queryResult;\n    }\n    /**\n     * Gets the callback function.\n     *\n     * @returns {Function} Return the callback function.\n     */\n\n  }, {\n    key: \"getCallback\",\n    value: function getCallback() {\n      return this.callback;\n    }\n    /**\n     * Sets the callback function. This function will be called during querying for each cell.\n     *\n     * @param {Function} newCallback\n     */\n\n  }, {\n    key: \"setCallback\",\n    value: function setCallback(newCallback) {\n      this.callback = newCallback;\n    }\n    /**\n     * Gets the query method function.\n     *\n     * @returns {Function} Return the query method.\n     */\n\n  }, {\n    key: \"getQueryMethod\",\n    value: function getQueryMethod() {\n      return this.queryMethod;\n    }\n    /**\n     * Sets the query method function. The function is responsible for determining whether a query matches the value stored in a cell.\n     *\n     * @param {Function} newQueryMethod\n     */\n\n  }, {\n    key: \"setQueryMethod\",\n    value: function setQueryMethod(newQueryMethod) {\n      this.queryMethod = newQueryMethod;\n    }\n    /**\n     * Gets search result cells class name.\n     *\n     * @returns {String} Return the cell class name.\n     */\n\n  }, {\n    key: \"getSearchResultClass\",\n    value: function getSearchResultClass() {\n      return this.searchResultClass;\n    }\n    /**\n     * Sets search result cells class name. This class name will be added to each cell that belongs to the searched query.\n     *\n     * @param {String} newElementClass\n     */\n\n  }, {\n    key: \"setSearchResultClass\",\n    value: function setSearchResultClass(newElementClass) {\n      this.searchResultClass = newElementClass;\n    }\n    /**\n     * Updates the settings of the plugin.\n     *\n     * @param {Object} searchSettings The plugin settings, taken from Handsontable configuration.\n     * @private\n     */\n\n  }, {\n    key: \"updatePluginSettings\",\n    value: function updatePluginSettings(searchSettings) {\n      if (isObject(searchSettings)) {\n        if (searchSettings.searchResultClass) {\n          this.setSearchResultClass(searchSettings.searchResultClass);\n        }\n\n        if (searchSettings.queryMethod) {\n          this.setQueryMethod(searchSettings.queryMethod);\n        }\n\n        if (searchSettings.callback) {\n          this.setCallback(searchSettings.callback);\n        }\n      }\n    }\n    /** *\n     * The `beforeRenderer` hook callback.\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {Number} row Visual row index.\n     * @param {Number} col Visual column index.\n     * @param {String | Number} prop Column property name or a column index, if datasource is an array of arrays.\n     * @param {String} value Value of the rendered cell.\n     * @param {Object} cellProperties Object containing the cell's properties.\n     */\n\n  }, {\n    key: \"onBeforeRenderer\",\n    value: function onBeforeRenderer(TD, row, col, prop, value, cellProperties) {\n      // TODO: #4972\n      var className = cellProperties.className || [];\n      var classArray = [];\n\n      if (typeof className === 'string') {\n        classArray = className.split(' ');\n      } else {\n        var _classArray;\n\n        (_classArray = classArray).push.apply(_classArray, _toConsumableArray(className));\n      }\n\n      if (this.isEnabled() && cellProperties.isSearchResult) {\n        if (!classArray.includes(this.searchResultClass)) {\n          classArray.push(\"\".concat(this.searchResultClass));\n        }\n      } else if (classArray.includes(this.searchResultClass)) {\n        classArray.splice(classArray.indexOf(this.searchResultClass), 1);\n      }\n\n      cellProperties.className = classArray.join(' ');\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Search.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return Search;\n}(BasePlugin);\n\nregisterPlugin('search', Search);\nexport default Search;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/plugins/search/search.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Object","toString","call","Array","from","isArray","i","arr2","length","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","value","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","registerPlugin","isObject","rangeEach","isUndefined","DEFAULT_SEARCH_RESULT_CLASS","DEFAULT_CALLBACK","row","col","data","testResult","getCellMeta","isSearchResult","DEFAULT_QUERY_METHOD","query","toLowerCase","indexOf","Search","_BasePlugin","hotInstance","_this","callback","queryMethod","searchResultClass","isEnabled","hot","getSettings","search","enablePlugin","_this2","enabled","searchSettings","updatePluginSettings","addHook","onBeforeRenderer","apply","arguments","disablePlugin","_this3","beforeRendererCallback","addHookOnce","removeHook","updatePlugin","queryStr","_this4","undefined","getCallback","getQueryMethod","rowCount","countRows","colCount","countCols","queryResult","rowIndex","colIndex","cellData","getDataAtCell","cellProperties","cellCallback","cellQueryMethod","singleResult","push","setCallback","newCallback","setQueryMethod","newQueryMethod","getSearchResultClass","setSearchResultClass","newElementClass","TD","prop","className","classArray","split","_classArray","includes","concat","splice","join","destroy"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.search\";\nimport \"core-js/modules/es.string.split\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from './../_base';\nimport { registerPlugin } from './../../plugins';\nimport { isObject } from './../../helpers/object';\nimport { rangeEach } from './../../helpers/number';\nimport { isUndefined } from './../../helpers/mixed';\nvar DEFAULT_SEARCH_RESULT_CLASS = 'htSearchResult';\n\nvar DEFAULT_CALLBACK = function DEFAULT_CALLBACK(instance, row, col, data, testResult) {\n  instance.getCellMeta(row, col).isSearchResult = testResult;\n};\n\nvar DEFAULT_QUERY_METHOD = function DEFAULT_QUERY_METHOD(query, value) {\n  if (isUndefined(query) || query === null || !query.toLowerCase || query.length === 0) {\n    return false;\n  }\n\n  if (isUndefined(value) || value === null) {\n    return false;\n  }\n\n  return value.toString().toLowerCase().indexOf(query.toLowerCase()) !== -1;\n};\n/**\n * @plugin Search\n *\n * @description\n * The search plugin provides an easy interface to search data across Handsontable.\n *\n * In order to enable search mechanism, {@link Options#search} option must be set to `true`.\n *\n * @example\n * ```js\n * // as boolean\n * search: true\n * // as a object with one or more options\n * search: {\n *   callback: myNewCallbackFunction,\n *   queryMethod: myNewQueryMethod,\n *   searchResultClass: 'customClass'\n * }\n *\n * // Access to search plugin instance:\n * const searchPlugin = hot.getPlugin('search');\n *\n * // Set callback programmatically:\n * searchPlugin.setCallback(myNewCallbackFunction);\n * // Set query method programmatically:\n * searchPlugin.setQueryMethod(myNewQueryMethod);\n * // Set search result cells class programmatically:\n * searchPlugin.setSearchResultClass(customClass);\n * ```\n */\n\n\nvar Search =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(Search, _BasePlugin);\n\n  function Search(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, hotInstance));\n    /**\n     * Function called during querying for each cell from the {@link DataMap}.\n     *\n     * @private\n     * @type {Function}\n     */\n\n    _this.callback = DEFAULT_CALLBACK;\n    /**\n     * Query function is responsible for determining whether a query matches the value stored in a cell.\n     *\n     * @private\n     * @type {Function}\n     */\n\n    _this.queryMethod = DEFAULT_QUERY_METHOD;\n    /**\n     * Class name added to each cell that belongs to the searched query.\n     *\n     * @private\n     * @type {String}\n     */\n\n    _this.searchResultClass = DEFAULT_SEARCH_RESULT_CLASS;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Search, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.hot.getSettings().search;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      var searchSettings = this.hot.getSettings().search;\n      this.updatePluginSettings(searchSettings);\n      this.addHook('beforeRenderer', function () {\n        return _this2.onBeforeRenderer.apply(_this2, arguments);\n      });\n\n      _get(_getPrototypeOf(Search.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      var _this3 = this;\n\n      var beforeRendererCallback = function beforeRendererCallback() {\n        return _this3.onBeforeRenderer.apply(_this3, arguments);\n      };\n\n      this.hot.addHook('beforeRenderer', beforeRendererCallback);\n      this.hot.addHookOnce('afterRender', function () {\n        _this3.hot.removeHook('beforeRenderer', beforeRendererCallback);\n      });\n\n      _get(_getPrototypeOf(Search.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(Search.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Makes the query.\n     *\n     * @param {String} queryStr Value to be search.\n     * @param {Function} [callback] Callback function performed on cells with values which matches to the searched query.\n     * @param {Function} [queryMethod] Query function responsible for determining whether a query matches the value stored in a cell.\n     * @returns {Object[]} Return an array of objects with `row`, `col`, `data` properties or empty array.\n     */\n\n  }, {\n    key: \"query\",\n    value: function query(queryStr) {\n      var _this4 = this;\n\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getCallback();\n      var queryMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.getQueryMethod();\n      var rowCount = this.hot.countRows();\n      var colCount = this.hot.countCols();\n      var queryResult = [];\n      var instance = this.hot;\n      rangeEach(0, rowCount - 1, function (rowIndex) {\n        rangeEach(0, colCount - 1, function (colIndex) {\n          var cellData = _this4.hot.getDataAtCell(rowIndex, colIndex);\n\n          var cellProperties = _this4.hot.getCellMeta(rowIndex, colIndex);\n\n          var cellCallback = cellProperties.search.callback || callback;\n          var cellQueryMethod = cellProperties.search.queryMethod || queryMethod;\n          var testResult = cellQueryMethod(queryStr, cellData, cellProperties);\n\n          if (testResult) {\n            var singleResult = {\n              row: rowIndex,\n              col: colIndex,\n              data: cellData\n            };\n            queryResult.push(singleResult);\n          }\n\n          if (cellCallback) {\n            cellCallback(instance, rowIndex, colIndex, cellData, testResult);\n          }\n        });\n      });\n      return queryResult;\n    }\n    /**\n     * Gets the callback function.\n     *\n     * @returns {Function} Return the callback function.\n     */\n\n  }, {\n    key: \"getCallback\",\n    value: function getCallback() {\n      return this.callback;\n    }\n    /**\n     * Sets the callback function. This function will be called during querying for each cell.\n     *\n     * @param {Function} newCallback\n     */\n\n  }, {\n    key: \"setCallback\",\n    value: function setCallback(newCallback) {\n      this.callback = newCallback;\n    }\n    /**\n     * Gets the query method function.\n     *\n     * @returns {Function} Return the query method.\n     */\n\n  }, {\n    key: \"getQueryMethod\",\n    value: function getQueryMethod() {\n      return this.queryMethod;\n    }\n    /**\n     * Sets the query method function. The function is responsible for determining whether a query matches the value stored in a cell.\n     *\n     * @param {Function} newQueryMethod\n     */\n\n  }, {\n    key: \"setQueryMethod\",\n    value: function setQueryMethod(newQueryMethod) {\n      this.queryMethod = newQueryMethod;\n    }\n    /**\n     * Gets search result cells class name.\n     *\n     * @returns {String} Return the cell class name.\n     */\n\n  }, {\n    key: \"getSearchResultClass\",\n    value: function getSearchResultClass() {\n      return this.searchResultClass;\n    }\n    /**\n     * Sets search result cells class name. This class name will be added to each cell that belongs to the searched query.\n     *\n     * @param {String} newElementClass\n     */\n\n  }, {\n    key: \"setSearchResultClass\",\n    value: function setSearchResultClass(newElementClass) {\n      this.searchResultClass = newElementClass;\n    }\n    /**\n     * Updates the settings of the plugin.\n     *\n     * @param {Object} searchSettings The plugin settings, taken from Handsontable configuration.\n     * @private\n     */\n\n  }, {\n    key: \"updatePluginSettings\",\n    value: function updatePluginSettings(searchSettings) {\n      if (isObject(searchSettings)) {\n        if (searchSettings.searchResultClass) {\n          this.setSearchResultClass(searchSettings.searchResultClass);\n        }\n\n        if (searchSettings.queryMethod) {\n          this.setQueryMethod(searchSettings.queryMethod);\n        }\n\n        if (searchSettings.callback) {\n          this.setCallback(searchSettings.callback);\n        }\n      }\n    }\n    /** *\n     * The `beforeRenderer` hook callback.\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {Number} row Visual row index.\n     * @param {Number} col Visual column index.\n     * @param {String | Number} prop Column property name or a column index, if datasource is an array of arrays.\n     * @param {String} value Value of the rendered cell.\n     * @param {Object} cellProperties Object containing the cell's properties.\n     */\n\n  }, {\n    key: \"onBeforeRenderer\",\n    value: function onBeforeRenderer(TD, row, col, prop, value, cellProperties) {\n      // TODO: #4972\n      var className = cellProperties.className || [];\n      var classArray = [];\n\n      if (typeof className === 'string') {\n        classArray = className.split(' ');\n      } else {\n        var _classArray;\n\n        (_classArray = classArray).push.apply(_classArray, _toConsumableArray(className));\n      }\n\n      if (this.isEnabled() && cellProperties.isSearchResult) {\n        if (!classArray.includes(this.searchResultClass)) {\n          classArray.push(\"\".concat(this.searchResultClass));\n        }\n      } else if (classArray.includes(this.searchResultClass)) {\n        classArray.splice(classArray.indexOf(this.searchResultClass), 1);\n      }\n\n      cellProperties.className = classArray.join(' ');\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Search.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return Search;\n}(BasePlugin);\n\nregisterPlugin('search', Search);\nexport default Search;"]},"metadata":{},"sourceType":"module"}