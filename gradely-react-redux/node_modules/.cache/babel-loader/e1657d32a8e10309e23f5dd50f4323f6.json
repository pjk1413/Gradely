{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport { getValidSelection } from './../utils';\nimport * as C from './../../../i18n/constants';\nexport var KEY = 'clear_column';\nexport default function clearColumnItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_CLEAR_COLUMN);\n    },\n    callback: function callback(key, selection) {\n      var column = selection[0].start.col;\n\n      if (this.countRows()) {\n        this.populateFromArray(0, column, [[null]], Math.max(selection[0].start.row, selection[0].end.row), column, 'ContextMenu.clearColumn');\n      }\n    },\n    disabled: function disabled() {\n      var selected = getValidSelection(this);\n\n      if (!selected) {\n        return true;\n      }\n\n      var _selected$ = _slicedToArray(selected[0], 3),\n          startRow = _selected$[0],\n          startColumn = _selected$[1],\n          endRow = _selected$[2];\n\n      var entireRowSelection = [startRow, 0, endRow, this.countCols() - 1];\n      var rowSelected = entireRowSelection.join(',') === selected.join(',');\n      return startColumn < 0 || this.countCols() >= this.getSettings().maxCols || rowSelected;\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/node_modules/handsontable/es/plugins/contextMenu/predefinedItems/clearColumn.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","getValidSelection","C","KEY","clearColumnItem","key","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_CLEAR_COLUMN","callback","selection","column","start","col","countRows","populateFromArray","Math","max","row","end","disabled","selected","_selected$","startRow","startColumn","endRow","entireRowSelection","countCols","rowSelected","join","getSettings","maxCols"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { getValidSelection } from './../utils';\nimport * as C from './../../../i18n/constants';\nexport var KEY = 'clear_column';\nexport default function clearColumnItem() {\n  return {\n    key: KEY,\n    name: function name() {\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_CLEAR_COLUMN);\n    },\n    callback: function callback(key, selection) {\n      var column = selection[0].start.col;\n\n      if (this.countRows()) {\n        this.populateFromArray(0, column, [[null]], Math.max(selection[0].start.row, selection[0].end.row), column, 'ContextMenu.clearColumn');\n      }\n    },\n    disabled: function disabled() {\n      var selected = getValidSelection(this);\n\n      if (!selected) {\n        return true;\n      }\n\n      var _selected$ = _slicedToArray(selected[0], 3),\n          startRow = _selected$[0],\n          startColumn = _selected$[1],\n          endRow = _selected$[2];\n\n      var entireRowSelection = [startRow, 0, endRow, this.countCols() - 1];\n      var rowSelected = entireRowSelection.join(',') === selected.join(',');\n      return startColumn < 0 || this.countCols() >= this.getSettings().maxCols || rowSelected;\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}