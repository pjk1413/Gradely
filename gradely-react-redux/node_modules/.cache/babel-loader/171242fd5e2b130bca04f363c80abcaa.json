{"ast":null,"code":"import { axios } from 'axios';\nimport { HOLD_EDIT_USER, UPDATE_STUDENT, UPDATE_USER, HOLD_EDIT_COURSE, HOLD_ADD_STUDENT } from '../action/types';\nimport { HOLD_EDIT_USER_TYPE } from './../action/types'; //Reducer is a switch statement with actions and defines those actions\n\nconst initialState = {}; //Is it better to return the list from the API call and set state to that, or update state on my own\n\nconst tempReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HOLD_ADD_STUDENT:\n      let temp = [];\n\n      if (state.studentList) {\n        state.studentList(action.payload);\n        temp = state.studentList;\n        temp = state.studentList.push(action.payload);\n      } else {\n        temp.push(action.payload);\n      }\n\n      return { ...state,\n        studentList: temp\n      };\n\n    case UPDATE_USER:\n      let newTemp = { ...state.editUser\n      };\n      newTemp.user = action.payload;\n      return { ...state,\n        editUser: newTemp\n      };\n\n    case UPDATE_STUDENT:\n      return { ...state,\n        editUser: action.payload\n      };\n\n    case HOLD_EDIT_USER:\n      return { ...state,\n        editUser: action.payload\n      };\n\n    case HOLD_EDIT_USER_TYPE:\n      return { ...state,\n        editUserType: action.payload\n      };\n\n    case HOLD_EDIT_COURSE:\n      return { ...state,\n        editCourse: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default tempReducer;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/reducer/tempReducer.js"],"names":["axios","HOLD_EDIT_USER","UPDATE_STUDENT","UPDATE_USER","HOLD_EDIT_COURSE","HOLD_ADD_STUDENT","HOLD_EDIT_USER_TYPE","initialState","tempReducer","state","action","type","temp","studentList","payload","push","newTemp","editUser","user","editUserType","editCourse"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,WAAzC,EAAsDC,gBAAtD,EAAwEC,gBAAxE,QAAgG,iBAAhG;AACA,SAASC,mBAAT,QAAoC,mBAApC,C,CACA;;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKN,gBAAL;AACI,UAAIO,IAAI,GAAG,EAAX;;AACA,UAAGH,KAAK,CAACI,WAAT,EAAsB;AAClBJ,QAAAA,KAAK,CAACI,WAAN,CAAkBH,MAAM,CAACI,OAAzB;AACAF,QAAAA,IAAI,GAAGH,KAAK,CAACI,WAAb;AACAD,QAAAA,IAAI,GAAGH,KAAK,CAACI,WAAN,CAAkBE,IAAlB,CAAuBL,MAAM,CAACI,OAA9B,CAAP;AACH,OAJD,MAIO;AACHF,QAAAA,IAAI,CAACG,IAAL,CAAUL,MAAM,CAACI,OAAjB;AACH;;AAED,aAAO,EACH,GAAGL,KADA;AAEHI,QAAAA,WAAW,EAAED;AAFV,OAAP;;AAIJ,SAAKT,WAAL;AAEI,UAAIa,OAAO,GAAG,EACV,GAAGP,KAAK,CAACQ;AADC,OAAd;AAGAD,MAAAA,OAAO,CAACE,IAAR,GAAeR,MAAM,CAACI,OAAtB;AACA,aAAO,EACH,GAAGL,KADA;AAEHQ,QAAAA,QAAQ,EAAED;AAFP,OAAP;;AAIJ,SAAKd,cAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHQ,QAAAA,QAAQ,EAAEP,MAAM,CAACI;AAFd,OAAP;;AAIJ,SAAKb,cAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHQ,QAAAA,QAAQ,EAAEP,MAAM,CAACI;AAFd,OAAP;;AAIJ,SAAKR,mBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHU,QAAAA,YAAY,EAAET,MAAM,CAACI;AAFlB,OAAP;;AAIJ,SAAKV,gBAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHW,QAAAA,UAAU,EAAEV,MAAM,CAACI;AAFhB,OAAP;;AAIJ;AACI,aAAOL,KAAP;AA/CR;AAiDH,CAlDD;;AAoDA,eAAeD,WAAf","sourcesContent":["import { axios } from 'axios';\r\nimport { HOLD_EDIT_USER, UPDATE_STUDENT, UPDATE_USER, HOLD_EDIT_COURSE, HOLD_ADD_STUDENT } from '../action/types';\r\nimport { HOLD_EDIT_USER_TYPE } from './../action/types';\r\n//Reducer is a switch statement with actions and defines those actions\r\n\r\nconst initialState = {}\r\n\r\n//Is it better to return the list from the API call and set state to that, or update state on my own\r\nconst tempReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case HOLD_ADD_STUDENT:\r\n            let temp = []\r\n            if(state.studentList) {\r\n                state.studentList(action.payload)\r\n                temp = state.studentList\r\n                temp = state.studentList.push(action.payload)\r\n            } else {\r\n                temp.push(action.payload)\r\n            }\r\n            \r\n            return {\r\n                ...state,\r\n                studentList: temp\r\n            }\r\n        case UPDATE_USER: \r\n            \r\n            let newTemp = {\r\n                ...state.editUser\r\n            }\r\n            newTemp.user = action.payload\r\n            return {\r\n                ...state,\r\n                editUser: newTemp\r\n            }\r\n        case UPDATE_STUDENT:\r\n            return {\r\n                ...state,\r\n                editUser: action.payload\r\n            }\r\n        case HOLD_EDIT_USER:\r\n            return {\r\n                ...state,\r\n                editUser: action.payload\r\n            };\r\n        case HOLD_EDIT_USER_TYPE:\r\n            return {\r\n                ...state,\r\n                editUserType: action.payload\r\n            }\r\n        case HOLD_EDIT_COURSE:\r\n            return {\r\n                ...state,\r\n                editCourse: action.payload\r\n              }\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport default tempReducer;\r\n"]},"metadata":{},"sourceType":"module"}