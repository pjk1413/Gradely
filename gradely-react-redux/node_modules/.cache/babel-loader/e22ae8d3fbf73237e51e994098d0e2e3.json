{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\main_page\\\\messaging\\\\MessagePreview.js\";\nimport React, { Component } from 'react';\nimport Read from \"../../../images/icons/book.svg\";\nimport Replay from \"../../../images/icons/reply.svg\";\nimport Delete from \"../../../images/icons/trash.svg\";\nimport Tag from \"../../../images/icons/tag.svg\";\nimport { connect } from 'react-redux';\nimport { removeUserFromMessage } from './../../../action/userActions';\nimport { addUserToList } from './../../../action/tempActions';\n\nclass MessagePreview extends Component {\n  constructor() {\n    super();\n    this.handleReply = this.handleReply.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleDelete() {\n    const userId = this.props.message.sentById;\n    const messageId = this.props.message.id;\n    this.props.removeUserFromMessage(userId, messageId);\n  }\n\n  handleReply() {\n    this.props.addUserToList(this.props.message.sentById);\n  }\n\n  length(text) {\n    const MAX_LENGTH = 30;\n    let message = text;\n\n    if ((message && message.length) > MAX_LENGTH) {\n      message = message.slice(0, MAX_LENGTH) + \"...\";\n    }\n\n    return message;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-small text-nowrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, this.length(this.props.message.sentByName && this.props.message.sentByName)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-small text-nowrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, this.length(this.props.message.sentByEmail && this.props.message.sentByEmail)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-small text-nowrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, this.length(this.props.message.subject)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-small text-nowrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, this.length(this.props.message.bodyText)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row w-100 float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.handleRead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"25\",\n      height: \"25\",\n      src: Read,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#writeMessage\",\n      onClick: this.handleReply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"25\",\n      height: \"25\",\n      src: Replay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"25\",\n      height: \"25\",\n      src: Delete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messages: state.user.messages,\n  mailList: state.temp.mailList\n});\n\nexport default connect(mapStateToProps, {\n  removeUserFromMessage,\n  addUser\n})(MessagePreview);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/main_page/messaging/MessagePreview.js"],"names":["React","Component","connect","removeUserFromMessage","addUserToList","MessagePreview","constructor","handleReply","bind","handleDelete","userId","props","message","sentById","messageId","id","length","text","MAX_LENGTH","slice","render","sentByName","sentByEmail","subject","bodyText","handleRead","Read","Replay","Delete","mapStateToProps","state","messages","user","mailList","temp","addUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Read from '../../../images/icons/book.svg'\r\nimport Replay from '../../../images/icons/reply.svg'\r\nimport Delete from '../../../images/icons/trash.svg'\r\nimport Tag from '../../../images/icons/tag.svg'\r\nimport { connect } from 'react-redux'\r\nimport { removeUserFromMessage } from './../../../action/userActions'\r\nimport { addUserToList } from './../../../action/tempActions';\r\n\r\nclass MessagePreview extends Component {\r\n    constructor() {\r\n        super()\r\n        this.handleReply = this.handleReply.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    handleDelete() {\r\n        const userId = this.props.message.sentById\r\n        const messageId = this.props.message.id\r\n        this.props.removeUserFromMessage(userId, messageId);\r\n    }\r\n\r\n    handleReply() {\r\n        this.props.addUserToList(this.props.message.sentById)\r\n    }\r\n\r\n    length(text) {\r\n        const MAX_LENGTH = 30;\r\n        let message = text;\r\n\r\n        if ((message && message.length) > MAX_LENGTH) {\r\n            message = message.slice(0, MAX_LENGTH) + \"...\";\r\n        }\r\n\r\n        return message\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <tr>\r\n                <th scope=\"row\"></th>\r\n                <td className=\"text-small text-nowrap\">{this.length(this.props.message.sentByName && this.props.message.sentByName)}</td>\r\n                <td className=\"text-small text-nowrap\">{this.length(this.props.message.sentByEmail && this.props.message.sentByEmail)}</td>\r\n                <td className=\"text-small text-nowrap\">{this.length(this.props.message.subject)}</td>\r\n                <td className=\"text-small text-nowrap\">{this.length(this.props.message.bodyText)}</td>\r\n                <td className=\"\">\r\n                <div className=\"row w-100 float-right\">\r\n                <button className=\"btn\" onClick={this.handleRead}>\r\n                    <img width=\"25\" height=\"25\" src={Read}/>\r\n                </button>\r\n                <button className=\"btn\" data-toggle='modal' data-target=\"#writeMessage\" onClick={this.handleReply}>\r\n                    <img width=\"25\" height=\"25\" src={Replay}/>\r\n                </button>\r\n                <button className=\"btn\" onClick={this.handleDelete}>\r\n                    <img width=\"25\" height=\"25\" src={Delete}/>\r\n                </button>\r\n                {/* <button className=\"btn\" onClick={this.handle}>\r\n                    <img width=\"25\" height=\"25\" src={Tag}/>\r\n                </button> */}\r\n                \r\n\r\n                </div>\r\n            </td>\r\n         \r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    messages: state.user.messages,\r\n    mailList: state.temp.mailList\r\n})\r\n\r\nexport default connect(mapStateToProps, { removeUserFromMessage, addUser })(MessagePreview);"]},"metadata":{},"sourceType":"module"}