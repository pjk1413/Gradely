{"ast":null,"code":"/**\n * autoResize - resizes a DOM element to the width and height of another DOM element\n *\n * Copyright 2014, Marcin Warpechowski\n * Licensed under the MIT license\n */\nfunction autoResize() {\n  var defaults = {\n    minHeight: 200,\n    maxHeight: 300,\n    minWidth: 100,\n    maxWidth: 300\n  },\n      el,\n      body = document.body,\n      text = document.createTextNode(''),\n      span = document.createElement('SPAN'),\n      observe = function (element, event, handler) {\n    element.addEventListener(event, handler, false);\n  },\n      unObserve = function (element, event, handler) {\n    element.removeEventListener(event, handler, false);\n  },\n      resize = function (newChar) {\n    var width, scrollHeight;\n\n    if (!newChar) {\n      newChar = \"\";\n    } else if (!/^[a-zA-Z \\.,\\\\\\/\\|0-9]$/.test(newChar)) {\n      newChar = \".\";\n    }\n\n    if (text.textContent !== void 0) {\n      text.textContent = el.value + newChar;\n    } else {\n      text.data = el.value + newChar; //IE8\n    }\n\n    span.style.fontSize = getComputedStyle(el).fontSize;\n    span.style.fontFamily = getComputedStyle(el).fontFamily;\n    span.style.whiteSpace = \"pre\";\n    body.appendChild(span);\n    width = span.clientWidth + 2;\n    body.removeChild(span);\n    el.style.height = defaults.minHeight + 'px';\n\n    if (defaults.minWidth > width) {\n      el.style.width = defaults.minWidth + 'px';\n    } else if (width > defaults.maxWidth) {\n      el.style.width = defaults.maxWidth + 'px';\n    } else {\n      el.style.width = width + 'px';\n    }\n\n    scrollHeight = el.scrollHeight ? el.scrollHeight - 1 : 0;\n\n    if (defaults.minHeight > scrollHeight) {\n      el.style.height = defaults.minHeight + 'px';\n    } else if (defaults.maxHeight < scrollHeight) {\n      el.style.height = defaults.maxHeight + 'px';\n      el.style.overflowY = 'visible';\n    } else {\n      el.style.height = scrollHeight + 'px';\n    }\n  },\n      delayedResize = function () {\n    window.setTimeout(resize, 0);\n  },\n      extendDefaults = function (config) {\n    if (config && config.minHeight) {\n      if (config.minHeight == 'inherit') {\n        defaults.minHeight = el.clientHeight;\n      } else {\n        var minHeight = parseInt(config.minHeight);\n\n        if (!isNaN(minHeight)) {\n          defaults.minHeight = minHeight;\n        }\n      }\n    }\n\n    if (config && config.maxHeight) {\n      if (config.maxHeight == 'inherit') {\n        defaults.maxHeight = el.clientHeight;\n      } else {\n        var maxHeight = parseInt(config.maxHeight);\n\n        if (!isNaN(maxHeight)) {\n          defaults.maxHeight = maxHeight;\n        }\n      }\n    }\n\n    if (config && config.minWidth) {\n      if (config.minWidth == 'inherit') {\n        defaults.minWidth = el.clientWidth;\n      } else {\n        var minWidth = parseInt(config.minWidth);\n\n        if (!isNaN(minWidth)) {\n          defaults.minWidth = minWidth;\n        }\n      }\n    }\n\n    if (config && config.maxWidth) {\n      if (config.maxWidth == 'inherit') {\n        defaults.maxWidth = el.clientWidth;\n      } else {\n        var maxWidth = parseInt(config.maxWidth);\n\n        if (!isNaN(maxWidth)) {\n          defaults.maxWidth = maxWidth;\n        }\n      }\n    }\n\n    if (!span.firstChild) {\n      span.className = \"autoResize\";\n      span.style.display = 'inline-block';\n      span.appendChild(text);\n    }\n  },\n      init = function (el_, config, doObserve) {\n    el = el_;\n    extendDefaults(config);\n\n    if (el.nodeName == 'TEXTAREA') {\n      el.style.resize = 'none';\n      el.style.overflowY = '';\n      el.style.height = defaults.minHeight + 'px';\n      el.style.minWidth = defaults.minWidth + 'px';\n      el.style.maxWidth = defaults.maxWidth + 'px';\n      el.style.overflowY = 'hidden';\n    }\n\n    if (doObserve) {\n      observe(el, 'change', resize);\n      observe(el, 'cut', delayedResize);\n      observe(el, 'paste', delayedResize);\n      observe(el, 'drop', delayedResize);\n      observe(el, 'keydown', delayedResize);\n      observe(el, 'focus', resize);\n      observe(el, 'compositionstart', delayedResize);\n      observe(el, 'compositionupdate', delayedResize);\n      observe(el, 'compositionend', delayedResize);\n    }\n\n    resize();\n  };\n\n  function getComputedStyle(element) {\n    return element.currentStyle || document.defaultView.getComputedStyle(element);\n  }\n\n  return {\n    init: function (el_, config, doObserve) {\n      init(el_, config, doObserve);\n    },\n    unObserve: function () {\n      unObserve(el, 'change', resize);\n      unObserve(el, 'cut', delayedResize);\n      unObserve(el, 'paste', delayedResize);\n      unObserve(el, 'drop', delayedResize);\n      unObserve(el, 'keydown', delayedResize);\n      unObserve(el, 'focus', resize);\n      unObserve(el, 'compositionstart', delayedResize);\n      unObserve(el, 'compositionupdate', delayedResize);\n      unObserve(el, 'compositionend', delayedResize);\n    },\n    resize: resize\n  };\n}\n\nif (typeof exports !== 'undefined') {\n  module.exports = autoResize;\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/lib/autoResize/autoResize.js"],"names":["autoResize","defaults","minHeight","maxHeight","minWidth","maxWidth","el","body","document","text","createTextNode","span","createElement","observe","element","event","handler","addEventListener","unObserve","removeEventListener","resize","newChar","width","scrollHeight","test","textContent","value","data","style","fontSize","getComputedStyle","fontFamily","whiteSpace","appendChild","clientWidth","removeChild","height","overflowY","delayedResize","window","setTimeout","extendDefaults","config","clientHeight","parseInt","isNaN","firstChild","className","display","init","el_","doObserve","nodeName","currentStyle","defaultView","exports","module"],"mappings":"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","sourcesContent":["/**\n * autoResize - resizes a DOM element to the width and height of another DOM element\n *\n * Copyright 2014, Marcin Warpechowski\n * Licensed under the MIT license\n */\n\n\nfunction autoResize() {\n  var defaults = {\n      minHeight: 200,\n      maxHeight: 300,\n      minWidth: 100,\n      maxWidth: 300\n    },\n    el,\n    body = document.body,\n    text = document.createTextNode(''),\n    span = document.createElement('SPAN'),\n    observe = function (element, event, handler) {\n      element.addEventListener(event, handler, false);\n    },\n    unObserve = function (element, event, handler) {\n      element.removeEventListener(event, handler, false);\n    },\n    resize = function (newChar) {\n      var width, scrollHeight;\n\n      if (!newChar) {\n        newChar = \"\";\n      } else if (!/^[a-zA-Z \\.,\\\\\\/\\|0-9]$/.test(newChar)) {\n        newChar = \".\";\n      }\n\n      if (text.textContent !== void 0) {\n        text.textContent = el.value + newChar;\n      }\n      else {\n        text.data = el.value + newChar; //IE8\n      }\n      span.style.fontSize = getComputedStyle(el).fontSize;\n      span.style.fontFamily = getComputedStyle(el).fontFamily;\n      span.style.whiteSpace = \"pre\";\n\n      body.appendChild(span);\n      width = span.clientWidth + 2;\n      body.removeChild(span);\n\n      el.style.height = defaults.minHeight + 'px';\n\n      if (defaults.minWidth > width) {\n        el.style.width = defaults.minWidth + 'px';\n\n      } else if (width > defaults.maxWidth) {\n        el.style.width = defaults.maxWidth + 'px';\n\n      } else {\n        el.style.width = width + 'px';\n      }\n      scrollHeight = el.scrollHeight ? el.scrollHeight - 1 : 0;\n\n      if (defaults.minHeight > scrollHeight) {\n        el.style.height = defaults.minHeight + 'px';\n\n      } else if (defaults.maxHeight < scrollHeight) {\n        el.style.height = defaults.maxHeight + 'px';\n        el.style.overflowY = 'visible';\n\n      } else {\n        el.style.height = scrollHeight + 'px';\n      }\n    },\n    delayedResize = function () {\n      window.setTimeout(resize, 0);\n    },\n    extendDefaults = function (config) {\n\n      if (config && config.minHeight) {\n        if (config.minHeight == 'inherit') {\n          defaults.minHeight = el.clientHeight;\n        } else {\n          var minHeight = parseInt(config.minHeight);\n          if (!isNaN(minHeight)) {\n            defaults.minHeight = minHeight;\n          }\n        }\n      }\n\n      if (config && config.maxHeight) {\n        if (config.maxHeight == 'inherit') {\n          defaults.maxHeight = el.clientHeight;\n        } else {\n          var maxHeight = parseInt(config.maxHeight);\n          if (!isNaN(maxHeight)) {\n            defaults.maxHeight = maxHeight;\n          }\n        }\n      }\n\n      if (config && config.minWidth) {\n        if (config.minWidth == 'inherit') {\n          defaults.minWidth = el.clientWidth;\n        } else {\n          var minWidth = parseInt(config.minWidth);\n          if (!isNaN(minWidth)) {\n            defaults.minWidth = minWidth;\n          }\n        }\n      }\n\n      if (config && config.maxWidth) {\n        if (config.maxWidth == 'inherit') {\n          defaults.maxWidth = el.clientWidth;\n        } else {\n          var maxWidth = parseInt(config.maxWidth);\n          if (!isNaN(maxWidth)) {\n            defaults.maxWidth = maxWidth;\n          }\n        }\n      }\n\n      if(!span.firstChild) {\n        span.className = \"autoResize\";\n        span.style.display = 'inline-block';\n        span.appendChild(text);\n      }\n    },\n    init = function (el_, config, doObserve) {\n      el = el_;\n      extendDefaults(config);\n\n      if (el.nodeName == 'TEXTAREA') {\n        el.style.resize = 'none';\n        el.style.overflowY = '';\n        el.style.height = defaults.minHeight + 'px';\n        el.style.minWidth = defaults.minWidth + 'px';\n        el.style.maxWidth = defaults.maxWidth + 'px';\n        el.style.overflowY = 'hidden';\n      }\n\n      if (doObserve) {\n        observe(el, 'change', resize);\n        observe(el, 'cut', delayedResize);\n        observe(el, 'paste', delayedResize);\n        observe(el, 'drop', delayedResize);\n        observe(el, 'keydown', delayedResize);\n        observe(el, 'focus', resize);\n        observe(el, 'compositionstart', delayedResize);\n        observe(el, 'compositionupdate', delayedResize);\n        observe(el, 'compositionend', delayedResize);\n      }\n\n      resize();\n    };\n\n  function getComputedStyle(element) {\n    return element.currentStyle || document.defaultView.getComputedStyle(element);\n  }\n\n  return {\n    init: function (el_, config, doObserve) {\n      init(el_, config, doObserve);\n    },\n    unObserve: function () {\n      unObserve(el, 'change', resize);\n      unObserve(el, 'cut', delayedResize);\n      unObserve(el, 'paste', delayedResize);\n      unObserve(el, 'drop', delayedResize);\n      unObserve(el, 'keydown', delayedResize);\n      unObserve(el, 'focus', resize);\n      unObserve(el, 'compositionstart', delayedResize);\n      unObserve(el, 'compositionupdate', delayedResize);\n      unObserve(el, 'compositionend', delayedResize);\n    },\n    resize: resize\n  };\n}\n\nif (typeof exports !== 'undefined') {\n  module.exports = autoResize;\n}\n"]},"metadata":{},"sourceType":"script"}