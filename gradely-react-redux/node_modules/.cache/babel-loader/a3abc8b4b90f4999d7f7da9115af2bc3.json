{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport React, { Component } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport { connect } from 'react-redux';\nimport { gridHandleChange } from './../../../action/tempActions';\nimport Handsontable from \"handsontable\";\nimport 'handsontable/dist/handsontable.full.css';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.state = {\n      changedRow: '',\n      changedProp: '',\n      newValue: ''\n    };\n  }\n\n  changeCells() {\n    console.log(\"CHANGE CELLS\");\n  }\n\n  setChanges(changes, data, settings) {\n    changes && changes.forEach(([row, prop, oldValue, newValue]) => {\n      if (oldValue !== newValue) {\n        this.setState({\n          changedRow: row,\n          changedProp: prop,\n          newValue: newValue\n        });\n        const ht = document.getElementById('hot-table');\n        Handsontable(ht).setDataAtRowProp(row, prop, newValue);\n      }\n    });\n    this.props.gridHandleChange(data);\n  }\n\n  componentWillReceiveProps() {\n    let colHeaders = [];\n    let columnSchema = [];\n    let rowHeaders = [];\n    let data = [];\n\n    if (this.props.editCourse && this.props.editCourse.students) {\n      rowHeaders = this.props.editCourse.students.map(student => {\n        //Creates an object that will be used to organize the data\n        let studentArray = [];\n        student.assignmentScores.forEach(score => {\n          studentArray.push([score.assignmentTempId, score.points]);\n        });\n        console.log(studentArray);\n        const temp = new Map(studentArray);\n        const studentObj = Object.fromEntries(temp);\n        data && data.push(studentObj); //Returns the heading\n\n        return student.user.firstName + \" \" + student.user.lastName;\n      });\n    }\n\n    if (this.props.editCourse && this.props.editCourse.assignments) {\n      //Sort by assignment ID\n      // ** Creates the column headers as well as colSchema //\n      // ***************************** //\n      colHeaders = this.props.editCourse.assignments.map(assignment => {\n        const colObj = {\n          data: assignment.id\n        };\n        columnSchema.push(colObj);\n        return assignment.name + \" (\" + assignment.totalPoints + \")\";\n      }); // ** Creates the row headers //\n    }\n\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      data: data,\n      colHeaders: colHeaders,\n      rowHeaders: rowHeaders,\n      rowHeaderWidth: 150,\n      columns: columnSchema,\n      // afterChange: (changes, source) => this.handleChange(changes, data, settings),\n      //row: rowStudentLabel,\n      // width: \"600\", \n      height: \"300\",\n      headerTooltips: {\n        rows: true,\n        columns: true,\n        onlyTrimmed: false\n      }\n    };\n    this.setState({\n      settings: settings,\n      colHeaders: colHeaders,\n      rowHeaders: rowHeaders,\n      columnSchema: columnSchema,\n      data: data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hot-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HotTable, {\n      id: \"hot-table\",\n      className: \"my-3\",\n      settings: this.state.settings,\n      afterChange: (changes, source) => {\n        this.setChanges(changes, source);\n      },\n      setDataAtRowProp: this.state.changes,\n      licenseKey: 'non-commercial-and-evaluation',\n      data: this.state.data,\n      colHeaders: this.state.colHeaders,\n      rowHeaders: this.state.rowHeaders,\n      rowHeaderWidth: 150,\n      columns: this.state.columnSchema // afterChange: (changes, source) => this.handleChange(changes, data, settings),\n      //row: rowStudentLabel,\n      // width: \"600\", \n      ,\n      height: \"300\",\n      headerTooltips: {\n        rows: true,\n        columns: true,\n        onlyTrimmed: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  data: state.temp.data\n});\n\nexport default connect(mapStateToProps, {\n  gridHandleChange\n})(Table);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/Table.js"],"names":["React","Component","HotTable","connect","gridHandleChange","Handsontable","Table","constructor","state","changedRow","changedProp","newValue","changeCells","console","log","setChanges","changes","data","settings","forEach","row","prop","oldValue","setState","ht","document","getElementById","setDataAtRowProp","props","componentWillReceiveProps","colHeaders","columnSchema","rowHeaders","editCourse","students","map","student","studentArray","assignmentScores","score","push","assignmentTempId","points","temp","Map","studentObj","Object","fromEntries","user","firstName","lastName","assignments","assignment","colObj","id","name","totalPoints","licenseKey","rowHeaderWidth","columns","height","headerTooltips","rows","onlyTrimmed","render","source","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { HotTable } from '@handsontable/react'\r\nimport { connect } from 'react-redux';\r\nimport { gridHandleChange } from './../../../action/tempActions'\r\nimport Handsontable from \"handsontable\";\r\nimport 'handsontable/dist/handsontable.full.css';\r\n\r\nclass Table extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            changedRow: '',\r\n            changedProp: '',\r\n            newValue: ''\r\n        }\r\n    }\r\n\r\n    changeCells() {\r\n        console.log(\"CHANGE CELLS\")\r\n    }\r\n\r\n    setChanges(changes, data, settings) {\r\n\r\n        changes && changes.forEach(([row, prop, oldValue, newValue]) => {\r\n            if (oldValue !== newValue) {\r\n                this.setState({\r\n                    changedRow: row,\r\n                    changedProp: prop,\r\n                    newValue: newValue\r\n                })\r\n                const ht = document.getElementById('hot-table')\r\n        Handsontable(ht).setDataAtRowProp(row, prop, newValue)\r\n            }\r\n        });\r\n        \r\n        this.props.gridHandleChange(data)\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        let colHeaders = []\r\n        let columnSchema = []\r\n        let rowHeaders = []\r\n        let data = []\r\n\r\n        if (this.props.editCourse && this.props.editCourse.students) {\r\n            rowHeaders = this.props.editCourse.students.map(student => {\r\n\r\n                //Creates an object that will be used to organize the data\r\n                let studentArray = []\r\n                student.assignmentScores.forEach(score => {\r\n                    studentArray.push([score.assignmentTempId, score.points])\r\n                });\r\n                console.log(studentArray)\r\n                const temp = new Map(studentArray)\r\n                const studentObj = Object.fromEntries(temp)\r\n\r\n                data && data.push(studentObj)\r\n\r\n                //Returns the heading\r\n                return student.user.firstName + \" \" + student.user.lastName\r\n            })\r\n\r\n\r\n\r\n        }\r\n\r\n        if (this.props.editCourse && this.props.editCourse.assignments) {\r\n\r\n            //Sort by assignment ID\r\n            // ** Creates the column headers as well as colSchema //\r\n            // ***************************** //\r\n            colHeaders = this.props.editCourse.assignments.map(assignment => {\r\n                const colObj = { data: assignment.id }\r\n                columnSchema.push(colObj)\r\n                return assignment.name + \" (\" + assignment.totalPoints + \")\"\r\n            })\r\n\r\n            // ** Creates the row headers //\r\n\r\n        }\r\n        \r\n        \r\n        const settings = {\r\n            licenseKey: 'non-commercial-and-evaluation',\r\n            data: data,\r\n            colHeaders: colHeaders,\r\n            rowHeaders: rowHeaders,\r\n            rowHeaderWidth: 150,\r\n            columns: columnSchema,\r\n            // afterChange: (changes, source) => this.handleChange(changes, data, settings),\r\n            //row: rowStudentLabel,\r\n            // width: \"600\", \r\n            height: \"300\",\r\n            headerTooltips: {\r\n                rows: true,\r\n                columns: true,\r\n                onlyTrimmed: false\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            settings: settings,\r\n            colHeaders: colHeaders,\r\n            rowHeaders: rowHeaders,\r\n            columnSchema: columnSchema,\r\n            data: data\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        \r\n\r\n\r\n\r\n\r\n        return (\r\n            <div id=\"hot-app\">\r\n                <HotTable \r\n                id=\"hot-table\" \r\n                className=\"my-3\" \r\n                settings={this.state.settings}\r\n                afterChange={(changes, source) => {this.setChanges(changes, source)}}\r\n                setDataAtRowProp={this.state.changes}\r\n                licenseKey={'non-commercial-and-evaluation'}\r\n                data={this.state.data}\r\n                colHeaders={this.state.colHeaders}\r\n                rowHeaders={this.state.rowHeaders}\r\n                rowHeaderWidth={150}\r\n                columns={this.state.columnSchema}\r\n            // afterChange: (changes, source) => this.handleChange(changes, data, settings),\r\n            //row: rowStudentLabel,\r\n            // width: \"600\", \r\n                height={\"300\"}\r\n                headerTooltips={{rows: true, columns: true, onlyTrimmed: false}}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    editCourse: state.temp.editCourse,\r\n    data: state.temp.data,\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { gridHandleChange })(Table)"]},"metadata":{},"sourceType":"module"}