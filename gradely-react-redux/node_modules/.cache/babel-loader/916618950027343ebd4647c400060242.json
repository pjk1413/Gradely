{"ast":null,"code":"import staticRegister from './../utils/staticRegister';\nimport baseRenderer from './_cellDecorator';\nimport autocompleteRenderer from './autocompleteRenderer';\nimport checkboxRenderer from './checkboxRenderer';\nimport htmlRenderer from './htmlRenderer';\nimport numericRenderer from './numericRenderer';\nimport passwordRenderer from './passwordRenderer';\nimport textRenderer from './textRenderer';\n\nvar _staticRegister = staticRegister('renderers'),\n    register = _staticRegister.register,\n    getItem = _staticRegister.getItem,\n    hasItem = _staticRegister.hasItem,\n    getNames = _staticRegister.getNames,\n    getValues = _staticRegister.getValues;\n\nregister('base', baseRenderer);\nregister('autocomplete', autocompleteRenderer);\nregister('checkbox', checkboxRenderer);\nregister('html', htmlRenderer);\nregister('numeric', numericRenderer);\nregister('password', passwordRenderer);\nregister('text', textRenderer);\n/**\n * Retrieve renderer function.\n *\n * @param {String} name Renderer identification.\n * @returns {Function} Returns renderer function.\n */\n\nfunction _getItem(name) {\n  if (typeof name === 'function') {\n    return name;\n  }\n\n  if (!hasItem(name)) {\n    throw Error(\"No registered renderer found under \\\"\".concat(name, \"\\\" name\"));\n  }\n\n  return getItem(name);\n}\n\nexport { register as registerRenderer, _getItem as getRenderer, hasItem as hasRenderer, getNames as getRegisteredRendererNames, getValues as getRegisteredRenderers };","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/renderers/index.js"],"names":["staticRegister","baseRenderer","autocompleteRenderer","checkboxRenderer","htmlRenderer","numericRenderer","passwordRenderer","textRenderer","_staticRegister","register","getItem","hasItem","getNames","getValues","_getItem","name","Error","concat","registerRenderer","getRenderer","hasRenderer","getRegisteredRendererNames","getRegisteredRenderers"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,IAAIC,eAAe,GAAGR,cAAc,CAAC,WAAD,CAApC;AAAA,IACIS,QAAQ,GAAGD,eAAe,CAACC,QAD/B;AAAA,IAEIC,OAAO,GAAGF,eAAe,CAACE,OAF9B;AAAA,IAGIC,OAAO,GAAGH,eAAe,CAACG,OAH9B;AAAA,IAIIC,QAAQ,GAAGJ,eAAe,CAACI,QAJ/B;AAAA,IAKIC,SAAS,GAAGL,eAAe,CAACK,SALhC;;AAOAJ,QAAQ,CAAC,MAAD,EAASR,YAAT,CAAR;AACAQ,QAAQ,CAAC,cAAD,EAAiBP,oBAAjB,CAAR;AACAO,QAAQ,CAAC,UAAD,EAAaN,gBAAb,CAAR;AACAM,QAAQ,CAAC,MAAD,EAASL,YAAT,CAAR;AACAK,QAAQ,CAAC,SAAD,EAAYJ,eAAZ,CAAR;AACAI,QAAQ,CAAC,UAAD,EAAaH,gBAAb,CAAR;AACAG,QAAQ,CAAC,MAAD,EAASF,YAAT,CAAR;AACA;;;;;;;AAOA,SAASO,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAOA,IAAP;AACD;;AAED,MAAI,CAACJ,OAAO,CAACI,IAAD,CAAZ,EAAoB;AAClB,UAAMC,KAAK,CAAC,wCAAwCC,MAAxC,CAA+CF,IAA/C,EAAqD,SAArD,CAAD,CAAX;AACD;;AAED,SAAOL,OAAO,CAACK,IAAD,CAAd;AACD;;AAED,SAASN,QAAQ,IAAIS,gBAArB,EAAuCJ,QAAQ,IAAIK,WAAnD,EAAgER,OAAO,IAAIS,WAA3E,EAAwFR,QAAQ,IAAIS,0BAApG,EAAgIR,SAAS,IAAIS,sBAA7I","sourcesContent":["import staticRegister from './../utils/staticRegister';\nimport baseRenderer from './_cellDecorator';\nimport autocompleteRenderer from './autocompleteRenderer';\nimport checkboxRenderer from './checkboxRenderer';\nimport htmlRenderer from './htmlRenderer';\nimport numericRenderer from './numericRenderer';\nimport passwordRenderer from './passwordRenderer';\nimport textRenderer from './textRenderer';\n\nvar _staticRegister = staticRegister('renderers'),\n    register = _staticRegister.register,\n    getItem = _staticRegister.getItem,\n    hasItem = _staticRegister.hasItem,\n    getNames = _staticRegister.getNames,\n    getValues = _staticRegister.getValues;\n\nregister('base', baseRenderer);\nregister('autocomplete', autocompleteRenderer);\nregister('checkbox', checkboxRenderer);\nregister('html', htmlRenderer);\nregister('numeric', numericRenderer);\nregister('password', passwordRenderer);\nregister('text', textRenderer);\n/**\n * Retrieve renderer function.\n *\n * @param {String} name Renderer identification.\n * @returns {Function} Returns renderer function.\n */\n\nfunction _getItem(name) {\n  if (typeof name === 'function') {\n    return name;\n  }\n\n  if (!hasItem(name)) {\n    throw Error(\"No registered renderer found under \\\"\".concat(name, \"\\\" name\"));\n  }\n\n  return getItem(name);\n}\n\nexport { register as registerRenderer, _getItem as getRenderer, hasItem as hasRenderer, getNames as getRegisteredRendererNames, getValues as getRegisteredRenderers };"]},"metadata":{},"sourceType":"module"}