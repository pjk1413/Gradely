{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { arrayEach } from '../../helpers/array';\n/**\n * @class DataFilter\n * @plugin Filters\n */\n\nvar DataFilter = /*#__PURE__*/function () {\n  function DataFilter(conditionCollection) {\n    var columnDataFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n      return [];\n    };\n\n    _classCallCheck(this, DataFilter);\n    /**\n     * Reference to the instance of {ConditionCollection}.\n     *\n     * @type {ConditionCollection}\n     */\n\n\n    this.conditionCollection = conditionCollection;\n    /**\n     * Function which provide source data factory for specified column.\n     *\n     * @type {Function}\n     */\n\n    this.columnDataFactory = columnDataFactory;\n  }\n  /**\n   * Filter data based on the conditions collection.\n   *\n   * @returns {Array}\n   */\n\n\n  _createClass(DataFilter, [{\n    key: \"filter\",\n    value: function filter() {\n      var _this = this;\n\n      var filteredData = [];\n\n      if (!this.conditionCollection.isEmpty()) {\n        arrayEach(this.conditionCollection.orderStack, function (column, index) {\n          var columnData = _this.columnDataFactory(column);\n\n          if (index) {\n            columnData = _this._getIntersectData(columnData, filteredData);\n          }\n\n          filteredData = _this.filterByColumn(column, columnData);\n        });\n      }\n\n      return filteredData;\n    }\n    /**\n     * Filter data based on specified column index.\n     *\n     * @param {Number} column Column index.\n     * @param {Array} [dataSource] Data source as array of objects with `value` and `meta` keys (e.g. `{value: 'foo', meta: {}}`).\n     * @returns {Array} Returns filtered data.\n     */\n\n  }, {\n    key: \"filterByColumn\",\n    value: function filterByColumn(column) {\n      var _this2 = this;\n\n      var dataSource = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var filteredData = [];\n      arrayEach(dataSource, function (dataRow) {\n        if (dataRow !== void 0 && _this2.conditionCollection.isMatch(dataRow, column)) {\n          filteredData.push(dataRow);\n        }\n      });\n      return filteredData;\n    }\n    /**\n     * Intersect data.\n     *\n     * @private\n     * @param {Array} data\n     * @param {Array} needles\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"_getIntersectData\",\n    value: function _getIntersectData(data, needles) {\n      var result = [];\n      arrayEach(needles, function (needleRow) {\n        var row = needleRow.meta.visualRow;\n\n        if (data[row] !== void 0) {\n          result[row] = data[row];\n        }\n      });\n      return result;\n    }\n  }]);\n\n  return DataFilter;\n}();\n\nexport default DataFilter;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/plugins/filters/dataFilter.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","arrayEach","DataFilter","conditionCollection","columnDataFactory","arguments","undefined","value","filter","_this","filteredData","isEmpty","orderStack","column","index","columnData","_getIntersectData","filterByColumn","_this2","dataSource","dataRow","isMatch","push","data","needles","result","needleRow","row","meta","visualRow"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { arrayEach } from '../../helpers/array';\n/**\n * @class DataFilter\n * @plugin Filters\n */\n\nvar DataFilter =\n/*#__PURE__*/\nfunction () {\n  function DataFilter(conditionCollection) {\n    var columnDataFactory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n      return [];\n    };\n\n    _classCallCheck(this, DataFilter);\n\n    /**\n     * Reference to the instance of {ConditionCollection}.\n     *\n     * @type {ConditionCollection}\n     */\n    this.conditionCollection = conditionCollection;\n    /**\n     * Function which provide source data factory for specified column.\n     *\n     * @type {Function}\n     */\n\n    this.columnDataFactory = columnDataFactory;\n  }\n  /**\n   * Filter data based on the conditions collection.\n   *\n   * @returns {Array}\n   */\n\n\n  _createClass(DataFilter, [{\n    key: \"filter\",\n    value: function filter() {\n      var _this = this;\n\n      var filteredData = [];\n\n      if (!this.conditionCollection.isEmpty()) {\n        arrayEach(this.conditionCollection.orderStack, function (column, index) {\n          var columnData = _this.columnDataFactory(column);\n\n          if (index) {\n            columnData = _this._getIntersectData(columnData, filteredData);\n          }\n\n          filteredData = _this.filterByColumn(column, columnData);\n        });\n      }\n\n      return filteredData;\n    }\n    /**\n     * Filter data based on specified column index.\n     *\n     * @param {Number} column Column index.\n     * @param {Array} [dataSource] Data source as array of objects with `value` and `meta` keys (e.g. `{value: 'foo', meta: {}}`).\n     * @returns {Array} Returns filtered data.\n     */\n\n  }, {\n    key: \"filterByColumn\",\n    value: function filterByColumn(column) {\n      var _this2 = this;\n\n      var dataSource = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var filteredData = [];\n      arrayEach(dataSource, function (dataRow) {\n        if (dataRow !== void 0 && _this2.conditionCollection.isMatch(dataRow, column)) {\n          filteredData.push(dataRow);\n        }\n      });\n      return filteredData;\n    }\n    /**\n     * Intersect data.\n     *\n     * @private\n     * @param {Array} data\n     * @param {Array} needles\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"_getIntersectData\",\n    value: function _getIntersectData(data, needles) {\n      var result = [];\n      arrayEach(needles, function (needleRow) {\n        var row = needleRow.meta.visualRow;\n\n        if (data[row] !== void 0) {\n          result[row] = data[row];\n        }\n      });\n      return result;\n    }\n  }]);\n\n  return DataFilter;\n}();\n\nexport default DataFilter;"]},"metadata":{},"sourceType":"module"}