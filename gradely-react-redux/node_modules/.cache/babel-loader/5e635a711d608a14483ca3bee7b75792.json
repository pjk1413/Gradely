{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\GradeEntryTable.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport Datasheet from 'react-datasheet';\nimport './gradeEntry.css';\nimport userData from './teacher';\nexport default class GradeEntryTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [] //   grid: [\n      //     [\n      //       {readOnly: true, value: '', width: 100},\n      //       {value: 'A', readOnly: true, width: 100},\n      //       {value: 'B', readOnly: true, width: 100},\n      //       {value: 'C', readOnly: true, width: 100},\n      //       {value: 'D', readOnly: true, width: 100}\n      //     ],\n      //     [{readOnly: true, value: 1}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\n      //     [{readOnly: true, value: 2}, {value: 2}, {value: 4}, {value: 4}, {value: 4}],\n      //     [{readOnly: true, value: 3}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\n      //     [{readOnly: true, value: 4}, {value: 2}, {value: 4}, {value: 4}, {value: 4}]\n      //   ]\n\n    };\n  }\n\n  writeHeaders(courseList) {\n    const tempGrid = this.state.grid;\n    const headerList = courseList.map(course => {\n      const newValue = course.title + \" (\" + course.points + \") \" + course.type;\n      return {\n        value: newValue,\n        readOnly: true,\n        width: 100\n      };\n    });\n    headerList.unshift({\n      value: '',\n      readOnly: true,\n      width: 150\n    });\n    tempGrid.splice();\n    this.setState({\n      grid\n    });\n  }\n\n  render() {\n    const user = userData[0]; //temporary\n\n    this.writeHeaders(user.courseObjects.assignmentObjects); //Takes a list of assignment objects\n\n    this.writeStudents(user.courseObjects.studentObjects); //Takes a list of student objects\n\n    const userCourses = user.courseObjects.map(course => {\n      return course;\n    });\n    return /*#__PURE__*/React.createElement(Datasheet, {\n      className: \"table table-hover\",\n      data: this.state.grid,\n      valueRenderer: cell => cell.value,\n      onContextMenu: (e, cell, i, j) => cell.readOnly ? e.preventDefault() : null,\n      onCellsChanged: changes => {\n        const grid = this.state.grid.map(row => [...row]);\n        changes.forEach(({\n          cell,\n          row,\n          col,\n          value\n        }) => {\n          grid[row][col] = { ...grid[row][col],\n            value\n          };\n        });\n        this.setState({\n          grid\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/src/components/utility-boxes/gradeEntry/GradeEntryTable.js"],"names":["_","React","Datasheet","userData","GradeEntryTable","Component","constructor","props","state","grid","writeHeaders","courseList","tempGrid","headerList","map","course","newValue","title","points","type","value","readOnly","width","unshift","splice","setState","render","user","courseObjects","assignmentObjects","writeStudents","studentObjects","userCourses","cell","e","i","j","preventDefault","changes","row","forEach","col"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,eAAe,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA8C;AAC3DC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG,CAIb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBa,KAAb;AAkBD;;AACDC,EAAAA,YAAY,CAACC,UAAD,EAAa;AACrB,UAAMC,QAAQ,GAAG,KAAKJ,KAAL,CAAWC,IAA5B;AACA,UAAMI,UAAU,GAAGF,UAAU,CAACG,GAAX,CAAeC,MAAM,IAAI;AACxC,YAAMC,QAAQ,GAAGD,MAAM,CAACE,KAAP,GAAe,IAAf,GAAsBF,MAAM,CAACG,MAA7B,GAAsC,IAAtC,GAA6CH,MAAM,CAACI,IAArE;AACA,aAAO;AAACC,QAAAA,KAAK,EAAEJ,QAAR;AAAkBK,QAAAA,QAAQ,EAAE,IAA5B;AAAkCC,QAAAA,KAAK,EAAE;AAAzC,OAAP;AACH,KAHkB,CAAnB;AAKAT,IAAAA,UAAU,CAACU,OAAX,CAAmB;AAACH,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,QAAQ,EAAE,IAAtB;AAA4BC,MAAAA,KAAK,EAAE;AAAnC,KAAnB;AACAV,IAAAA,QAAQ,CAACY,MAAT;AACA,SAAKC,QAAL,CAAc;AACZhB,MAAAA;AADY,KAAd;AAGH;;AAGDiB,EAAAA,MAAM,GAAI;AACR,UAAMC,IAAI,GAAGxB,QAAQ,CAAC,CAAD,CAArB,CADQ,CACiB;;AAEzB,SAAKO,YAAL,CAAkBiB,IAAI,CAACC,aAAL,CAAmBC,iBAArC,EAHQ,CAGgD;;AACxD,SAAKC,aAAL,CAAmBH,IAAI,CAACC,aAAL,CAAmBG,cAAtC,EAJQ,CAI8C;;AACtD,UAAMC,WAAW,GAAGL,IAAI,CAACC,aAAL,CAAmBd,GAAnB,CAAuBC,MAAM,IAAI;AACjD,aAAOA,MAAP;AACH,KAFmB,CAApB;AAKA,wBACE,oBAAC,SAAD;AACA,MAAA,SAAS,EAAC,mBADV;AAEE,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC,IAFnB;AAGE,MAAA,aAAa,EAAGwB,IAAD,IAAUA,IAAI,CAACb,KAHhC;AAIE,MAAA,aAAa,EAAE,CAACc,CAAD,EAAID,IAAJ,EAAUE,CAAV,EAAaC,CAAb,KAAmBH,IAAI,CAACZ,QAAL,GAAgBa,CAAC,CAACG,cAAF,EAAhB,GAAqC,IAJzE;AAKE,MAAA,cAAc,EAAEC,OAAO,IAAI;AACzB,cAAM7B,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoByB,GAAG,IAAI,CAAC,GAAGA,GAAJ,CAA3B,CAAb;AACAD,QAAAA,OAAO,CAACE,OAAR,CAAgB,CAAC;AAACP,UAAAA,IAAD;AAAOM,UAAAA,GAAP;AAAYE,UAAAA,GAAZ;AAAiBrB,UAAAA;AAAjB,SAAD,KAA6B;AAC3CX,UAAAA,IAAI,CAAC8B,GAAD,CAAJ,CAAUE,GAAV,IAAiB,EAAC,GAAGhC,IAAI,CAAC8B,GAAD,CAAJ,CAAUE,GAAV,CAAJ;AAAoBrB,YAAAA;AAApB,WAAjB;AACD,SAFD;AAGA,aAAKK,QAAL,CAAc;AAAChB,UAAAA;AAAD,SAAd;AACD,OAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAeD;;AA9D0D","sourcesContent":["import _ from 'lodash';\r\nimport React from 'react';\r\nimport Datasheet from 'react-datasheet'\r\nimport './gradeEntry.css'\r\nimport userData from './teacher'\r\n\r\nexport default class GradeEntryTable extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n        grid: []\r\n\r\n\r\n    //   grid: [\r\n    //     [\r\n    //       {readOnly: true, value: '', width: 100},\r\n    //       {value: 'A', readOnly: true, width: 100},\r\n    //       {value: 'B', readOnly: true, width: 100},\r\n    //       {value: 'C', readOnly: true, width: 100},\r\n    //       {value: 'D', readOnly: true, width: 100}\r\n    //     ],\r\n    //     [{readOnly: true, value: 1}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\r\n    //     [{readOnly: true, value: 2}, {value: 2}, {value: 4}, {value: 4}, {value: 4}],\r\n    //     [{readOnly: true, value: 3}, {value: 1}, {value: 3}, {value: 3}, {value: 3}],\r\n    //     [{readOnly: true, value: 4}, {value: 2}, {value: 4}, {value: 4}, {value: 4}]\r\n    //   ]\r\n    }\r\n  }\r\n  writeHeaders(courseList) {\r\n      const tempGrid = this.state.grid\r\n      const headerList = courseList.map(course => {\r\n          const newValue = course.title + \" (\" + course.points + \") \" + course.type\r\n          return {value: newValue, readOnly: true, width: 100} \r\n      })\r\n\r\n      headerList.unshift({value: '', readOnly: true, width: 150})\r\n      tempGrid.splice()\r\n      this.setState({\r\n        grid \r\n      })\r\n  }\r\n\r\n\r\n  render () {\r\n    const user = userData[0] //temporary\r\n\r\n    this.writeHeaders(user.courseObjects.assignmentObjects) //Takes a list of assignment objects\r\n    this.writeStudents(user.courseObjects.studentObjects) //Takes a list of student objects\r\n    const userCourses = user.courseObjects.map(course => {\r\n        return course\r\n    })\r\n\r\n\r\n    return (\r\n      <Datasheet\r\n      className=\"table table-hover\"\r\n        data={this.state.grid}\r\n        valueRenderer={(cell) => cell.value}\r\n        onContextMenu={(e, cell, i, j) => cell.readOnly ? e.preventDefault() : null}\r\n        onCellsChanged={changes => {\r\n          const grid = this.state.grid.map(row => [...row])\r\n          changes.forEach(({cell, row, col, value}) => {\r\n            grid[row][col] = {...grid[row][col], value}\r\n          })\r\n          this.setState({grid})\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}