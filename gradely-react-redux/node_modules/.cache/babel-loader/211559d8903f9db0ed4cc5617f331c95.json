{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport { polymerWrap, closest } from './helpers/dom/element';\nimport { hasOwnProperty } from './helpers/object';\nimport { isWebComponentSupportedNatively, isPassiveEventSupported } from './helpers/feature';\nimport { stopImmediatePropagation as _stopImmediatePropagation } from './helpers/dom/event';\n/**\n * Counter which tracks unregistered listeners (useful for detecting memory leaks).\n *\n * @type {Number}\n */\n\nvar listenersCounter = 0;\n/**\n * Event DOM manager for internal use in Handsontable.\n *\n * @class EventManager\n * @util\n */\n\nvar EventManager = /*#__PURE__*/function () {\n  /**\n   * @param {Object} [context=null]\n   * @private\n   */\n  function EventManager() {\n    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, EventManager);\n\n    this.context = context || this;\n\n    if (!this.context.eventListeners) {\n      this.context.eventListeners = []; // TODO perf It would be more performant if every instance of EventManager tracked its own listeners only\n    }\n  }\n  /**\n   * Register specified listener (`eventName`) to the element.\n   *\n   * @param {Element} element Target element.\n   * @param {String} eventName Event name.\n   * @param {Function} callback Function which will be called after event occur.\n   * @param {AddEventListenerOptions|Boolean} [options] Listener options if object or useCapture if boolean.\n   * @returns {Function} Returns function which you can easily call to remove that event\n   */\n\n\n  _createClass(EventManager, [{\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, callback) {\n      var _this = this;\n\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var context = this.context;\n\n      function callbackProxy(event) {\n        callback.call(this, extendEvent(context, event));\n      }\n\n      if (typeof options !== 'boolean' && !isPassiveEventSupported()) {\n        options = false;\n      }\n\n      this.context.eventListeners.push({\n        element: element,\n        event: eventName,\n        callback: callback,\n        callbackProxy: callbackProxy,\n        options: options,\n        eventManager: this\n      });\n      element.addEventListener(eventName, callbackProxy, options);\n      listenersCounter += 1;\n      return function () {\n        _this.removeEventListener(element, eventName, callback);\n      };\n    }\n    /**\n     * Remove the event listener previously registered.\n     *\n     * @param {Element} element Target element.\n     * @param {String} eventName Event name.\n     * @param {Function} callback Function to remove from the event target. It must be the same as during registration listener.\n     * @param {Boolean} [onlyOwnEvents] Whether whould remove only events registered using this instance of EventManager\n     */\n\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(element, eventName, callback) {\n      var onlyOwnEvents = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var len = this.context.eventListeners.length;\n      var tmpEvent;\n\n      while (len) {\n        len -= 1;\n        tmpEvent = this.context.eventListeners[len];\n\n        if (tmpEvent.event === eventName && tmpEvent.element === element) {\n          if (callback && callback !== tmpEvent.callback) {\n            /* eslint-disable no-continue */\n            continue;\n          }\n\n          if (onlyOwnEvents && tmpEvent.eventManager !== this) {\n            continue;\n          }\n\n          this.context.eventListeners.splice(len, 1);\n          tmpEvent.element.removeEventListener(tmpEvent.event, tmpEvent.callbackProxy, tmpEvent.options);\n          listenersCounter -= 1;\n        }\n      }\n    }\n    /**\n     * Clear all previously registered events.\n     *\n     * @private\n     * @since 0.15.0-beta3\n     * @param {Boolean} [onlyOwnEvents] Whether whould remove only events registered using this instance of EventManager\n     */\n\n  }, {\n    key: \"clearEvents\",\n    value: function clearEvents() {\n      var onlyOwnEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!this.context) {\n        return;\n      }\n\n      var len = this.context.eventListeners.length;\n\n      while (len) {\n        len -= 1;\n        var event = this.context.eventListeners[len];\n\n        if (event) {\n          this.removeEventListener(event.element, event.event, event.callback, onlyOwnEvents);\n        }\n      }\n    }\n    /**\n     * Clear all previously registered events.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.clearEvents();\n    }\n    /**\n     * Destroy instance of EventManager, clearing all events of the context\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clearEvents();\n      this.context = null;\n    }\n    /**\n     * Destroy instance of EventManager, clearing only the own events\n     */\n\n  }, {\n    key: \"destroyWithOwnEventsOnly\",\n    value: function destroyWithOwnEventsOnly() {\n      this.clearEvents(true);\n      this.context = null;\n    }\n    /**\n     * Trigger event at the specified target element.\n     *\n     * @param {Element} element Target element.\n     * @param {String} eventName Event name.\n     */\n\n  }, {\n    key: \"fireEvent\",\n    value: function fireEvent(element, eventName) {\n      var rootDocument = element.document;\n      var rootWindow = element;\n\n      if (!rootDocument) {\n        rootDocument = element.ownerDocument ? element.ownerDocument : element;\n        rootWindow = rootDocument.defaultView;\n      }\n\n      var options = {\n        bubbles: true,\n        cancelable: eventName !== 'mousemove',\n        view: rootWindow,\n        detail: 0,\n        screenX: 0,\n        screenY: 0,\n        clientX: 1,\n        clientY: 1,\n        ctrlKey: false,\n        altKey: false,\n        shiftKey: false,\n        metaKey: false,\n        button: 0,\n        relatedTarget: undefined\n      };\n      var event;\n\n      if (rootDocument.createEvent) {\n        event = rootDocument.createEvent('MouseEvents');\n        event.initMouseEvent(eventName, options.bubbles, options.cancelable, options.view, options.detail, options.screenX, options.screenY, options.clientX, options.clientY, options.ctrlKey, options.altKey, options.shiftKey, options.metaKey, options.button, options.relatedTarget || rootDocument.body.parentNode);\n      } else {\n        event = rootDocument.createEventObject();\n      }\n\n      if (element.dispatchEvent) {\n        element.dispatchEvent(event);\n      } else {\n        element.fireEvent(\"on\".concat(eventName), event);\n      }\n    }\n  }]);\n\n  return EventManager;\n}();\n/**\n * @param {Object} context\n * @param {Event} event\n * @private\n * @returns {*}\n */\n\n\nfunction extendEvent(context, event) {\n  var componentName = 'HOT-TABLE';\n  var isHotTableSpotted;\n  var fromElement;\n  var realTarget;\n  var target;\n  var len;\n  event.isTargetWebComponent = false;\n  event.realTarget = event.target;\n  var nativeStopImmediatePropagation = event.stopImmediatePropagation;\n\n  event.stopImmediatePropagation = function () {\n    nativeStopImmediatePropagation.apply(this);\n\n    _stopImmediatePropagation(this);\n  };\n\n  if (!EventManager.isHotTableEnv) {\n    return event;\n  } // eslint-disable-next-line no-param-reassign\n\n\n  event = polymerWrap(event);\n  len = event.path ? event.path.length : 0;\n\n  while (len) {\n    len -= 1;\n\n    if (event.path[len].nodeName === componentName) {\n      isHotTableSpotted = true;\n    } else if (isHotTableSpotted && event.path[len].shadowRoot) {\n      target = event.path[len];\n      break;\n    }\n\n    if (len === 0 && !target) {\n      target = event.path[len];\n    }\n  }\n\n  if (!target) {\n    target = event.target;\n  }\n\n  event.isTargetWebComponent = true;\n\n  if (isWebComponentSupportedNatively()) {\n    event.realTarget = event.srcElement || event.toElement;\n  } else if (hasOwnProperty(context, 'hot') || context.isHotTableEnv || context.wtTable) {\n    // Polymer doesn't support `event.target` property properly we must emulate it ourselves\n    if (hasOwnProperty(context, 'hot')) {\n      // Custom element\n      fromElement = context.hot ? context.hot.view.wt.wtTable.TABLE : null;\n    } else if (context.isHotTableEnv) {\n      // Handsontable.Core\n      fromElement = context.view.activeWt.wtTable.TABLE.parentNode.parentNode;\n    } else if (context.wtTable) {\n      // Walkontable\n      fromElement = context.wtTable.TABLE.parentNode.parentNode;\n    }\n\n    realTarget = closest(event.target, [componentName], fromElement);\n\n    if (realTarget) {\n      event.realTarget = fromElement.querySelector(componentName) || event.target;\n    } else {\n      event.realTarget = event.target;\n    }\n  }\n\n  Object.defineProperty(event, 'target', {\n    get: function get() {\n      return polymerWrap(target);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return event;\n}\n\nexport default EventManager;\nexport function getListenersCounter() {\n  return listenersCounter;\n}","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/eventManager.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","polymerWrap","closest","hasOwnProperty","isWebComponentSupportedNatively","isPassiveEventSupported","stopImmediatePropagation","_stopImmediatePropagation","listenersCounter","EventManager","context","arguments","undefined","eventListeners","value","addEventListener","element","eventName","callback","_this","options","callbackProxy","event","call","extendEvent","push","eventManager","removeEventListener","onlyOwnEvents","len","tmpEvent","splice","clearEvents","clear","destroy","destroyWithOwnEventsOnly","fireEvent","rootDocument","document","rootWindow","ownerDocument","defaultView","bubbles","cancelable","view","detail","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","createEvent","initMouseEvent","body","parentNode","createEventObject","dispatchEvent","concat","componentName","isHotTableSpotted","fromElement","realTarget","isTargetWebComponent","nativeStopImmediatePropagation","apply","isHotTableEnv","path","nodeName","shadowRoot","srcElement","toElement","wtTable","hot","wt","TABLE","activeWt","querySelector","get","getListenersCounter"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.array.splice\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { polymerWrap, closest } from './helpers/dom/element';\nimport { hasOwnProperty } from './helpers/object';\nimport { isWebComponentSupportedNatively, isPassiveEventSupported } from './helpers/feature';\nimport { stopImmediatePropagation as _stopImmediatePropagation } from './helpers/dom/event';\n/**\n * Counter which tracks unregistered listeners (useful for detecting memory leaks).\n *\n * @type {Number}\n */\n\nvar listenersCounter = 0;\n/**\n * Event DOM manager for internal use in Handsontable.\n *\n * @class EventManager\n * @util\n */\n\nvar EventManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {Object} [context=null]\n   * @private\n   */\n  function EventManager() {\n    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, EventManager);\n\n    this.context = context || this;\n\n    if (!this.context.eventListeners) {\n      this.context.eventListeners = []; // TODO perf It would be more performant if every instance of EventManager tracked its own listeners only\n    }\n  }\n  /**\n   * Register specified listener (`eventName`) to the element.\n   *\n   * @param {Element} element Target element.\n   * @param {String} eventName Event name.\n   * @param {Function} callback Function which will be called after event occur.\n   * @param {AddEventListenerOptions|Boolean} [options] Listener options if object or useCapture if boolean.\n   * @returns {Function} Returns function which you can easily call to remove that event\n   */\n\n\n  _createClass(EventManager, [{\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, callback) {\n      var _this = this;\n\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var context = this.context;\n\n      function callbackProxy(event) {\n        callback.call(this, extendEvent(context, event));\n      }\n\n      if (typeof options !== 'boolean' && !isPassiveEventSupported()) {\n        options = false;\n      }\n\n      this.context.eventListeners.push({\n        element: element,\n        event: eventName,\n        callback: callback,\n        callbackProxy: callbackProxy,\n        options: options,\n        eventManager: this\n      });\n      element.addEventListener(eventName, callbackProxy, options);\n      listenersCounter += 1;\n      return function () {\n        _this.removeEventListener(element, eventName, callback);\n      };\n    }\n    /**\n     * Remove the event listener previously registered.\n     *\n     * @param {Element} element Target element.\n     * @param {String} eventName Event name.\n     * @param {Function} callback Function to remove from the event target. It must be the same as during registration listener.\n     * @param {Boolean} [onlyOwnEvents] Whether whould remove only events registered using this instance of EventManager\n     */\n\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(element, eventName, callback) {\n      var onlyOwnEvents = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var len = this.context.eventListeners.length;\n      var tmpEvent;\n\n      while (len) {\n        len -= 1;\n        tmpEvent = this.context.eventListeners[len];\n\n        if (tmpEvent.event === eventName && tmpEvent.element === element) {\n          if (callback && callback !== tmpEvent.callback) {\n            /* eslint-disable no-continue */\n            continue;\n          }\n\n          if (onlyOwnEvents && tmpEvent.eventManager !== this) {\n            continue;\n          }\n\n          this.context.eventListeners.splice(len, 1);\n          tmpEvent.element.removeEventListener(tmpEvent.event, tmpEvent.callbackProxy, tmpEvent.options);\n          listenersCounter -= 1;\n        }\n      }\n    }\n    /**\n     * Clear all previously registered events.\n     *\n     * @private\n     * @since 0.15.0-beta3\n     * @param {Boolean} [onlyOwnEvents] Whether whould remove only events registered using this instance of EventManager\n     */\n\n  }, {\n    key: \"clearEvents\",\n    value: function clearEvents() {\n      var onlyOwnEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!this.context) {\n        return;\n      }\n\n      var len = this.context.eventListeners.length;\n\n      while (len) {\n        len -= 1;\n        var event = this.context.eventListeners[len];\n\n        if (event) {\n          this.removeEventListener(event.element, event.event, event.callback, onlyOwnEvents);\n        }\n      }\n    }\n    /**\n     * Clear all previously registered events.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.clearEvents();\n    }\n    /**\n     * Destroy instance of EventManager, clearing all events of the context\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clearEvents();\n      this.context = null;\n    }\n    /**\n     * Destroy instance of EventManager, clearing only the own events\n     */\n\n  }, {\n    key: \"destroyWithOwnEventsOnly\",\n    value: function destroyWithOwnEventsOnly() {\n      this.clearEvents(true);\n      this.context = null;\n    }\n    /**\n     * Trigger event at the specified target element.\n     *\n     * @param {Element} element Target element.\n     * @param {String} eventName Event name.\n     */\n\n  }, {\n    key: \"fireEvent\",\n    value: function fireEvent(element, eventName) {\n      var rootDocument = element.document;\n      var rootWindow = element;\n\n      if (!rootDocument) {\n        rootDocument = element.ownerDocument ? element.ownerDocument : element;\n        rootWindow = rootDocument.defaultView;\n      }\n\n      var options = {\n        bubbles: true,\n        cancelable: eventName !== 'mousemove',\n        view: rootWindow,\n        detail: 0,\n        screenX: 0,\n        screenY: 0,\n        clientX: 1,\n        clientY: 1,\n        ctrlKey: false,\n        altKey: false,\n        shiftKey: false,\n        metaKey: false,\n        button: 0,\n        relatedTarget: undefined\n      };\n      var event;\n\n      if (rootDocument.createEvent) {\n        event = rootDocument.createEvent('MouseEvents');\n        event.initMouseEvent(eventName, options.bubbles, options.cancelable, options.view, options.detail, options.screenX, options.screenY, options.clientX, options.clientY, options.ctrlKey, options.altKey, options.shiftKey, options.metaKey, options.button, options.relatedTarget || rootDocument.body.parentNode);\n      } else {\n        event = rootDocument.createEventObject();\n      }\n\n      if (element.dispatchEvent) {\n        element.dispatchEvent(event);\n      } else {\n        element.fireEvent(\"on\".concat(eventName), event);\n      }\n    }\n  }]);\n\n  return EventManager;\n}();\n/**\n * @param {Object} context\n * @param {Event} event\n * @private\n * @returns {*}\n */\n\n\nfunction extendEvent(context, event) {\n  var componentName = 'HOT-TABLE';\n  var isHotTableSpotted;\n  var fromElement;\n  var realTarget;\n  var target;\n  var len;\n  event.isTargetWebComponent = false;\n  event.realTarget = event.target;\n  var nativeStopImmediatePropagation = event.stopImmediatePropagation;\n\n  event.stopImmediatePropagation = function () {\n    nativeStopImmediatePropagation.apply(this);\n\n    _stopImmediatePropagation(this);\n  };\n\n  if (!EventManager.isHotTableEnv) {\n    return event;\n  } // eslint-disable-next-line no-param-reassign\n\n\n  event = polymerWrap(event);\n  len = event.path ? event.path.length : 0;\n\n  while (len) {\n    len -= 1;\n\n    if (event.path[len].nodeName === componentName) {\n      isHotTableSpotted = true;\n    } else if (isHotTableSpotted && event.path[len].shadowRoot) {\n      target = event.path[len];\n      break;\n    }\n\n    if (len === 0 && !target) {\n      target = event.path[len];\n    }\n  }\n\n  if (!target) {\n    target = event.target;\n  }\n\n  event.isTargetWebComponent = true;\n\n  if (isWebComponentSupportedNatively()) {\n    event.realTarget = event.srcElement || event.toElement;\n  } else if (hasOwnProperty(context, 'hot') || context.isHotTableEnv || context.wtTable) {\n    // Polymer doesn't support `event.target` property properly we must emulate it ourselves\n    if (hasOwnProperty(context, 'hot')) {\n      // Custom element\n      fromElement = context.hot ? context.hot.view.wt.wtTable.TABLE : null;\n    } else if (context.isHotTableEnv) {\n      // Handsontable.Core\n      fromElement = context.view.activeWt.wtTable.TABLE.parentNode.parentNode;\n    } else if (context.wtTable) {\n      // Walkontable\n      fromElement = context.wtTable.TABLE.parentNode.parentNode;\n    }\n\n    realTarget = closest(event.target, [componentName], fromElement);\n\n    if (realTarget) {\n      event.realTarget = fromElement.querySelector(componentName) || event.target;\n    } else {\n      event.realTarget = event.target;\n    }\n  }\n\n  Object.defineProperty(event, 'target', {\n    get: function get() {\n      return polymerWrap(target);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return event;\n}\n\nexport default EventManager;\nexport function getListenersCounter() {\n  return listenersCounter;\n}"]},"metadata":{},"sourceType":"module"}