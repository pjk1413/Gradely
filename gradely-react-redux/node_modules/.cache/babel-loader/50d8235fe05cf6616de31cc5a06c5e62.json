{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * @class Stack\n * @util\n */\n\n\nvar Stack = /*#__PURE__*/function () {\n  function Stack() {\n    var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, Stack);\n    /**\n     * Items collection.\n     *\n     * @type {Array}\n     */\n\n\n    this.items = initial;\n  }\n  /**\n   * Add new item or items at the back of the stack.\n   *\n   * @param {*} items An item to add.\n   */\n\n\n  _createClass(Stack, [{\n    key: \"push\",\n    value: function push() {\n      var _this$items;\n\n      (_this$items = this.items).push.apply(_this$items, arguments);\n    }\n    /**\n     * Remove the last element from the stack and returns it.\n     *\n     * @returns {*}\n     */\n\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      return this.items.pop();\n    }\n    /**\n     * Return the last element from the stack (without modification stack).\n     *\n     * @returns {*}\n     */\n\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      return this.isEmpty() ? void 0 : this.items[this.items.length - 1];\n    }\n    /**\n     * Check if the stack is empty.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !this.size();\n    }\n    /**\n     * Return number of elements in the stack.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.items.length;\n    }\n  }]);\n\n  return Stack;\n}();\n\nexport default Stack;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/utils/dataStructures/stack.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Stack","initial","arguments","undefined","items","value","push","_this$items","apply","pop","peek","isEmpty","size"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,QAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4BC,IAAAA,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;AAA4D;AAAE;;AAE7T,SAASO,YAAT,CAAsBd,WAAtB,EAAmCe,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBb,iBAAiB,CAACF,WAAW,CAACiB,SAAb,EAAwBF,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBd,iBAAiB,CAACF,WAAD,EAAcgB,WAAd,CAAjB;AAA6C,SAAOhB,WAAP;AAAqB;AAEvN;;;;;;AAIA,IAAIkB,KAAK,GACT,aACA,YAAY;AACV,WAASA,KAAT,GAAiB;AACf,QAAIC,OAAO,GAAGC,SAAS,CAACd,MAAV,GAAmB,CAAnB,IAAwBc,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;;AAEAtB,IAAAA,eAAe,CAAC,IAAD,EAAOoB,KAAP,CAAf;AAEA;;;;;;;AAKA,SAAKI,KAAL,GAAaH,OAAb;AACD;AACD;;;;;;;AAOAL,EAAAA,YAAY,CAACI,KAAD,EAAQ,CAAC;AACnBL,IAAAA,GAAG,EAAE,MADc;AAEnBU,IAAAA,KAAK,EAAE,SAASC,IAAT,GAAgB;AACrB,UAAIC,WAAJ;;AAEA,OAACA,WAAW,GAAG,KAAKH,KAApB,EAA2BE,IAA3B,CAAgCE,KAAhC,CAAsCD,WAAtC,EAAmDL,SAAnD;AACD;AACD;;;;;;AAPmB,GAAD,EAajB;AACDP,IAAAA,GAAG,EAAE,KADJ;AAEDU,IAAAA,KAAK,EAAE,SAASI,GAAT,GAAe;AACpB,aAAO,KAAKL,KAAL,CAAWK,GAAX,EAAP;AACD;AACD;;;;;;AALC,GAbiB,EAwBjB;AACDd,IAAAA,GAAG,EAAE,MADJ;AAEDU,IAAAA,KAAK,EAAE,SAASK,IAAT,GAAgB;AACrB,aAAO,KAAKC,OAAL,KAAiB,KAAK,CAAtB,GAA0B,KAAKP,KAAL,CAAW,KAAKA,KAAL,CAAWhB,MAAX,GAAoB,CAA/B,CAAjC;AACD;AACD;;;;;;AALC,GAxBiB,EAmCjB;AACDO,IAAAA,GAAG,EAAE,SADJ;AAEDU,IAAAA,KAAK,EAAE,SAASM,OAAT,GAAmB;AACxB,aAAO,CAAC,KAAKC,IAAL,EAAR;AACD;AACD;;;;;;AALC,GAnCiB,EA8CjB;AACDjB,IAAAA,GAAG,EAAE,MADJ;AAEDU,IAAAA,KAAK,EAAE,SAASO,IAAT,GAAgB;AACrB,aAAO,KAAKR,KAAL,CAAWhB,MAAlB;AACD;AAJA,GA9CiB,CAAR,CAAZ;;AAqDA,SAAOY,KAAP;AACD,CA1ED,EAFA;;AA8EA,eAAeA,KAAf","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @class Stack\n * @util\n */\nvar Stack =\n/*#__PURE__*/\nfunction () {\n  function Stack() {\n    var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, Stack);\n\n    /**\n     * Items collection.\n     *\n     * @type {Array}\n     */\n    this.items = initial;\n  }\n  /**\n   * Add new item or items at the back of the stack.\n   *\n   * @param {*} items An item to add.\n   */\n\n\n  _createClass(Stack, [{\n    key: \"push\",\n    value: function push() {\n      var _this$items;\n\n      (_this$items = this.items).push.apply(_this$items, arguments);\n    }\n    /**\n     * Remove the last element from the stack and returns it.\n     *\n     * @returns {*}\n     */\n\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      return this.items.pop();\n    }\n    /**\n     * Return the last element from the stack (without modification stack).\n     *\n     * @returns {*}\n     */\n\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      return this.isEmpty() ? void 0 : this.items[this.items.length - 1];\n    }\n    /**\n     * Check if the stack is empty.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !this.size();\n    }\n    /**\n     * Return number of elements in the stack.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.items.length;\n    }\n  }]);\n\n  return Stack;\n}();\n\nexport default Stack;"]},"metadata":{},"sourceType":"module"}