{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\GradeEntryTable.js\";\nimport ReactDataSheet from 'react-datasheet';\nimport React from 'react'; // Be sure to include styles at some point, probably during your bootstrapping\n\nimport 'react-datasheet/lib/react-datasheet.css';\n\nclass GradeEntryTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [[{\n        value: 1,\n        width: 100\n      }, {\n        value: 3,\n        width: 100\n      }], [{\n        value: 2\n      }, {\n        value: 4\n      }]]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ReactDataSheet, {\n      data: this.state.grid,\n      sheetRenderer: props => /*#__PURE__*/React.createElement(\"table\", {\n        className: props.className + ' my-awesome-extra-class',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        className: \"action-cell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }\n      }), columns.map(col => /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 46\n        }\n      }, col.name)))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, props.children)),\n      rowRenderer: props => /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"action-cell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: isSelected(props.row),\n        onChange: selectHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      })), props.children),\n      cellRenderer: props => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 22\n          }\n        });\n      },\n      valueRenderer: cell => cell.value,\n      onCellsChanged: changes => {\n        const grid = this.state.grid.map(row => [...row]);\n        changes.forEach(({\n          cell,\n          row,\n          col,\n          value\n        }) => {\n          grid[row][col] = { ...grid[row][col],\n            value\n          };\n        });\n        this.setState({\n          grid\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default GradeEntryTable;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/src/components/utility-boxes/gradeEntry/GradeEntryTable.js"],"names":["ReactDataSheet","React","GradeEntryTable","Component","constructor","props","state","grid","value","width","render","className","columns","map","col","name","children","isSelected","row","selectHandler","cell","changes","forEach","setState"],"mappings":"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","sourcesContent":["import ReactDataSheet from 'react-datasheet';\r\nimport React from 'react';\r\n// Be sure to include styles at some point, probably during your bootstrapping\r\nimport 'react-datasheet/lib/react-datasheet.css';\r\n\r\nclass GradeEntryTable extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        grid: [\r\n          [{ value: 1, width: 100}, { value: 3, width: 100 }],\r\n          [{ value: 2 }, { value: 4 }],\r\n        ],\r\n      };\r\n    }\r\n    render() {\r\n      return (\r\n        <ReactDataSheet  \r\n          data={this.state.grid}\r\n          sheetRenderer={props => (\r\n            <table className={props.className + ' my-awesome-extra-class'}>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='action-cell' />\r\n                        {columns.map(col => (<th>{col.name}</th>))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.children}\r\n                </tbody>\r\n            </table>\r\n          )}\r\n          rowRenderer={props => (\r\n            <tr>\r\n                <td className='action-cell'>\r\n                    <input\r\n                        type='checkbox'\r\n                        checked={isSelected(props.row)}\r\n                        onChange={selectHandler}\r\n                    />\r\n                </td>\r\n                {props.children}\r\n            </tr>\r\n          )}\r\n          cellRenderer = {props => {\r\n              return <td className=\"text-center\" />\r\n          }}\r\n          valueRenderer={cell => cell.value}\r\n          onCellsChanged={changes => {\r\n            const grid = this.state.grid.map(row => [...row]);\r\n            changes.forEach(({ cell, row, col, value }) => {\r\n              grid[row][col] = { ...grid[row][col], value };\r\n            });\r\n            this.setState({ grid });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default GradeEntryTable\r\n\r\n "]},"metadata":{},"sourceType":"module"}