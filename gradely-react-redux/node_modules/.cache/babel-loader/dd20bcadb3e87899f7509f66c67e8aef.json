{"ast":null,"code":"import { arrayEach } from './../helpers/array';\nimport { defineGetter } from './../helpers/object';\nvar MIXIN_NAME = 'localHooks';\n/**\n * Mixin object to extend objects functionality for local hooks.\n *\n * @type {Object}\n */\n\nvar localHooks = {\n  /**\n   * Internal hooks storage.\n   */\n  _localHooks: Object.create(null),\n\n  /**\n   * Add hook to the collection.\n   *\n   * @param {String} key Hook name.\n   * @param {Function} callback Hook callback\n   * @returns {Object}\n   */\n  addLocalHook: function addLocalHook(key, callback) {\n    if (!this._localHooks[key]) {\n      this._localHooks[key] = [];\n    }\n\n    this._localHooks[key].push(callback);\n\n    return this;\n  },\n\n  /**\n   * Run hooks.\n   *\n   * @param {String} key Hook name.\n   * @param {*} params\n   */\n  runLocalHooks: function runLocalHooks(key) {\n    var _this = this;\n\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n\n    if (this._localHooks[key]) {\n      arrayEach(this._localHooks[key], function (callback) {\n        return callback.apply(_this, params);\n      });\n    }\n  },\n\n  /**\n   * Clear all added hooks.\n   *\n   * @returns {Object}\n   */\n  clearLocalHooks: function clearLocalHooks() {\n    this._localHooks = {};\n    return this;\n  }\n};\ndefineGetter(localHooks, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default localHooks;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/node_modules/handsontable/es/mixins/localHooks.js"],"names":["arrayEach","defineGetter","MIXIN_NAME","localHooks","_localHooks","Object","create","addLocalHook","key","callback","push","runLocalHooks","_this","_len","arguments","length","params","Array","_key","apply","clearLocalHooks","writable","enumerable"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,IAAIC,UAAU,GAAG,YAAjB;AACA;;;;;;AAMA,IAAIC,UAAU,GAAG;AACf;;;AAGAC,EAAAA,WAAW,EAAEC,MAAM,CAACC,MAAP,CAAc,IAAd,CAJE;;AAMf;;;;;;;AAOAC,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,QAA3B,EAAqC;AACjD,QAAI,CAAC,KAAKL,WAAL,CAAiBI,GAAjB,CAAL,EAA4B;AAC1B,WAAKJ,WAAL,CAAiBI,GAAjB,IAAwB,EAAxB;AACD;;AAED,SAAKJ,WAAL,CAAiBI,GAAjB,EAAsBE,IAAtB,CAA2BD,QAA3B;;AAEA,WAAO,IAAP;AACD,GArBc;;AAuBf;;;;;;AAMAE,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBH,GAAvB,EAA4B;AACzC,QAAII,KAAK,GAAG,IAAZ;;AAEA,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,MAAM,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAAtC,EAA0EK,IAAI,GAAG,CAAtF,EAAyFA,IAAI,GAAGL,IAAhG,EAAsGK,IAAI,EAA1G,EAA8G;AAC5GF,MAAAA,MAAM,CAACE,IAAI,GAAG,CAAR,CAAN,GAAmBJ,SAAS,CAACI,IAAD,CAA5B;AACD;;AAED,QAAI,KAAKd,WAAL,CAAiBI,GAAjB,CAAJ,EAA2B;AACzBR,MAAAA,SAAS,CAAC,KAAKI,WAAL,CAAiBI,GAAjB,CAAD,EAAwB,UAAUC,QAAV,EAAoB;AACnD,eAAOA,QAAQ,CAACU,KAAT,CAAeP,KAAf,EAAsBI,MAAtB,CAAP;AACD,OAFQ,CAAT;AAGD;AACF,GAzCc;;AA2Cf;;;;;AAKAI,EAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C,SAAKhB,WAAL,GAAmB,EAAnB;AACA,WAAO,IAAP;AACD;AAnDc,CAAjB;AAqDAH,YAAY,CAACE,UAAD,EAAa,YAAb,EAA2BD,UAA3B,EAAuC;AACjDmB,EAAAA,QAAQ,EAAE,KADuC;AAEjDC,EAAAA,UAAU,EAAE;AAFqC,CAAvC,CAAZ;AAIA,eAAenB,UAAf","sourcesContent":["import { arrayEach } from './../helpers/array';\nimport { defineGetter } from './../helpers/object';\nvar MIXIN_NAME = 'localHooks';\n/**\n * Mixin object to extend objects functionality for local hooks.\n *\n * @type {Object}\n */\n\nvar localHooks = {\n  /**\n   * Internal hooks storage.\n   */\n  _localHooks: Object.create(null),\n\n  /**\n   * Add hook to the collection.\n   *\n   * @param {String} key Hook name.\n   * @param {Function} callback Hook callback\n   * @returns {Object}\n   */\n  addLocalHook: function addLocalHook(key, callback) {\n    if (!this._localHooks[key]) {\n      this._localHooks[key] = [];\n    }\n\n    this._localHooks[key].push(callback);\n\n    return this;\n  },\n\n  /**\n   * Run hooks.\n   *\n   * @param {String} key Hook name.\n   * @param {*} params\n   */\n  runLocalHooks: function runLocalHooks(key) {\n    var _this = this;\n\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n\n    if (this._localHooks[key]) {\n      arrayEach(this._localHooks[key], function (callback) {\n        return callback.apply(_this, params);\n      });\n    }\n  },\n\n  /**\n   * Clear all added hooks.\n   *\n   * @returns {Object}\n   */\n  clearLocalHooks: function clearLocalHooks() {\n    this._localHooks = {};\n    return this;\n  }\n};\ndefineGetter(localHooks, 'MIXIN_NAME', MIXIN_NAME, {\n  writable: false,\n  enumerable: false\n});\nexport default localHooks;"]},"metadata":{},"sourceType":"module"}