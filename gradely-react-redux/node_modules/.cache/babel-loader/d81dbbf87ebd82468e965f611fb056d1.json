{"ast":null,"code":"import \"core-js/modules/es.string.replace\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport BasePlugin from '../_base';\nimport { addClass, removeClass } from '../../helpers/dom/element';\nimport { objectEach, deepClone, extend } from '../../helpers/object';\nimport { warn } from '../../helpers/console';\nimport { createEmptySpreadsheetData } from '../../helpers/data';\nimport { registerPlugin } from '../../plugins';\nimport { getDateYear, parseDate } from './utils';\nimport DateCalculator from './dateCalculator';\nimport GanttChartDataFeed from './ganttChartDataFeed';\n/**\n * @plugin GanttChart\n * @experimental\n * @dependencies CollapsibleColumns\n *\n * @description\n * GanttChart plugin enables a possibility to create a Gantt chart using a Handsontable instance.\n * In this case, the whole table becomes read-only.\n *\n * @example\n * ```js\n * ganttChart: {\n *     dataSource: data,\n *     firstWeekDay: 'monday', // Sets the first day of the week to either 'monday' or 'sunday'.\n *     startYear: 2015 // Sets the displayed year to the provided value.\n *     weekHeaderGenerator: function(start, end) { return start + ' - ' + end; } // sets the label on the week column headers (optional). The `start` and `end` arguments are numbers representing the beginning and end day of the week.\n *     allowSplitWeeks: true, // If set to `true` (default), will allow splitting week columns between months. If not, plugin will generate \"mixed\" months, like \"Jan/Feb\".\n *     hideDaysBeforeFullWeeks: false, // If set to `true`, the plugin won't render the incomplete weeks before the \"full\" weeks inside months.\n *     hideDaysAfterFullWeeks: false, // If set to `true`, the plugin won't render the incomplete weeks after the \"full\" weeks inside months.\n *   }\n *\n * // Where data can be either an data object or an object containing information about another Handsontable instance, which\n * // would feed the chart-enabled instance with data.\n * // For example:\n *\n * // Handsontable-binding information\n * var data = {\n *   instance: source, // reference to another Handsontable instance\n *   startDateColumn: 4, // index of a column, which contains information about start dates of data ranges\n *   endDateColumn: 5, // index of a column, which contains information about end dates of data ranges\n *   additionalData: { // information about additional data passed to the chart, in this example example:\n *     label: 0, // labels are stored in the first column\n *     quantity: 1 // quantity information is stored in the second column\n *   },\n *   asyncUpdates: true // if set to true, the updates from the source instance with be asynchronous. Defaults to false.\n * }\n *\n * // Data object\n * var data = [\n *   {\n *     additionalData: {label: 'Example label.', quantity: 'Four packs.'},\n *     startDate: '1/5/2015',\n *     endDate: '1/20/2015'\n *   },\n *   {\n *     additionalData: {label: 'Another label.', quantity: 'One pack.'},\n *     startDate: '1/11/2015',\n *     endDate: '1/29/2015'\n *   }\n * ];\n * ```\n */\n\nvar GanttChart = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(GanttChart, _BasePlugin);\n\n  function GanttChart(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, GanttChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GanttChart).call(this, hotInstance));\n    /**\n     * Cached plugin settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.settings = {};\n    /**\n     * Date Calculator object.\n     *\n     * @private\n     * @type {DateCalculator}\n     */\n\n    _this.dateCalculator = null;\n    /**\n     * Currently loaded year.\n     *\n     * @private\n     * @type {Number}\n     */\n\n    _this.currentYear = null;\n    /**\n     * List of months and their corresponding day counts.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.monthList = [];\n    /**\n     * Array of data for the month headers.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.monthHeadersArray = [];\n    /**\n     * Array of data for the week headers.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.weekHeadersArray = [];\n    /**\n     * Object containing the currently created range bars, along with their corresponding parameters.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.rangeBars = {};\n    /**\n     * Object containing the currently created ranges with coordinates to their range bars.\n     * It's structure is categorized by years, so to get range bar information for a year, one must use `this.rangeList[year]`.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.rangeList = {};\n    /**\n     * Reference to the Nested Headers plugin.\n     *\n     * @private\n     * @type {NestedHeaders}\n     */\n\n    _this.nestedHeadersPlugin = null;\n    /**\n     * Object containing properties of the source Handsontable instance (the data source).\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.hotSource = null;\n    /**\n     * Number of week 'blocks' in the nested headers.\n     *\n     * @private\n     * @type {Number}\n     */\n\n    _this.overallWeekSectionCount = null;\n    /**\n     * Initial instance settings - used to rollback the gantt-specific settings during the disabling of the plugin.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.initialSettings = null;\n    /**\n     * Data feed controller for this plugin.\n     *\n     * @private\n     * @type {GanttChartDataFeed}\n     */\n\n    _this.dataFeed = null;\n    /**\n     * Color information set after applying colors to the chart.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.colorData = {};\n    /**\n     * Metadata of the range bars, used to re-apply meta after updating HOT settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.rangeBarMeta = Object.create(null);\n    return _this;\n  }\n  /**\n   * Check if the dependencies are met, if not, throws a warning.\n   */\n\n\n  _createClass(GanttChart, [{\n    key: \"checkDependencies\",\n    value: function checkDependencies() {\n      if (!this.hot.getSettings().colHeaders) {\n        warn('You need to enable the colHeaders property in your Gantt Chart Handsontable in order for it to work properly.');\n      }\n    }\n    /**\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n     * hook and if it returns `true` than the {@link GanttChart#enablePlugin} method is called.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().ganttChart;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.checkDependencies();\n      this.parseSettings();\n      this.currentYear = this.settings.startYear || new Date().getFullYear();\n      this.dateCalculator = new DateCalculator({\n        year: this.currentYear,\n        allowSplitWeeks: this.settings.allowSplitWeeks,\n        hideDaysBeforeFullWeeks: this.settings.hideDaysBeforeFullWeeks,\n        hideDaysAfterFullWeeks: this.settings.hideDaysAfterFullWeeks\n      });\n      this.dateCalculator.setFirstWeekDay(this.settings.firstWeekDay);\n      this.monthList = this.dateCalculator.getMonthList();\n      this.monthHeadersArray = this.generateMonthHeaders();\n      this.weekHeadersArray = this.generateWeekHeaders();\n      this.overallWeekSectionCount = this.dateCalculator.countWeekSections();\n      this.assignGanttSettings();\n\n      if (this.nestedHeadersPlugin) {\n        this.applyDataSource();\n\n        if (this.colorData) {\n          this.setRangeBarColors(this.colorData);\n        }\n      }\n\n      this.addHook('afterInit', function () {\n        return _this2.onAfterInit();\n      });\n      addClass(this.hot.rootElement, 'ganttChart');\n\n      _get(_getPrototypeOf(GanttChart.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      if (this.internalUpdateSettings) {\n        return;\n      }\n\n      if (this.dataFeed && this.dataFeed.hotSource) {\n        this.dataFeed.removeSourceHotHooks(this.dataFeed.hotSource);\n      }\n\n      this.settings = {};\n      this.dataFeed = {};\n      this.currentYear = null;\n      this.monthList = [];\n      this.rangeBars = {};\n      this.rangeList = {};\n      this.rangeBarMeta = {};\n      this.hotSource = null;\n      this.deassignGanttSettings();\n      removeClass(this.hot.rootElement, 'ganttChart');\n\n      _get(_getPrototypeOf(GanttChart.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(GanttChart.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Parses the plugin settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"parseSettings\",\n    value: function parseSettings() {\n      this.settings = this.hot.getSettings().ganttChart;\n\n      if (typeof this.settings === 'boolean') {\n        this.settings = {};\n      }\n\n      if (!this.settings.firstWeekDay) {\n        this.settings.firstWeekDay = 'monday';\n      }\n\n      if (this.settings.allowSplitWeeks === void 0) {\n        this.settings.allowSplitWeeks = true;\n      }\n\n      if (typeof this.settings.weekHeaderGenerator !== 'function') {\n        this.settings.weekHeaderGenerator = null;\n      }\n    }\n    /**\n     * Applies the data source provided in the plugin settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"applyDataSource\",\n    value: function applyDataSource() {\n      if (this.settings.dataSource) {\n        var source = this.settings.dataSource;\n\n        if (source.instance) {\n          this.loadData(source.instance, source.startDateColumn, source.endDateColumn, source.additionalData, source.asyncUpdates);\n        } else {\n          this.loadData(source);\n        }\n      }\n    }\n    /**\n     * Loads chart data to the Handsontable instance.\n     *\n     * @private\n     * @param {Array|Object} data Array of objects containing the range data OR another Handsontable instance, to be used as the data feed\n     * @param {Number} [startDateColumn] Index of the start date column (Needed only if the data argument is a HOT instance).\n     * @param {Number} [endDateColumn] Index of the end date column (Needed only if the data argument is a HOT instance).\n     * @param {Object} [additionalData] Object containing additional data labels and their corresponding column indexes (Needed only if the data argument is a HOT instance).\n     *\n     */\n\n  }, {\n    key: \"loadData\",\n    value: function loadData(data, startDateColumn, endDateColumn, additionalData, asyncUpdates) {\n      this.dataFeed = new GanttChartDataFeed(this.hot, data, startDateColumn, endDateColumn, additionalData, asyncUpdates);\n      this.hot.render();\n    }\n    /**\n     * Clears the range bars list.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"clearRangeBars\",\n    value: function clearRangeBars() {\n      this.rangeBars = {};\n    }\n    /**\n     * Clears the range list.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"clearRangeList\",\n    value: function clearRangeList() {\n      this.rangeList = {};\n    }\n    /**\n     * Returns a range bar coordinates by the provided row.\n     *\n     * @param {Number} row Range bar's row.\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"getRangeBarCoordinates\",\n    value: function getRangeBarCoordinates(row) {\n      return this.rangeList[row];\n    }\n    /**\n     * Generates the month header structure.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"generateMonthHeaders\",\n    value: function generateMonthHeaders() {\n      var year = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentYear;\n      return this.dateCalculator.generateHeaderSet('months', this.settings.weekHeaderGenerator, year);\n    }\n    /**\n     * Generates the week header structure.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"generateWeekHeaders\",\n    value: function generateWeekHeaders() {\n      var year = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentYear;\n      return this.dateCalculator.generateHeaderSet('weeks', this.settings.weekHeaderGenerator, year);\n    }\n    /**\n     * Assigns the settings needed for the Gantt Chart plugin into the Handsontable instance.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"assignGanttSettings\",\n    value: function assignGanttSettings() {\n      var _this3 = this; // TODO: commented out temporarily, to be fixed in #68, there's a problem with re-enabling the gantt settings after resetting them\n      // this.initialSettings = {\n      //   data: this.hot.getSettings().data,\n      //   readOnly: this.hot.getSettings().readOnly,\n      //   renderer: this.hot.getSettings().renderer,\n      //   colWidths: this.hot.getSettings().colWidths,\n      //   hiddenColumns: this.hot.getSettings().hiddenColumns,\n      //   nestedHeaders: this.hot.getSettings().nestedHeaders,\n      //   collapsibleColumns: this.hot.getSettings().collapsibleColumns,\n      //   columnSorting: this.hot.getSettings().columnSorting,\n      // };\n\n\n      this.initialSettings = deepClone(this.hot.getSettings());\n      var additionalSettings = {\n        data: createEmptySpreadsheetData(1, this.overallWeekSectionCount),\n        readOnly: true,\n        renderer: function renderer(instance, TD, row, col, prop, value, cellProperties) {\n          return _this3.uniformBackgroundRenderer(instance, TD, row, col, prop, value, cellProperties);\n        },\n        colWidths: 60,\n        hiddenColumns: this.hot.getSettings().hiddenColumns ? this.hot.getSettings().hiddenColumns : true,\n        nestedHeaders: [this.monthHeadersArray.slice(), this.weekHeadersArray.slice()],\n        collapsibleColumns: this.hot.getSettings().collapsibleColumns ? this.hot.getSettings().collapsibleColumns : true,\n        columnSorting: false,\n        copyPaste: false\n      };\n      this.internalUpdateSettings = true;\n      this.hot.updateSettings(additionalSettings);\n      this.internalUpdateSettings = void 0;\n    }\n    /**\n     * Deassigns the Gantt Chart plugin settings (revert to initial settings).\n     *\n     * @private\n     */\n\n  }, {\n    key: \"deassignGanttSettings\",\n    value: function deassignGanttSettings() {\n      this.internalUpdateSettings = true;\n\n      if (this.initialSettings) {\n        this.hot.updateSettings(this.initialSettings);\n      }\n\n      this.internalUpdateSettings = void 0;\n    }\n    /**\n     * Add rangebar meta data to the cache.\n     *\n     * @param {Number} row\n     * @param {Number} col\n     * @param {String} key\n     * @param {String|Number|Object|Array} value\n     */\n\n  }, {\n    key: \"cacheRangeBarMeta\",\n    value: function cacheRangeBarMeta(row, col, key, value) {\n      if (!this.rangeBarMeta[row]) {\n        this.rangeBarMeta[row] = {};\n      }\n\n      if (!this.rangeBarMeta[row][col]) {\n        this.rangeBarMeta[row][col] = {};\n      }\n\n      this.rangeBarMeta[row][col][key] = value;\n    }\n    /**\n     * Applies the cached cell meta.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"applyRangeBarMetaCache\",\n    value: function applyRangeBarMetaCache() {\n      var _this4 = this;\n\n      objectEach(this.rangeBarMeta, function (rowArr, row) {\n        objectEach(rowArr, function (cell, col) {\n          objectEach(cell, function (value, key) {\n            _this4.hot.setCellMeta(row, col, key, value);\n          });\n        });\n      });\n    }\n    /**\n     * Get the column index of the adjacent week.\n     *\n     * @private\n     * @param {Date|String} date The date object/string.\n     * @param {Boolean} following `true` if the following week is needed.\n     * @param {Boolean} previous `true` if the previous week is needed.\n     */\n\n  }, {\n    key: \"getAdjacentWeekColumn\",\n    value: function getAdjacentWeekColumn(date, following, previous) {\n      var convertedDate = parseDate(date);\n      var delta = previous === true ? -7 : 7;\n      var adjacentWeek = convertedDate.setDate(convertedDate.getDate() + delta);\n      return this.dateCalculator.dateToColumn(adjacentWeek);\n    }\n    /**\n     * Create a new range bar.\n     *\n     * @param {Number} row Row index.\n     * @param {Date|String} startDate Start date object/string.\n     * @param {Date|String} endDate End date object/string.\n     * @param {Object} additionalData Additional range data.\n     * @returns {Array|Boolean} Array of the bar's row and column.\n     */\n\n  }, {\n    key: \"addRangeBar\",\n    value: function addRangeBar(row, startDate, endDate, additionalData) {\n      var _this5 = this;\n\n      if (startDate !== null && endDate !== null) {\n        this.prepareDaysInColumnsInfo(parseDate(startDate), parseDate(endDate));\n      }\n\n      var startDateColumn = this.dateCalculator.dateToColumn(startDate);\n      var endDateColumn = this.dateCalculator.dateToColumn(endDate);\n      var year = getDateYear(startDate); // every range bar should not exceed the limits of one year\n\n      var startMoved = false;\n      var endMoved = false;\n\n      if (startDateColumn === null && this.settings.hideDaysBeforeFullWeeks) {\n        startDateColumn = this.getAdjacentWeekColumn(startDate, true, false);\n\n        if (startDateColumn !== false) {\n          startMoved = true;\n        }\n      }\n\n      if (endDateColumn === null && this.settings.hideDaysAfterFullWeeks) {\n        endDateColumn = this.getAdjacentWeekColumn(endDate, false, true);\n\n        if (endDateColumn !== false) {\n          endMoved = true;\n        }\n      }\n\n      if (!this.dateCalculator.isValidRangeBarData(startDate, endDate) || startDateColumn === false || endDateColumn === false) {\n        return false;\n      }\n\n      if (!this.rangeBars[year]) {\n        this.rangeBars[year] = {};\n      }\n\n      if (!this.rangeBars[year][row]) {\n        this.rangeBars[year][row] = {};\n      }\n\n      this.rangeBars[year][row][startDateColumn] = {\n        barLength: endDateColumn - startDateColumn + 1,\n        partialStart: startMoved ? false : !this.dateCalculator.isOnTheEdgeOfWeek(startDate)[0],\n        partialEnd: endMoved ? false : !this.dateCalculator.isOnTheEdgeOfWeek(endDate)[1],\n        additionalData: {}\n      };\n      objectEach(additionalData, function (prop, i) {\n        _this5.rangeBars[year][row][startDateColumn].additionalData[i] = prop;\n      });\n\n      if (year === this.dateCalculator.getYear()) {\n        if (this.colorData[row]) {\n          this.rangeBars[year][row][startDateColumn].colors = this.colorData[row];\n        }\n\n        this.rangeList[row] = [row, startDateColumn];\n        this.renderRangeBar(row, startDateColumn, endDateColumn, additionalData);\n      }\n\n      return [row, startDateColumn];\n    }\n    /**\n     * Generates the information about which date is represented in which column.\n     *\n     * @private\n     * @param {Date} startDate Start date.\n     * @param {Date} endDate End Date.\n     */\n\n  }, {\n    key: \"prepareDaysInColumnsInfo\",\n    value: function prepareDaysInColumnsInfo(startDate, endDate) {\n      for (var i = startDate.getFullYear(); i <= endDate.getFullYear(); i++) {\n        if (this.dateCalculator.daysInColumns[i] === void 0) {\n          this.dateCalculator.calculateWeekStructure(i);\n          this.dateCalculator.generateHeaderSet('weeks', null, i);\n        }\n      }\n    }\n    /**\n     * Returns the range bar data of the provided row and column.\n     *\n     * @param {Number} row Row index.\n     * @param {Number} column Column index.\n     * @returns {Object|Boolean} Returns false if no bar is found.\n     */\n\n  }, {\n    key: \"getRangeBarData\",\n    value: function getRangeBarData(row, column) {\n      var year = this.dateCalculator.getYear();\n      var rangeBarCoords = this.getRangeBarCoordinates(row);\n\n      if (!rangeBarCoords) {\n        return false;\n      }\n\n      var rangeBarData = this.rangeBars[year][rangeBarCoords[0]][rangeBarCoords[1]];\n\n      if (rangeBarData && row === rangeBarCoords[0] && (column === rangeBarCoords[1] || column > rangeBarCoords[1] && column < rangeBarCoords[1] + rangeBarData.barLength)) {\n        return rangeBarData;\n      }\n\n      return false;\n    }\n    /**\n     * Updates the range bar data by the provided object.\n     *\n     * @param {Number} row Row index.\n     * @param {Number} column Column index.\n     * @param {Object} data Object with the updated data.\n     */\n\n  }, {\n    key: \"updateRangeBarData\",\n    value: function updateRangeBarData(row, column, data) {\n      var rangeBar = this.getRangeBarData(row, column);\n      objectEach(data, function (val, prop) {\n        if (rangeBar[prop] !== val) {\n          rangeBar[prop] = val;\n        }\n      });\n    }\n    /**\n     * Adds a range bar to the table.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {Number} startDateColumn Start column index.\n     * @param {Number} endDateColumn End column index.\n     */\n\n  }, {\n    key: \"renderRangeBar\",\n    value: function renderRangeBar(row, startDateColumn, endDateColumn) {\n      var year = this.dateCalculator.getYear();\n      var currentBar = this.rangeBars[year][row][startDateColumn];\n\n      for (var i = startDateColumn; i <= endDateColumn; i++) {\n        var cellMeta = this.hot.getCellMeta(row, i);\n        var newClassName = \"\".concat(cellMeta.className || '', \" rangeBar\");\n\n        if (i === startDateColumn && currentBar.partialStart || i === endDateColumn && currentBar.partialEnd) {\n          newClassName += ' partial';\n        }\n\n        if (i === endDateColumn) {\n          newClassName += ' last';\n        }\n\n        this.hot.setCellMeta(row, i, 'originalClassName', cellMeta.className);\n        this.hot.setCellMeta(row, i, 'className', newClassName);\n        this.hot.setCellMeta(row, i, 'additionalData', currentBar.additionalData); // cache cell meta, used for updateSettings, related with a cell meta bug\n\n        this.cacheRangeBarMeta(row, i, 'originalClassName', cellMeta.className);\n        this.cacheRangeBarMeta(row, i, 'className', newClassName);\n        this.cacheRangeBarMeta(row, i, 'additionalData', currentBar.additionalData);\n      }\n    }\n    /**\n     * Removes a range bar of the provided start date and row.\n     *\n     * @param {Number} row Row index.\n     * @param {Date|String} startDate Start date.\n     */\n\n  }, {\n    key: \"removeRangeBarByDate\",\n    value: function removeRangeBarByDate(row, startDate) {\n      var startDateColumn = this.dateCalculator.dateToColumn(startDate);\n      this.removeRangeBarByColumn(row, startDateColumn);\n    }\n    /**\n     * Removes a range bar of the provided row and start column.\n     *\n     * @param {Number} row Row index.\n     * @param {Number} startDateColumn Column index.\n     */\n\n  }, {\n    key: \"removeRangeBarByColumn\",\n    value: function removeRangeBarByColumn(row, startDateColumn) {\n      var _this6 = this;\n\n      var year = this.dateCalculator.getYear();\n      var rangeBar = this.rangeBars[year][row][startDateColumn];\n\n      if (!rangeBar) {\n        return;\n      }\n\n      this.unrenderRangeBar(row, startDateColumn, startDateColumn + rangeBar.barLength - 1);\n      this.rangeBars[year][row][startDateColumn] = null;\n      objectEach(this.rangeList, function (prop, i) {\n        var id = parseInt(i, 10);\n\n        if (JSON.stringify(prop) === JSON.stringify([row, startDateColumn])) {\n          _this6.rangeList[id] = null;\n        }\n      });\n    }\n    /**\n     * Removes all range bars from the chart-enabled Handsontable instance.\n     */\n\n  }, {\n    key: \"removeAllRangeBars\",\n    value: function removeAllRangeBars() {\n      var _this7 = this;\n\n      objectEach(this.rangeBars, function (row, i) {\n        objectEach(row, function (bar, j) {\n          _this7.removeRangeBarByColumn(i, j);\n        });\n      });\n    }\n    /**\n     * Removes a range bar from the table.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {Number} startDateColumn Start column index.\n     * @param {Number} endDateColumn End column index.\n     */\n\n  }, {\n    key: \"unrenderRangeBar\",\n    value: function unrenderRangeBar(row, startDateColumn, endDateColumn) {\n      for (var i = startDateColumn; i <= endDateColumn; i++) {\n        var cellMeta = this.hot.getCellMeta(row, i);\n        this.hot.setCellMeta(row, i, 'className', cellMeta.originalClassName);\n        this.hot.setCellMeta(row, i, 'originalClassName', void 0);\n        this.cacheRangeBarMeta(row, i, 'className', cellMeta.originalClassName);\n        this.cacheRangeBarMeta(row, i, 'originalClassName', void 0);\n      }\n\n      this.hot.render();\n    }\n    /**\n     * A default renderer of the range bars.\n     *\n     * @private\n     * @param {Object} instance HOT instance.\n     * @param {HTMLElement} TD TD element.\n     * @param {Number} row Row index.\n     * @param {Number} col Column index.\n     * @param {String|Number} prop Object data property.\n     * @param {String|Number} value Value to pass to the cell.\n     * @param {Object} cellProperties Current cell properties.\n     */\n\n  }, {\n    key: \"uniformBackgroundRenderer\",\n    value: function uniformBackgroundRenderer(instance, TD, row, col, prop, value, cellProperties) {\n      var rangeBarInfo = this.getRangeBarData(row, col);\n      var rangeBarCoords = this.getRangeBarCoordinates(row);\n      TD.innerHTML = '';\n\n      if (cellProperties.className) {\n        TD.className = cellProperties.className;\n      }\n\n      var titleValue = '';\n      objectEach(cellProperties.additionalData, function (cellMeta, i) {\n        titleValue += \"\".concat(i, \": \").concat(cellMeta, \"\\n\");\n      });\n      titleValue = titleValue.replace(/\\n$/, '');\n      TD.title = titleValue;\n\n      if (rangeBarInfo && rangeBarInfo.colors) {\n        if (col === rangeBarCoords[1] && rangeBarInfo.partialStart || col === rangeBarCoords[1] + rangeBarInfo.barLength - 1 && rangeBarInfo.partialEnd) {\n          TD.style.background = rangeBarInfo.colors[1];\n        } else {\n          TD.style.background = rangeBarInfo.colors[0];\n        }\n      } else {\n        TD.style.background = '';\n      }\n    }\n    /**\n     * Sets range bar colors.\n     *\n     * @param {Object} rows Object containing row color data, see example.\n     * @example\n     * ```js\n     *  hot.getPlugin('ganttChart').setRangeBarColors({\n     *    0: ['blue', 'lightblue'] // paints the bar in the first row blue, with partial sections colored light blue\n      *   2: ['#2A74D0', '#588DD0'] // paints the bar in the thrid row with #2A74D0, with partial sections colored with #588DD0\n     *  });\n     * ```\n     */\n\n  }, {\n    key: \"setRangeBarColors\",\n    value: function setRangeBarColors(rows) {\n      var _this8 = this;\n\n      this.colorData = rows;\n      objectEach(rows, function (colors, i) {\n        var barCoords = _this8.getRangeBarCoordinates(i);\n\n        if (barCoords) {\n          _this8.updateRangeBarData(barCoords[0], barCoords[1], {\n            colors: colors\n          });\n        }\n      });\n      this.hot.render();\n    }\n    /**\n     * Updates the chart with a new year.\n     *\n     * @param {Number} year New chart year.\n     */\n\n  }, {\n    key: \"setYear\",\n    value: function setYear(year) {\n      var newSettings = extend(this.hot.getSettings().ganttChart, {\n        startYear: year\n      });\n      this.hot.updateSettings({\n        ganttChart: newSettings\n      });\n    }\n    /**\n     * AfterInit hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.nestedHeadersPlugin = this.hot.getPlugin('nestedHeaders');\n      this.applyDataSource();\n    }\n    /**\n     * Prevents update settings loop when assigning the additional internal settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onUpdateSettings\",\n    value: function onUpdateSettings() {\n      if (this.internalUpdateSettings) {\n        this.applyRangeBarMetaCache();\n        return;\n      }\n\n      _get(_getPrototypeOf(GanttChart.prototype), \"onUpdateSettings\", this).call(this);\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.hotSource) {\n        this.dataFeed.removeSourceHotHooks(this.hotSource);\n      }\n\n      _get(_getPrototypeOf(GanttChart.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return GanttChart;\n}(BasePlugin);\n\nregisterPlugin('ganttChart', GanttChart);\nexport default GanttChart;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/handsontable/es/plugins/ganttChart/ganttChart.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","value","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","addClass","removeClass","objectEach","deepClone","extend","warn","createEmptySpreadsheetData","registerPlugin","getDateYear","parseDate","DateCalculator","GanttChartDataFeed","GanttChart","_BasePlugin","hotInstance","_this","settings","dateCalculator","currentYear","monthList","monthHeadersArray","weekHeadersArray","rangeBars","rangeList","nestedHeadersPlugin","hotSource","overallWeekSectionCount","initialSettings","dataFeed","colorData","rangeBarMeta","checkDependencies","hot","getSettings","colHeaders","isEnabled","ganttChart","enablePlugin","_this2","enabled","parseSettings","startYear","Date","getFullYear","year","allowSplitWeeks","hideDaysBeforeFullWeeks","hideDaysAfterFullWeeks","setFirstWeekDay","firstWeekDay","getMonthList","generateMonthHeaders","generateWeekHeaders","countWeekSections","assignGanttSettings","applyDataSource","setRangeBarColors","addHook","onAfterInit","rootElement","disablePlugin","internalUpdateSettings","removeSourceHotHooks","deassignGanttSettings","updatePlugin","weekHeaderGenerator","dataSource","source","loadData","startDateColumn","endDateColumn","additionalData","asyncUpdates","data","render","clearRangeBars","clearRangeList","getRangeBarCoordinates","row","arguments","undefined","generateHeaderSet","_this3","additionalSettings","readOnly","renderer","TD","col","prop","cellProperties","uniformBackgroundRenderer","colWidths","hiddenColumns","nestedHeaders","slice","collapsibleColumns","columnSorting","copyPaste","updateSettings","cacheRangeBarMeta","applyRangeBarMetaCache","_this4","rowArr","cell","setCellMeta","getAdjacentWeekColumn","date","following","previous","convertedDate","delta","adjacentWeek","setDate","getDate","dateToColumn","addRangeBar","startDate","endDate","_this5","prepareDaysInColumnsInfo","startMoved","endMoved","isValidRangeBarData","barLength","partialStart","isOnTheEdgeOfWeek","partialEnd","getYear","colors","renderRangeBar","daysInColumns","calculateWeekStructure","getRangeBarData","column","rangeBarCoords","rangeBarData","updateRangeBarData","rangeBar","val","currentBar","cellMeta","getCellMeta","newClassName","concat","className","removeRangeBarByDate","removeRangeBarByColumn","_this6","unrenderRangeBar","id","parseInt","JSON","stringify","removeAllRangeBars","_this7","bar","j","originalClassName","rangeBarInfo","innerHTML","titleValue","replace","title","style","background","rows","_this8","barCoords","setYear","newSettings","getPlugin","onUpdateSettings","destroy"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from '../_base';\nimport { addClass, removeClass } from '../../helpers/dom/element';\nimport { objectEach, deepClone, extend } from '../../helpers/object';\nimport { warn } from '../../helpers/console';\nimport { createEmptySpreadsheetData } from '../../helpers/data';\nimport { registerPlugin } from '../../plugins';\nimport { getDateYear, parseDate } from './utils';\nimport DateCalculator from './dateCalculator';\nimport GanttChartDataFeed from './ganttChartDataFeed';\n\n/**\n * @plugin GanttChart\n * @experimental\n * @dependencies CollapsibleColumns\n *\n * @description\n * GanttChart plugin enables a possibility to create a Gantt chart using a Handsontable instance.\n * In this case, the whole table becomes read-only.\n *\n * @example\n * ```js\n * ganttChart: {\n *     dataSource: data,\n *     firstWeekDay: 'monday', // Sets the first day of the week to either 'monday' or 'sunday'.\n *     startYear: 2015 // Sets the displayed year to the provided value.\n *     weekHeaderGenerator: function(start, end) { return start + ' - ' + end; } // sets the label on the week column headers (optional). The `start` and `end` arguments are numbers representing the beginning and end day of the week.\n *     allowSplitWeeks: true, // If set to `true` (default), will allow splitting week columns between months. If not, plugin will generate \"mixed\" months, like \"Jan/Feb\".\n *     hideDaysBeforeFullWeeks: false, // If set to `true`, the plugin won't render the incomplete weeks before the \"full\" weeks inside months.\n *     hideDaysAfterFullWeeks: false, // If set to `true`, the plugin won't render the incomplete weeks after the \"full\" weeks inside months.\n *   }\n *\n * // Where data can be either an data object or an object containing information about another Handsontable instance, which\n * // would feed the chart-enabled instance with data.\n * // For example:\n *\n * // Handsontable-binding information\n * var data = {\n *   instance: source, // reference to another Handsontable instance\n *   startDateColumn: 4, // index of a column, which contains information about start dates of data ranges\n *   endDateColumn: 5, // index of a column, which contains information about end dates of data ranges\n *   additionalData: { // information about additional data passed to the chart, in this example example:\n *     label: 0, // labels are stored in the first column\n *     quantity: 1 // quantity information is stored in the second column\n *   },\n *   asyncUpdates: true // if set to true, the updates from the source instance with be asynchronous. Defaults to false.\n * }\n *\n * // Data object\n * var data = [\n *   {\n *     additionalData: {label: 'Example label.', quantity: 'Four packs.'},\n *     startDate: '1/5/2015',\n *     endDate: '1/20/2015'\n *   },\n *   {\n *     additionalData: {label: 'Another label.', quantity: 'One pack.'},\n *     startDate: '1/11/2015',\n *     endDate: '1/29/2015'\n *   }\n * ];\n * ```\n */\nvar GanttChart =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(GanttChart, _BasePlugin);\n\n  function GanttChart(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, GanttChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GanttChart).call(this, hotInstance));\n    /**\n     * Cached plugin settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.settings = {};\n    /**\n     * Date Calculator object.\n     *\n     * @private\n     * @type {DateCalculator}\n     */\n\n    _this.dateCalculator = null;\n    /**\n     * Currently loaded year.\n     *\n     * @private\n     * @type {Number}\n     */\n\n    _this.currentYear = null;\n    /**\n     * List of months and their corresponding day counts.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.monthList = [];\n    /**\n     * Array of data for the month headers.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.monthHeadersArray = [];\n    /**\n     * Array of data for the week headers.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.weekHeadersArray = [];\n    /**\n     * Object containing the currently created range bars, along with their corresponding parameters.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.rangeBars = {};\n    /**\n     * Object containing the currently created ranges with coordinates to their range bars.\n     * It's structure is categorized by years, so to get range bar information for a year, one must use `this.rangeList[year]`.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.rangeList = {};\n    /**\n     * Reference to the Nested Headers plugin.\n     *\n     * @private\n     * @type {NestedHeaders}\n     */\n\n    _this.nestedHeadersPlugin = null;\n    /**\n     * Object containing properties of the source Handsontable instance (the data source).\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.hotSource = null;\n    /**\n     * Number of week 'blocks' in the nested headers.\n     *\n     * @private\n     * @type {Number}\n     */\n\n    _this.overallWeekSectionCount = null;\n    /**\n     * Initial instance settings - used to rollback the gantt-specific settings during the disabling of the plugin.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.initialSettings = null;\n    /**\n     * Data feed controller for this plugin.\n     *\n     * @private\n     * @type {GanttChartDataFeed}\n     */\n\n    _this.dataFeed = null;\n    /**\n     * Color information set after applying colors to the chart.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.colorData = {};\n    /**\n     * Metadata of the range bars, used to re-apply meta after updating HOT settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.rangeBarMeta = Object.create(null);\n    return _this;\n  }\n  /**\n   * Check if the dependencies are met, if not, throws a warning.\n   */\n\n\n  _createClass(GanttChart, [{\n    key: \"checkDependencies\",\n    value: function checkDependencies() {\n      if (!this.hot.getSettings().colHeaders) {\n        warn('You need to enable the colHeaders property in your Gantt Chart Handsontable in order for it to work properly.');\n      }\n    }\n    /**\n     * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n     * hook and if it returns `true` than the {@link GanttChart#enablePlugin} method is called.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().ganttChart;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.checkDependencies();\n      this.parseSettings();\n      this.currentYear = this.settings.startYear || new Date().getFullYear();\n      this.dateCalculator = new DateCalculator({\n        year: this.currentYear,\n        allowSplitWeeks: this.settings.allowSplitWeeks,\n        hideDaysBeforeFullWeeks: this.settings.hideDaysBeforeFullWeeks,\n        hideDaysAfterFullWeeks: this.settings.hideDaysAfterFullWeeks\n      });\n      this.dateCalculator.setFirstWeekDay(this.settings.firstWeekDay);\n      this.monthList = this.dateCalculator.getMonthList();\n      this.monthHeadersArray = this.generateMonthHeaders();\n      this.weekHeadersArray = this.generateWeekHeaders();\n      this.overallWeekSectionCount = this.dateCalculator.countWeekSections();\n      this.assignGanttSettings();\n\n      if (this.nestedHeadersPlugin) {\n        this.applyDataSource();\n\n        if (this.colorData) {\n          this.setRangeBarColors(this.colorData);\n        }\n      }\n\n      this.addHook('afterInit', function () {\n        return _this2.onAfterInit();\n      });\n      addClass(this.hot.rootElement, 'ganttChart');\n\n      _get(_getPrototypeOf(GanttChart.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      if (this.internalUpdateSettings) {\n        return;\n      }\n\n      if (this.dataFeed && this.dataFeed.hotSource) {\n        this.dataFeed.removeSourceHotHooks(this.dataFeed.hotSource);\n      }\n\n      this.settings = {};\n      this.dataFeed = {};\n      this.currentYear = null;\n      this.monthList = [];\n      this.rangeBars = {};\n      this.rangeList = {};\n      this.rangeBarMeta = {};\n      this.hotSource = null;\n      this.deassignGanttSettings();\n      removeClass(this.hot.rootElement, 'ganttChart');\n\n      _get(_getPrototypeOf(GanttChart.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(GanttChart.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Parses the plugin settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"parseSettings\",\n    value: function parseSettings() {\n      this.settings = this.hot.getSettings().ganttChart;\n\n      if (typeof this.settings === 'boolean') {\n        this.settings = {};\n      }\n\n      if (!this.settings.firstWeekDay) {\n        this.settings.firstWeekDay = 'monday';\n      }\n\n      if (this.settings.allowSplitWeeks === void 0) {\n        this.settings.allowSplitWeeks = true;\n      }\n\n      if (typeof this.settings.weekHeaderGenerator !== 'function') {\n        this.settings.weekHeaderGenerator = null;\n      }\n    }\n    /**\n     * Applies the data source provided in the plugin settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"applyDataSource\",\n    value: function applyDataSource() {\n      if (this.settings.dataSource) {\n        var source = this.settings.dataSource;\n\n        if (source.instance) {\n          this.loadData(source.instance, source.startDateColumn, source.endDateColumn, source.additionalData, source.asyncUpdates);\n        } else {\n          this.loadData(source);\n        }\n      }\n    }\n    /**\n     * Loads chart data to the Handsontable instance.\n     *\n     * @private\n     * @param {Array|Object} data Array of objects containing the range data OR another Handsontable instance, to be used as the data feed\n     * @param {Number} [startDateColumn] Index of the start date column (Needed only if the data argument is a HOT instance).\n     * @param {Number} [endDateColumn] Index of the end date column (Needed only if the data argument is a HOT instance).\n     * @param {Object} [additionalData] Object containing additional data labels and their corresponding column indexes (Needed only if the data argument is a HOT instance).\n     *\n     */\n\n  }, {\n    key: \"loadData\",\n    value: function loadData(data, startDateColumn, endDateColumn, additionalData, asyncUpdates) {\n      this.dataFeed = new GanttChartDataFeed(this.hot, data, startDateColumn, endDateColumn, additionalData, asyncUpdates);\n      this.hot.render();\n    }\n    /**\n     * Clears the range bars list.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"clearRangeBars\",\n    value: function clearRangeBars() {\n      this.rangeBars = {};\n    }\n    /**\n     * Clears the range list.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"clearRangeList\",\n    value: function clearRangeList() {\n      this.rangeList = {};\n    }\n    /**\n     * Returns a range bar coordinates by the provided row.\n     *\n     * @param {Number} row Range bar's row.\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"getRangeBarCoordinates\",\n    value: function getRangeBarCoordinates(row) {\n      return this.rangeList[row];\n    }\n    /**\n     * Generates the month header structure.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"generateMonthHeaders\",\n    value: function generateMonthHeaders() {\n      var year = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentYear;\n      return this.dateCalculator.generateHeaderSet('months', this.settings.weekHeaderGenerator, year);\n    }\n    /**\n     * Generates the week header structure.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"generateWeekHeaders\",\n    value: function generateWeekHeaders() {\n      var year = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentYear;\n      return this.dateCalculator.generateHeaderSet('weeks', this.settings.weekHeaderGenerator, year);\n    }\n    /**\n     * Assigns the settings needed for the Gantt Chart plugin into the Handsontable instance.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"assignGanttSettings\",\n    value: function assignGanttSettings() {\n      var _this3 = this;\n\n      // TODO: commented out temporarily, to be fixed in #68, there's a problem with re-enabling the gantt settings after resetting them\n      // this.initialSettings = {\n      //   data: this.hot.getSettings().data,\n      //   readOnly: this.hot.getSettings().readOnly,\n      //   renderer: this.hot.getSettings().renderer,\n      //   colWidths: this.hot.getSettings().colWidths,\n      //   hiddenColumns: this.hot.getSettings().hiddenColumns,\n      //   nestedHeaders: this.hot.getSettings().nestedHeaders,\n      //   collapsibleColumns: this.hot.getSettings().collapsibleColumns,\n      //   columnSorting: this.hot.getSettings().columnSorting,\n      // };\n      this.initialSettings = deepClone(this.hot.getSettings());\n      var additionalSettings = {\n        data: createEmptySpreadsheetData(1, this.overallWeekSectionCount),\n        readOnly: true,\n        renderer: function renderer(instance, TD, row, col, prop, value, cellProperties) {\n          return _this3.uniformBackgroundRenderer(instance, TD, row, col, prop, value, cellProperties);\n        },\n        colWidths: 60,\n        hiddenColumns: this.hot.getSettings().hiddenColumns ? this.hot.getSettings().hiddenColumns : true,\n        nestedHeaders: [this.monthHeadersArray.slice(), this.weekHeadersArray.slice()],\n        collapsibleColumns: this.hot.getSettings().collapsibleColumns ? this.hot.getSettings().collapsibleColumns : true,\n        columnSorting: false,\n        copyPaste: false\n      };\n      this.internalUpdateSettings = true;\n      this.hot.updateSettings(additionalSettings);\n      this.internalUpdateSettings = void 0;\n    }\n    /**\n     * Deassigns the Gantt Chart plugin settings (revert to initial settings).\n     *\n     * @private\n     */\n\n  }, {\n    key: \"deassignGanttSettings\",\n    value: function deassignGanttSettings() {\n      this.internalUpdateSettings = true;\n\n      if (this.initialSettings) {\n        this.hot.updateSettings(this.initialSettings);\n      }\n\n      this.internalUpdateSettings = void 0;\n    }\n    /**\n     * Add rangebar meta data to the cache.\n     *\n     * @param {Number} row\n     * @param {Number} col\n     * @param {String} key\n     * @param {String|Number|Object|Array} value\n     */\n\n  }, {\n    key: \"cacheRangeBarMeta\",\n    value: function cacheRangeBarMeta(row, col, key, value) {\n      if (!this.rangeBarMeta[row]) {\n        this.rangeBarMeta[row] = {};\n      }\n\n      if (!this.rangeBarMeta[row][col]) {\n        this.rangeBarMeta[row][col] = {};\n      }\n\n      this.rangeBarMeta[row][col][key] = value;\n    }\n    /**\n     * Applies the cached cell meta.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"applyRangeBarMetaCache\",\n    value: function applyRangeBarMetaCache() {\n      var _this4 = this;\n\n      objectEach(this.rangeBarMeta, function (rowArr, row) {\n        objectEach(rowArr, function (cell, col) {\n          objectEach(cell, function (value, key) {\n            _this4.hot.setCellMeta(row, col, key, value);\n          });\n        });\n      });\n    }\n    /**\n     * Get the column index of the adjacent week.\n     *\n     * @private\n     * @param {Date|String} date The date object/string.\n     * @param {Boolean} following `true` if the following week is needed.\n     * @param {Boolean} previous `true` if the previous week is needed.\n     */\n\n  }, {\n    key: \"getAdjacentWeekColumn\",\n    value: function getAdjacentWeekColumn(date, following, previous) {\n      var convertedDate = parseDate(date);\n      var delta = previous === true ? -7 : 7;\n      var adjacentWeek = convertedDate.setDate(convertedDate.getDate() + delta);\n      return this.dateCalculator.dateToColumn(adjacentWeek);\n    }\n    /**\n     * Create a new range bar.\n     *\n     * @param {Number} row Row index.\n     * @param {Date|String} startDate Start date object/string.\n     * @param {Date|String} endDate End date object/string.\n     * @param {Object} additionalData Additional range data.\n     * @returns {Array|Boolean} Array of the bar's row and column.\n     */\n\n  }, {\n    key: \"addRangeBar\",\n    value: function addRangeBar(row, startDate, endDate, additionalData) {\n      var _this5 = this;\n\n      if (startDate !== null && endDate !== null) {\n        this.prepareDaysInColumnsInfo(parseDate(startDate), parseDate(endDate));\n      }\n\n      var startDateColumn = this.dateCalculator.dateToColumn(startDate);\n      var endDateColumn = this.dateCalculator.dateToColumn(endDate);\n      var year = getDateYear(startDate); // every range bar should not exceed the limits of one year\n\n      var startMoved = false;\n      var endMoved = false;\n\n      if (startDateColumn === null && this.settings.hideDaysBeforeFullWeeks) {\n        startDateColumn = this.getAdjacentWeekColumn(startDate, true, false);\n\n        if (startDateColumn !== false) {\n          startMoved = true;\n        }\n      }\n\n      if (endDateColumn === null && this.settings.hideDaysAfterFullWeeks) {\n        endDateColumn = this.getAdjacentWeekColumn(endDate, false, true);\n\n        if (endDateColumn !== false) {\n          endMoved = true;\n        }\n      }\n\n      if (!this.dateCalculator.isValidRangeBarData(startDate, endDate) || startDateColumn === false || endDateColumn === false) {\n        return false;\n      }\n\n      if (!this.rangeBars[year]) {\n        this.rangeBars[year] = {};\n      }\n\n      if (!this.rangeBars[year][row]) {\n        this.rangeBars[year][row] = {};\n      }\n\n      this.rangeBars[year][row][startDateColumn] = {\n        barLength: endDateColumn - startDateColumn + 1,\n        partialStart: startMoved ? false : !this.dateCalculator.isOnTheEdgeOfWeek(startDate)[0],\n        partialEnd: endMoved ? false : !this.dateCalculator.isOnTheEdgeOfWeek(endDate)[1],\n        additionalData: {}\n      };\n      objectEach(additionalData, function (prop, i) {\n        _this5.rangeBars[year][row][startDateColumn].additionalData[i] = prop;\n      });\n\n      if (year === this.dateCalculator.getYear()) {\n        if (this.colorData[row]) {\n          this.rangeBars[year][row][startDateColumn].colors = this.colorData[row];\n        }\n\n        this.rangeList[row] = [row, startDateColumn];\n        this.renderRangeBar(row, startDateColumn, endDateColumn, additionalData);\n      }\n\n      return [row, startDateColumn];\n    }\n    /**\n     * Generates the information about which date is represented in which column.\n     *\n     * @private\n     * @param {Date} startDate Start date.\n     * @param {Date} endDate End Date.\n     */\n\n  }, {\n    key: \"prepareDaysInColumnsInfo\",\n    value: function prepareDaysInColumnsInfo(startDate, endDate) {\n      for (var i = startDate.getFullYear(); i <= endDate.getFullYear(); i++) {\n        if (this.dateCalculator.daysInColumns[i] === void 0) {\n          this.dateCalculator.calculateWeekStructure(i);\n          this.dateCalculator.generateHeaderSet('weeks', null, i);\n        }\n      }\n    }\n    /**\n     * Returns the range bar data of the provided row and column.\n     *\n     * @param {Number} row Row index.\n     * @param {Number} column Column index.\n     * @returns {Object|Boolean} Returns false if no bar is found.\n     */\n\n  }, {\n    key: \"getRangeBarData\",\n    value: function getRangeBarData(row, column) {\n      var year = this.dateCalculator.getYear();\n      var rangeBarCoords = this.getRangeBarCoordinates(row);\n\n      if (!rangeBarCoords) {\n        return false;\n      }\n\n      var rangeBarData = this.rangeBars[year][rangeBarCoords[0]][rangeBarCoords[1]];\n\n      if (rangeBarData && row === rangeBarCoords[0] && (column === rangeBarCoords[1] || column > rangeBarCoords[1] && column < rangeBarCoords[1] + rangeBarData.barLength)) {\n        return rangeBarData;\n      }\n\n      return false;\n    }\n    /**\n     * Updates the range bar data by the provided object.\n     *\n     * @param {Number} row Row index.\n     * @param {Number} column Column index.\n     * @param {Object} data Object with the updated data.\n     */\n\n  }, {\n    key: \"updateRangeBarData\",\n    value: function updateRangeBarData(row, column, data) {\n      var rangeBar = this.getRangeBarData(row, column);\n      objectEach(data, function (val, prop) {\n        if (rangeBar[prop] !== val) {\n          rangeBar[prop] = val;\n        }\n      });\n    }\n    /**\n     * Adds a range bar to the table.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {Number} startDateColumn Start column index.\n     * @param {Number} endDateColumn End column index.\n     */\n\n  }, {\n    key: \"renderRangeBar\",\n    value: function renderRangeBar(row, startDateColumn, endDateColumn) {\n      var year = this.dateCalculator.getYear();\n      var currentBar = this.rangeBars[year][row][startDateColumn];\n\n      for (var i = startDateColumn; i <= endDateColumn; i++) {\n        var cellMeta = this.hot.getCellMeta(row, i);\n        var newClassName = \"\".concat(cellMeta.className || '', \" rangeBar\");\n\n        if (i === startDateColumn && currentBar.partialStart || i === endDateColumn && currentBar.partialEnd) {\n          newClassName += ' partial';\n        }\n\n        if (i === endDateColumn) {\n          newClassName += ' last';\n        }\n\n        this.hot.setCellMeta(row, i, 'originalClassName', cellMeta.className);\n        this.hot.setCellMeta(row, i, 'className', newClassName);\n        this.hot.setCellMeta(row, i, 'additionalData', currentBar.additionalData); // cache cell meta, used for updateSettings, related with a cell meta bug\n\n        this.cacheRangeBarMeta(row, i, 'originalClassName', cellMeta.className);\n        this.cacheRangeBarMeta(row, i, 'className', newClassName);\n        this.cacheRangeBarMeta(row, i, 'additionalData', currentBar.additionalData);\n      }\n    }\n    /**\n     * Removes a range bar of the provided start date and row.\n     *\n     * @param {Number} row Row index.\n     * @param {Date|String} startDate Start date.\n     */\n\n  }, {\n    key: \"removeRangeBarByDate\",\n    value: function removeRangeBarByDate(row, startDate) {\n      var startDateColumn = this.dateCalculator.dateToColumn(startDate);\n      this.removeRangeBarByColumn(row, startDateColumn);\n    }\n    /**\n     * Removes a range bar of the provided row and start column.\n     *\n     * @param {Number} row Row index.\n     * @param {Number} startDateColumn Column index.\n     */\n\n  }, {\n    key: \"removeRangeBarByColumn\",\n    value: function removeRangeBarByColumn(row, startDateColumn) {\n      var _this6 = this;\n\n      var year = this.dateCalculator.getYear();\n      var rangeBar = this.rangeBars[year][row][startDateColumn];\n\n      if (!rangeBar) {\n        return;\n      }\n\n      this.unrenderRangeBar(row, startDateColumn, startDateColumn + rangeBar.barLength - 1);\n      this.rangeBars[year][row][startDateColumn] = null;\n      objectEach(this.rangeList, function (prop, i) {\n        var id = parseInt(i, 10);\n\n        if (JSON.stringify(prop) === JSON.stringify([row, startDateColumn])) {\n          _this6.rangeList[id] = null;\n        }\n      });\n    }\n    /**\n     * Removes all range bars from the chart-enabled Handsontable instance.\n     */\n\n  }, {\n    key: \"removeAllRangeBars\",\n    value: function removeAllRangeBars() {\n      var _this7 = this;\n\n      objectEach(this.rangeBars, function (row, i) {\n        objectEach(row, function (bar, j) {\n          _this7.removeRangeBarByColumn(i, j);\n        });\n      });\n    }\n    /**\n     * Removes a range bar from the table.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {Number} startDateColumn Start column index.\n     * @param {Number} endDateColumn End column index.\n     */\n\n  }, {\n    key: \"unrenderRangeBar\",\n    value: function unrenderRangeBar(row, startDateColumn, endDateColumn) {\n      for (var i = startDateColumn; i <= endDateColumn; i++) {\n        var cellMeta = this.hot.getCellMeta(row, i);\n        this.hot.setCellMeta(row, i, 'className', cellMeta.originalClassName);\n        this.hot.setCellMeta(row, i, 'originalClassName', void 0);\n        this.cacheRangeBarMeta(row, i, 'className', cellMeta.originalClassName);\n        this.cacheRangeBarMeta(row, i, 'originalClassName', void 0);\n      }\n\n      this.hot.render();\n    }\n    /**\n     * A default renderer of the range bars.\n     *\n     * @private\n     * @param {Object} instance HOT instance.\n     * @param {HTMLElement} TD TD element.\n     * @param {Number} row Row index.\n     * @param {Number} col Column index.\n     * @param {String|Number} prop Object data property.\n     * @param {String|Number} value Value to pass to the cell.\n     * @param {Object} cellProperties Current cell properties.\n     */\n\n  }, {\n    key: \"uniformBackgroundRenderer\",\n    value: function uniformBackgroundRenderer(instance, TD, row, col, prop, value, cellProperties) {\n      var rangeBarInfo = this.getRangeBarData(row, col);\n      var rangeBarCoords = this.getRangeBarCoordinates(row);\n      TD.innerHTML = '';\n\n      if (cellProperties.className) {\n        TD.className = cellProperties.className;\n      }\n\n      var titleValue = '';\n      objectEach(cellProperties.additionalData, function (cellMeta, i) {\n        titleValue += \"\".concat(i, \": \").concat(cellMeta, \"\\n\");\n      });\n      titleValue = titleValue.replace(/\\n$/, '');\n      TD.title = titleValue;\n\n      if (rangeBarInfo && rangeBarInfo.colors) {\n        if (col === rangeBarCoords[1] && rangeBarInfo.partialStart || col === rangeBarCoords[1] + rangeBarInfo.barLength - 1 && rangeBarInfo.partialEnd) {\n          TD.style.background = rangeBarInfo.colors[1];\n        } else {\n          TD.style.background = rangeBarInfo.colors[0];\n        }\n      } else {\n        TD.style.background = '';\n      }\n    }\n    /**\n     * Sets range bar colors.\n     *\n     * @param {Object} rows Object containing row color data, see example.\n     * @example\n     * ```js\n     *  hot.getPlugin('ganttChart').setRangeBarColors({\n     *    0: ['blue', 'lightblue'] // paints the bar in the first row blue, with partial sections colored light blue\n      *   2: ['#2A74D0', '#588DD0'] // paints the bar in the thrid row with #2A74D0, with partial sections colored with #588DD0\n     *  });\n     * ```\n     */\n\n  }, {\n    key: \"setRangeBarColors\",\n    value: function setRangeBarColors(rows) {\n      var _this8 = this;\n\n      this.colorData = rows;\n      objectEach(rows, function (colors, i) {\n        var barCoords = _this8.getRangeBarCoordinates(i);\n\n        if (barCoords) {\n          _this8.updateRangeBarData(barCoords[0], barCoords[1], {\n            colors: colors\n          });\n        }\n      });\n      this.hot.render();\n    }\n    /**\n     * Updates the chart with a new year.\n     *\n     * @param {Number} year New chart year.\n     */\n\n  }, {\n    key: \"setYear\",\n    value: function setYear(year) {\n      var newSettings = extend(this.hot.getSettings().ganttChart, {\n        startYear: year\n      });\n      this.hot.updateSettings({\n        ganttChart: newSettings\n      });\n    }\n    /**\n     * AfterInit hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.nestedHeadersPlugin = this.hot.getPlugin('nestedHeaders');\n      this.applyDataSource();\n    }\n    /**\n     * Prevents update settings loop when assigning the additional internal settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onUpdateSettings\",\n    value: function onUpdateSettings() {\n      if (this.internalUpdateSettings) {\n        this.applyRangeBarMetaCache();\n        return;\n      }\n\n      _get(_getPrototypeOf(GanttChart.prototype), \"onUpdateSettings\", this).call(this);\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.hotSource) {\n        this.dataFeed.removeSourceHotHooks(this.hotSource);\n      }\n\n      _get(_getPrototypeOf(GanttChart.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return GanttChart;\n}(BasePlugin);\n\nregisterPlugin('ganttChart', GanttChart);\nexport default GanttChart;"]},"metadata":{},"sourceType":"module"}