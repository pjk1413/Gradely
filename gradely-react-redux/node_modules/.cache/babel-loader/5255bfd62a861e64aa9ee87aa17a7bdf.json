{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport React, { Component } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport 'handsontable/dist/handsontable.full.css';\nimport { connect } from 'react-redux';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.state = {};\n    this.data = [[,,,,,], [,,,,,], [,,,,,]];\n  }\n\n  componentDidUpdate() {\n    let studentData = this.props.editCourse && this.props.editCourse.studentList.map(student => {\n      let tempArray = [];\n      student.assignmentScores && student.assignmentScores.forEach(score => {\n        if (score === undefined || score === null) {\n          tempArray.push('');\n        } else {\n          tempArray.push(score.points);\n        }\n      });\n      return tempArray;\n    });\n    this.setState({\n      colLbl: columnLabels,\n      colHead: colHeaders,\n      rowLbl: rowLabels,\n      data: studentData\n    });\n  }\n\n  render() {\n    let columnLabels = [];\n    let colHeaders = this.props.editCourse && this.props.editCourse.assignments.map(assignment => {\n      columnLabels.push({\n        data: assignment.id\n      });\n      return assignment.name + \" (\" + assignment.totalPoints + \")\";\n    });\n    let rowLabels = [];\n    let rowHeaders = this.props.editCourse && this.props.editCourse.studentList.map(student => {\n      rowLabels.push({\n        data: student.id\n      });\n      return student.user.firstName + \" \" + student.user.lastName;\n    }); //this.data = this.state.data\n\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      data: this.data,\n      colHeaders: colHeaders,\n      rowHeaders: rowHeaders,\n      rowHeaderWidth: 150,\n      columns: this.state.colLbl,\n      row: this.state.rowLbl,\n      // width: \"600\", \n      // height: \"300\",\n      headerTooltips: {\n        rows: true,\n        columns: true,\n        onlyTrimmed: false\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hot-app\",\n      className: \"table table-hover table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HotTable, {\n      id: \"example1\",\n      className: \"my-3\",\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  grid: state.temp.grid\n});\n\nexport default connect(mapStateToProps, {})(Table);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/Table.js"],"names":["React","Component","HotTable","connect","Table","constructor","state","data","componentDidUpdate","studentData","props","editCourse","studentList","map","student","tempArray","assignmentScores","forEach","score","undefined","push","points","setState","colLbl","columnLabels","colHead","colHeaders","rowLbl","rowLabels","render","assignments","assignment","id","name","totalPoints","rowHeaders","user","firstName","lastName","settings","licenseKey","rowHeaderWidth","columns","row","headerTooltips","rows","onlyTrimmed","mapStateToProps","temp","grid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,yCAAP;AACA,OAAO,yCAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC1BI,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa,EAAb;AAGA,SAAKC,IAAL,GAAY,CACR,OADQ,EACA,OADA,EACQ,OADR,CAAZ;AAIH;;AAEDC,EAAAA,kBAAkB,GAAG;AAGjB,QAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsBC,WAAtB,CAAkCC,GAAlC,CAAsCC,OAAO,IAAI;AACxF,UAAIC,SAAS,GAAG,EAAhB;AACAD,MAAAA,OAAO,CAACE,gBAAR,IAA4BF,OAAO,CAACE,gBAAR,CAAyBC,OAAzB,CAAiCC,KAAK,IAAI;AAClE,YAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;AACvCH,UAAAA,SAAS,CAACK,IAAV,CAAe,EAAf;AACH,SAFD,MAEO;AACHL,UAAAA,SAAS,CAACK,IAAV,CAAeF,KAAK,CAACG,MAArB;AACH;AAEJ,OAP2B,CAA5B;AAQA,aAAON,SAAP;AACH,KAX0C,CAA3C;AAaA,SAAKO,QAAL,CAAc;AACVC,MAAAA,MAAM,EAAEC,YADE;AAEVC,MAAAA,OAAO,EAAEC,UAFC;AAGVC,MAAAA,MAAM,EAAEC,SAHE;AAIVrB,MAAAA,IAAI,EAAEE;AAJI,KAAd;AAMH;;AAEDoB,EAAAA,MAAM,GAAG;AACL,QAAIL,YAAY,GAAG,EAAnB;AACA,QAAIE,UAAU,GAAG,KAAKhB,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsBmB,WAAtB,CAAkCjB,GAAlC,CAAsCkB,UAAU,IAAI;AAC1FP,MAAAA,YAAY,CAACJ,IAAb,CAAkB;AAACb,QAAAA,IAAI,EAAEwB,UAAU,CAACC;AAAlB,OAAlB;AACA,aAAOD,UAAU,CAACE,IAAX,GAAkB,IAAlB,GAAyBF,UAAU,CAACG,WAApC,GAAkD,GAAzD;AACH,KAHyC,CAA1C;AAKA,QAAIN,SAAS,GAAG,EAAhB;AACA,QAAIO,UAAU,GAAG,KAAKzB,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsBC,WAAtB,CAAkCC,GAAlC,CAAsCC,OAAO,IAAI;AACvFc,MAAAA,SAAS,CAACR,IAAV,CAAe;AAACb,QAAAA,IAAI,EAAEO,OAAO,CAACkB;AAAf,OAAf;AACA,aAAOlB,OAAO,CAACsB,IAAR,CAAaC,SAAb,GAAyB,GAAzB,GAA+BvB,OAAO,CAACsB,IAAR,CAAaE,QAAnD;AACH,KAHyC,CAA1C,CARK,CAYL;;AAEA,UAAMC,QAAQ,GAAG;AACbC,MAAAA,UAAU,EAAE,+BADC;AAEbjC,MAAAA,IAAI,EAAE,KAAKA,IAFE;AAGbmB,MAAAA,UAAU,EAAEA,UAHC;AAIbS,MAAAA,UAAU,EAAEA,UAJC;AAKbM,MAAAA,cAAc,EAAE,GALH;AAMbC,MAAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWiB,MANP;AAOboB,MAAAA,GAAG,EAAE,KAAKrC,KAAL,CAAWqB,MAPH;AAQb;AACA;AACAiB,MAAAA,cAAc,EAAE;AACZC,QAAAA,IAAI,EAAE,IADM;AAEZH,QAAAA,OAAO,EAAE,IAFG;AAGZI,QAAAA,WAAW,EAAE;AAHD;AAVH,KAAjB;AAiBA,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,4BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAwB,MAAA,SAAS,EAAC,MAAlC;AAAyC,MAAA,QAAQ,EAAEP,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAxEyB;;AA2E9B,MAAMQ,eAAe,GAAGzC,KAAK,KAAK;AAC9BK,EAAAA,UAAU,EAAEL,KAAK,CAAC0C,IAAN,CAAWrC,UADO;AAE9BsC,EAAAA,IAAI,EAAE3C,KAAK,CAAC0C,IAAN,CAAWC;AAFa,CAAL,CAA7B;;AAKA,eAAe9C,OAAO,CAAC4C,eAAD,EAAkB,EAAlB,CAAP,CAA6B3C,KAA7B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { HotTable } from '@handsontable/react'\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport 'handsontable/dist/handsontable.full.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Table extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n\r\n        }\r\n        this.data = [\r\n            [,,,,,],[,,,,,],[,,,,,]\r\n            \r\n        ]\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        \r\n\r\n        let studentData = this.props.editCourse && this.props.editCourse.studentList.map(student => {\r\n            let tempArray = []\r\n            student.assignmentScores && student.assignmentScores.forEach(score => {\r\n                if (score === undefined || score === null) {\r\n                    tempArray.push('')\r\n                } else {\r\n                    tempArray.push(score.points)\r\n                }\r\n                \r\n            });\r\n            return tempArray\r\n        })\r\n\r\n        this.setState({\r\n            colLbl: columnLabels,\r\n            colHead: colHeaders,\r\n            rowLbl: rowLabels,\r\n            data: studentData\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let columnLabels = []\r\n        let colHeaders = this.props.editCourse && this.props.editCourse.assignments.map(assignment => {\r\n            columnLabels.push({data: assignment.id})\r\n            return assignment.name + \" (\" + assignment.totalPoints + \")\"\r\n        })\r\n        \r\n        let rowLabels = []\r\n        let rowHeaders = this.props.editCourse && this.props.editCourse.studentList.map(student => {\r\n            rowLabels.push({data: student.id})\r\n            return student.user.firstName + \" \" + student.user.lastName\r\n        })\r\n        //this.data = this.state.data\r\n\r\n        const settings = {\r\n            licenseKey: 'non-commercial-and-evaluation',\r\n            data: this.data,\r\n            colHeaders: colHeaders,\r\n            rowHeaders: rowHeaders,\r\n            rowHeaderWidth: 150,\r\n            columns: this.state.colLbl,\r\n            row: this.state.rowLbl,\r\n            // width: \"600\", \r\n            // height: \"300\",\r\n            headerTooltips: {\r\n                rows: true,\r\n                columns: true,\r\n                onlyTrimmed: false\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id=\"hot-app\" className=\"table table-hover table-sm\">\r\n                <HotTable id=\"example1\" className=\"my-3\" settings={settings} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    editCourse: state.temp.editCourse,\r\n    grid: state.temp.grid,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Table)"]},"metadata":{},"sourceType":"module"}