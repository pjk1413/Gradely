{"ast":null,"code":"import React from \"react\";\nimport * as Types from \"./types\";\n\nvar toView = function toView(value) {\n  if (value === false) {\n    return React.createElement(\"div\", {\n      className: \"boolean\"\n    }, \"FALSE\");\n  }\n\n  if (value === true) {\n    return React.createElement(\"div\", {\n      className: \"boolean\"\n    }, \"TRUE\");\n  }\n\n  return value;\n};\n\nvar DataViewer = function DataViewer(_ref) {\n  var getValue = _ref.getValue,\n      cell = _ref.cell,\n      column = _ref.column,\n      row = _ref.row,\n      formulaParser = _ref.formulaParser;\n  var rawValue = getValue({\n    data: cell,\n    column: column,\n    row: row\n  });\n\n  if (typeof rawValue === \"string\" && rawValue.startsWith(\"=\")) {\n    var _formulaParser$parse = formulaParser.parse(rawValue.slice(1)),\n        result = _formulaParser$parse.result,\n        error = _formulaParser$parse.error;\n\n    return error || toView(result);\n  }\n\n  return toView(rawValue);\n};\n\nexport default DataViewer;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/node_modules/react-spreadsheet/dist/DataViewer.js"],"names":["React","Types","toView","value","createElement","className","DataViewer","_ref","getValue","cell","column","row","formulaParser","rawValue","data","startsWith","_formulaParser$parse","parse","slice","result","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;;AAEA,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,MAAIA,KAAK,KAAK,KAAd,EAAqB;AACnB,WAAOH,KAAK,CAACI,aAAN,CAAoB,KAApB,EAA2B;AAChCC,MAAAA,SAAS,EAAE;AADqB,KAA3B,EAEJ,OAFI,CAAP;AAGD;;AAED,MAAIF,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAOH,KAAK,CAACI,aAAN,CAAoB,KAApB,EAA2B;AAChCC,MAAAA,SAAS,EAAE;AADqB,KAA3B,EAEJ,MAFI,CAAP;AAGD;;AAED,SAAOF,KAAP;AACD,CAdD;;AAgBA,IAAIG,UAAU,GAAG,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACzC,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,IAAI,GAAGF,IAAI,CAACE,IADhB;AAAA,MAEIC,MAAM,GAAGH,IAAI,CAACG,MAFlB;AAAA,MAGIC,GAAG,GAAGJ,IAAI,CAACI,GAHf;AAAA,MAIIC,aAAa,GAAGL,IAAI,CAACK,aAJzB;AAKA,MAAIC,QAAQ,GAAGL,QAAQ,CAAC;AACtBM,IAAAA,IAAI,EAAEL,IADgB;AAEtBC,IAAAA,MAAM,EAAEA,MAFc;AAGtBC,IAAAA,GAAG,EAAEA;AAHiB,GAAD,CAAvB;;AAMA,MAAI,OAAOE,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,CAACE,UAAT,CAAoB,GAApB,CAApC,EAA8D;AAC5D,QAAIC,oBAAoB,GAAGJ,aAAa,CAACK,KAAd,CAAoBJ,QAAQ,CAACK,KAAT,CAAe,CAAf,CAApB,CAA3B;AAAA,QACIC,MAAM,GAAGH,oBAAoB,CAACG,MADlC;AAAA,QAEIC,KAAK,GAAGJ,oBAAoB,CAACI,KAFjC;;AAIA,WAAOA,KAAK,IAAIlB,MAAM,CAACiB,MAAD,CAAtB;AACD;;AAED,SAAOjB,MAAM,CAACW,QAAD,CAAb;AACD,CArBD;;AAuBA,eAAeP,UAAf","sourcesContent":["import React from \"react\";\nimport * as Types from \"./types\";\n\nvar toView = function toView(value) {\n  if (value === false) {\n    return React.createElement(\"div\", {\n      className: \"boolean\"\n    }, \"FALSE\");\n  }\n\n  if (value === true) {\n    return React.createElement(\"div\", {\n      className: \"boolean\"\n    }, \"TRUE\");\n  }\n\n  return value;\n};\n\nvar DataViewer = function DataViewer(_ref) {\n  var getValue = _ref.getValue,\n      cell = _ref.cell,\n      column = _ref.column,\n      row = _ref.row,\n      formulaParser = _ref.formulaParser;\n  var rawValue = getValue({\n    data: cell,\n    column: column,\n    row: row\n  });\n\n  if (typeof rawValue === \"string\" && rawValue.startsWith(\"=\")) {\n    var _formulaParser$parse = formulaParser.parse(rawValue.slice(1)),\n        result = _formulaParser$parse.result,\n        error = _formulaParser$parse.error;\n\n    return error || toView(result);\n  }\n\n  return toView(rawValue);\n};\n\nexport default DataViewer;"]},"metadata":{},"sourceType":"module"}