{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\notifications\\\\NotificationBox.js\";\nimport React, { Component } from 'react';\nimport Notification from './Notification';\nimport './notification.css';\nimport { connect } from 'react-redux';\n\nclass NotificationBox extends Component {\n  shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n  }\n\n  render() {\n    //Needs to get all messages, needs to get all assignments\n    const messageNotifications = this.props.messages && this.props.messages.map(message => {\n      console.log(message);\n      return {\n        links: \"#message\",\n        title: \"Unread Message - \" + message.subject,\n        location: \"Messages\",\n        details: \"From: \" + message.sentByName + \".  Email: \" + message.sentByEmail\n      };\n    });\n    const assignmentNotifications = this.props.assignments && this.props.assignments.map(assignment => {\n      console.log(assignment);\n      return {\n        links: \"#studentGradeModal\",\n        title: \"Assignment\",\n        location: \"Assignments\",\n        details: \"Score: \" + assignment.points + assignment.turnedIn ? \"  You have turned in this assignment \" : \"You have not turned in this assignment\"\n      };\n    });\n    let array = [];\n\n    if (messageNotifications && messageNotifications.length > 0) {\n      array.push(messageNotifications);\n    }\n\n    if (assignmentNotifications && assignmentNotifications.length > 0) {\n      array.push(assignmentNotifications);\n    } //const array = messageNotifications && messageNotifications.concat(assignmentNotifications)\n\n\n    array && array.sort(() => Math.random() - 0.5);\n    console.log(array);\n    const notificationItem = array && array.map(notification => {\n      return /*#__PURE__*/React.createElement(Notification, {\n        links: notification.links,\n        title: notification && notification.title,\n        location: notification && notification.location,\n        details: notification && notification.details,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"jumbotron m-3 shadow p-3 z-1030\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Notifications\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"carouselExampleInterval\",\n      class: \"carousel slide\",\n      \"data-ride\": \"carousel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"carousel-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"carousel-item active\",\n      \"data-interval\": \"5000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, notificationItem && notificationItem.length > 0 ? notificationItem : /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"display-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 103\n      }\n    }, \"No Notifications\")))), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"carousel-control-prev w-10\",\n      href: \"#carouselExampleInterval\",\n      role: \"button\",\n      \"data-slide\": \"prev\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"carousel-control-prev-icon\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, \"Previous\")), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"carousel-control-next w-10\",\n      href: \"#carouselExampleInterval\",\n      role: \"button\",\n      \"data-slide\": \"next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"carousel-control-next-icon\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Next\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messages: state.user.messages,\n  assignments: state.user.user.assignmentScores\n});\n\nexport default connect(mapStateToProps, {})(NotificationBox);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/notifications/NotificationBox.js"],"names":["React","Component","Notification","connect","NotificationBox","shuffle","array","sort","Math","random","render","messageNotifications","props","messages","map","message","console","log","links","title","subject","location","details","sentByName","sentByEmail","assignmentNotifications","assignments","assignment","points","turnedIn","length","push","notificationItem","notification","mapStateToProps","state","user","assignmentScores"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Notification from './Notification';\r\nimport './notification.css';\r\nimport { connect } from 'react-redux'\r\n\r\nclass NotificationBox extends Component {\r\n\r\n\r\n    shuffle(array) {\r\n        array.sort(() => Math.random() - 0.5)\r\n    }\r\n\r\n    render() {\r\n        //Needs to get all messages, needs to get all assignments\r\n        const messageNotifications = this.props.messages && this.props.messages.map(message => {\r\n            console.log(message)\r\n            return ({\r\n                links: \"#message\",\r\n                title: \"Unread Message - \" + message.subject,\r\n                location: \"Messages\",\r\n                details: \"From: \" + message.sentByName + \".  Email: \" + message.sentByEmail\r\n            })\r\n        })\r\n\r\n        const assignmentNotifications = this.props.assignments && this.props.assignments.map(assignment => {\r\n            console.log(assignment)\r\n            return {\r\n                links: \"#studentGradeModal\",\r\n                title: \"Assignment\",\r\n                location: \"Assignments\",\r\n                details: \"Score: \" + assignment.points + assignment.turnedIn ? \"  You have turned in this assignment \" : \"You have not turned in this assignment\"\r\n            }\r\n        })\r\n        \r\n        let array = []\r\n        if(messageNotifications && messageNotifications.length > 0) {\r\n            array.push(messageNotifications)\r\n        }\r\n\r\n        \r\n        \r\n        if(assignmentNotifications && assignmentNotifications.length > 0) {\r\n            array.push(assignmentNotifications)\r\n        }\r\n        \r\n        //const array = messageNotifications && messageNotifications.concat(assignmentNotifications)\r\n        \r\n        array && array.sort(() => Math.random() - 0.5)\r\n        console.log(array)\r\n        const notificationItem = array && array.map(notification => {\r\n            return (\r\n                <Notification \r\n                links={notification.links}\r\n                title={notification && notification.title} \r\n                location={notification && notification.location} \r\n                details={notification && notification.details} />\r\n            )\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div class=\"jumbotron m-3 shadow p-3 z-1030\">\r\n                <h6 className=\"\">Notifications</h6>\r\n                <div id=\"carouselExampleInterval\" class=\"carousel slide\" data-ride=\"carousel\">\r\n                    <div className=\"carousel-inner\">\r\n                        <div className=\"carousel-item active\" data-interval=\"5000\">\r\n                            <div className=\"row mx-auto\">\r\n                                {notificationItem && notificationItem.length > 0 ? notificationItem : <h6 className=\"display-4\">No Notifications</h6>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <a className=\"carousel-control-prev w-10\" href=\"#carouselExampleInterval\" role=\"button\" data-slide=\"prev\">\r\n                        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                    <a className=\"carousel-control-next w-10\" href=\"#carouselExampleInterval\" role=\"button\" data-slide=\"next\">\r\n                        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    messages: state.user.messages,\r\n    assignments: state.user.user.assignmentScores\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(NotificationBox);"]},"metadata":{},"sourceType":"module"}