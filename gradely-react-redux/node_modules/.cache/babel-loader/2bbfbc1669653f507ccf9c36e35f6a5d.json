{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjk14\\\\Desktop\\\\Gradely\\\\gradely-react-redux\\\\src\\\\components\\\\utility-boxes\\\\gradeEntry\\\\Table.js\";\nimport React, { Component } from 'react';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport 'handsontable/dist/handsontable.full.css';\nimport { connect } from 'react-redux';\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.data = [];\n  }\n\n  componentDidUpdate() {}\n\n  colHeaders(index) {\n    return index + ': ID';\n  }\n\n  render() {\n    if (this.props.editCourse && this.props.editCourse.assignments) {\n      setUpData = this.props.editCourse.assignments.map(assignment => {\n        return [assignment.id, null];\n      });\n      colHeaders = this.props.editCourse.assignments.map(assignment => {\n        columnAssignmentLabel.push({\n          assignment: assignment\n        });\n        return assignment.name + \" (\" + assignment.totalPoints + \")\";\n      });\n      rowHeaders = this.props.editCourse.students.map(student => {\n        const firstName = student.user && student.user.firstName;\n        const lastName = student.user && student.user.lastName;\n        return firstName + \" \" + lastName;\n      });\n      let studentScores = [];\n      this.props.editCourse.students.forEach(student => {\n        studentScores = student.student && student.student.assignmentScores && student.student.assignmentScores.map(score => {\n          return [score.assignmentTempId, score.points];\n        });\n      });\n      console.log(studentScores);\n      const tempScores = new Map(studentScores);\n      const finalScores = Object.fromEntries(tempScores);\n      data.push(finalScores);\n    }\n\n    const tempDataSchema = new Map(setUpData);\n    const dataSchema = Object.fromEntries(tempDataSchema);\n    console.log(data);\n    const settings = {\n      licenseKey: 'non-commercial-and-evaluation',\n      data: data,\n      dataSchema: dataSchema,\n      colHeaders: colHeaders,\n      rowHeaders: rowHeaders,\n      rowHeaderWidth: 150,\n      //columns: columnAssignmentLabel,\n      //row: rowStudentLabel,\n      // width: \"600\", \n      // height: \"300\",\n      headerTooltips: {\n        rows: true,\n        columns: true,\n        onlyTrimmed: false\n      }\n    };\n    console.log(data);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hot-app\",\n      className: \"table table-hover table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HotTable, {\n      id: \"example1\",\n      className: \"my-3\",\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  editCourse: state.temp.editCourse,\n  grid: state.temp.grid\n});\n\nexport default connect(mapStateToProps, {})(Table);","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react-redux/src/components/utility-boxes/gradeEntry/Table.js"],"names":["React","Component","HotTable","connect","Table","constructor","data","componentDidUpdate","colHeaders","index","render","props","editCourse","assignments","setUpData","map","assignment","id","columnAssignmentLabel","push","name","totalPoints","rowHeaders","students","student","firstName","user","lastName","studentScores","forEach","assignmentScores","score","assignmentTempId","points","console","log","tempScores","Map","finalScores","Object","fromEntries","tempDataSchema","dataSchema","settings","licenseKey","rowHeaderWidth","headerTooltips","rows","columns","onlyTrimmed","mapStateToProps","state","temp","grid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { HotTable } from '@handsontable/react'\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport 'handsontable/dist/handsontable.full.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Table extends Component {\r\n    constructor() {\r\n        super()\r\n        this.data = [\r\n\r\n        ]\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    colHeaders(index) {\r\n        return index + ': ID'\r\n    }\r\n\r\n    render() {\r\n \r\n        if (this.props.editCourse && this.props.editCourse.assignments) {\r\n\r\n            setUpData = this.props.editCourse.assignments.map(assignment => {\r\n                return [assignment.id, null]\r\n            })\r\n\r\n            colHeaders = this.props.editCourse.assignments.map(assignment => {\r\n                columnAssignmentLabel.push({ assignment: assignment })\r\n                return assignment.name + \" (\" + assignment.totalPoints + \")\"\r\n            })\r\n\r\n            rowHeaders = this.props.editCourse.students.map(student => {\r\n                const firstName = student.user && student.user.firstName\r\n                const lastName = student.user && student.user.lastName\r\n                return firstName + \" \" + lastName\r\n            })\r\n\r\n            let studentScores = []\r\n            this.props.editCourse.students.forEach(student => {\r\n                studentScores = student.student && student.student.assignmentScores && student.student.assignmentScores.map(score => {\r\n                    return [score.assignmentTempId, score.points]\r\n                })\r\n\r\n            })\r\n            console.log(studentScores)\r\n            const tempScores = new Map(studentScores)\r\n            const finalScores = Object.fromEntries(tempScores)\r\n\r\n            data.push(finalScores)\r\n\r\n        }\r\n\r\n        const tempDataSchema = new Map(setUpData)\r\n        const dataSchema = Object.fromEntries(tempDataSchema);\r\n        console.log(data)\r\n\r\n        const settings = {\r\n            licenseKey: 'non-commercial-and-evaluation',\r\n            data: data,\r\n            dataSchema: dataSchema,\r\n            colHeaders: colHeaders,\r\n            rowHeaders: rowHeaders,\r\n            rowHeaderWidth: 150,\r\n            //columns: columnAssignmentLabel,\r\n            //row: rowStudentLabel,\r\n            // width: \"600\", \r\n            // height: \"300\",\r\n            headerTooltips: {\r\n                rows: true,\r\n                columns: true,\r\n                onlyTrimmed: false\r\n            }\r\n        }\r\n        console.log(data)\r\n        return (\r\n            <div id=\"hot-app\" className=\"table table-hover table-sm\">\r\n                <HotTable id=\"example1\" className=\"my-3\" settings={settings} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    editCourse: state.temp.editCourse,\r\n    grid: state.temp.grid,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Table)"]},"metadata":{},"sourceType":"module"}