{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport { stopImmediatePropagation } from '../../../helpers/dom/event';\nimport { arrayEach } from '../../../helpers/array';\nimport { rangeEach } from '../../../helpers/number';\nimport { hasClass } from '../../../helpers/dom/element';\nimport BaseUI from './_base';\nimport HeadersUI from './headers';\n/**\n * Class responsible for the UI for collapsing and expanding groups.\n *\n * @class\n * @util\n * @extends BaseUI\n */\n\nvar CollapsingUI = /*#__PURE__*/function (_BaseUI) {\n  _inherits(CollapsingUI, _BaseUI);\n\n  function CollapsingUI(nestedRowsPlugin, hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CollapsingUI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CollapsingUI).call(this, nestedRowsPlugin, hotInstance));\n    /**\n     * Reference to the Trim Rows plugin.\n     */\n\n    _this.trimRowsPlugin = nestedRowsPlugin.trimRowsPlugin;\n    _this.dataManager = _this.plugin.dataManager;\n    _this.collapsedRows = [];\n    _this.collapsedRowsStash = {\n      stash: function stash() {\n        _this.lastCollapsedRows = _this.collapsedRows.slice(0); // Workaround for wrong indexes being set in the trimRows plugin\n\n        _this.expandMultipleChildren(_this.lastCollapsedRows, false);\n      },\n      shiftStash: function shiftStash(index) {\n        var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        var elementIndex = _this.translateTrimmedRow(index);\n\n        arrayEach(_this.lastCollapsedRows, function (elem, i) {\n          if (elem > elementIndex - 1) {\n            _this.lastCollapsedRows[i] = elem + delta;\n          }\n        });\n      },\n      applyStash: function applyStash() {\n        // Workaround for wrong indexes being set in the trimRows plugin\n        _this.hot.runHooks('skipLengthCache', 100);\n\n        _this.collapseMultipleChildren(_this.lastCollapsedRows, true);\n\n        _this.lastCollapsedRows = void 0;\n      },\n      trimStash: function trimStash(realElementIndex, amount) {\n        rangeEach(realElementIndex, realElementIndex + amount - 1, function (i) {\n          var indexOfElement = _this.lastCollapsedRows.indexOf(i);\n\n          if (indexOfElement > -1) {\n            _this.lastCollapsedRows.splice(indexOfElement, 1);\n          }\n        });\n      }\n    };\n    return _this;\n  }\n  /**\n   * Collapse the children of the row passed as an argument.\n   *\n   * @param {Number|Object} row The parent row.\n   * @param {Boolean} [forceRender=true] Whether to render the table after the function ends.\n   */\n\n\n  _createClass(CollapsingUI, [{\n    key: \"collapseChildren\",\n    value: function collapseChildren(row) {\n      var _this2 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToCollapse = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToTrim = null;\n\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(rowObject);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          rowsToCollapse.push(_this2.dataManager.getRowIndex(elem));\n        });\n      }\n\n      rowsToTrim = this.collapseRows(rowsToCollapse, true, false);\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n\n      if (this.collapsedRows.indexOf(rowIndex) === -1) {\n        this.collapsedRows.push(rowIndex);\n      }\n\n      return rowsToTrim;\n    }\n    /**\n     * Collapse multiple children.\n     *\n     * @param {Array} rows Rows to collapse (including their children)\n     * @param {Boolean} [forceRender = true] `true` if the table should be rendered after finishing the function.\n     * @param {Boolean} [doTrimming = true] `true` if the table should trim the provided rows.\n     */\n\n  }, {\n    key: \"collapseMultipleChildren\",\n    value: function collapseMultipleChildren(rows) {\n      var _this3 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToTrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToTrim.push.apply(rowsToTrim, _toConsumableArray(_this3.collapseChildren(elem, false, false)));\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n    /**\n     * Collapse a single row.\n     *\n     * @param {Number} rowIndex Index of the row to collapse.\n     * @param {Boolean} [recursive = true] `true` if it should collapse the row's children.\n     */\n\n  }, {\n    key: \"collapseRow\",\n    value: function collapseRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.collapseRows([rowIndex], recursive);\n    }\n    /**\n     * Collapse multiple rows.\n     *\n     * @param {Array} rowIndexes Array of row indexes to collapse.\n     * @param {Boolean} [recursive = true] `true` if it should collapse the rows' children.\n     * @param {Boolean} [doTrimming = false] `true` if the provided rows should be collapsed.\n     * @returns {Array} Rows prepared for trimming (or trimmed, if doTrimming == true)\n     */\n\n  }, {\n    key: \"collapseRows\",\n    value: function collapseRows(rowIndexes) {\n      var _this4 = this;\n\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToTrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToTrim.push(elem);\n\n        if (recursive) {\n          _this4.collapseChildRows(elem, rowsToTrim);\n        }\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n\n      return rowsToTrim;\n    }\n    /**\n     * Collapse child rows of the row at the provided index.\n     *\n     * @param {Number} parentIndex Index of the parent node.\n     * @param {Array} [rowsToTrim = []] Array of rows to trim. Defaults to an empty array.\n     * @param {Boolean} [recursive] `true` if the collapsing process should be recursive.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be trimmed.\n     */\n\n  }, {\n    key: \"collapseChildRows\",\n    value: function collapseChildRows(parentIndex) {\n      var _this5 = this;\n\n      var rowsToTrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          var elemIndex = _this5.dataManager.getRowIndex(elem);\n\n          rowsToTrim.push(elemIndex);\n\n          _this5.collapseChildRows(elemIndex, rowsToTrim);\n        });\n      }\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n    }\n    /**\n     * Expand a single row.\n     *\n     * @param {Number} rowIndex Index of the row to expand.\n     * @param {Boolean} [recursive = true] `true` if it should expand the row's children recursively.\n     */\n\n  }, {\n    key: \"expandRow\",\n    value: function expandRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.expandRows([rowIndex], recursive);\n    }\n    /**\n     * Expand multiple rows.\n     *\n     * @param {Array} rowIndexes Array of indexes of the rows to expand.\n     * @param {Boolean} [recursive = true] `true` if it should expand the rows' children recursively.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be untrimmed.\n     * @returns {Array} Array of row indexes to be untrimmed.\n     */\n\n  }, {\n    key: \"expandRows\",\n    value: function expandRows(rowIndexes) {\n      var _this6 = this;\n\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToUntrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToUntrim.push(elem);\n\n        if (recursive) {\n          _this6.expandChildRows(elem, rowsToUntrim);\n        }\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n\n      return rowsToUntrim;\n    }\n    /**\n     * Expand child rows of the provided index.\n     *\n     * @param {Number} parentIndex Index of the parent row.\n     * @param {Array} [rowsToUntrim = []] Array of the rows to be untrimmed.\n     * @param {Boolean} [recursive] `true` if it should expand the rows' children recursively.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be untrimmed.\n     */\n\n  }, {\n    key: \"expandChildRows\",\n    value: function expandChildRows(parentIndex) {\n      var _this7 = this;\n\n      var rowsToUntrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          if (!_this7.isAnyParentCollapsed(elem)) {\n            var elemIndex = _this7.dataManager.getRowIndex(elem);\n\n            rowsToUntrim.push(elemIndex);\n\n            _this7.expandChildRows(elemIndex, rowsToUntrim);\n          }\n        });\n      }\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n    }\n    /**\n     * Expand the children of the row passed as an argument.\n     *\n     * @param {Number|Object} row Parent row.\n     * @param {Boolean} [forceRender=true] Whether to render the table after the function ends.\n     * @param {Boolean} [doTrimming=true] If set to `true`, the trimming will be applied when the function finishes.\n     */\n\n  }, {\n    key: \"expandChildren\",\n    value: function expandChildren(row) {\n      var _this8 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToExpand = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToUntrim = null;\n\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(row);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n\n      this.collapsedRows.splice(this.collapsedRows.indexOf(rowIndex), 1);\n\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          var childIndex = _this8.dataManager.getRowIndex(elem);\n\n          rowsToExpand.push(childIndex);\n        });\n      }\n\n      rowsToUntrim = this.expandRows(rowsToExpand, true, false);\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n\n      return rowsToUntrim;\n    }\n    /**\n     * Expand multiple rows' children.\n     *\n     * @param {Array} rows Array of rows which children are about to be expanded.\n     * @param {Boolean} [forceRender = true] `true` if the table should render after finishing the function.\n     * @param {Boolean} [doTrimming = true] `true` if the rows should be untrimmed after finishing the function.\n     */\n\n  }, {\n    key: \"expandMultipleChildren\",\n    value: function expandMultipleChildren(rows) {\n      var _this9 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToUntrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToUntrim.push.apply(rowsToUntrim, _toConsumableArray(_this9.expandChildren(elem, false, false)));\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n    /**\n     * Collapse all collapsable rows.\n     */\n\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      var _this10 = this;\n\n      var sourceData = this.hot.getSourceData();\n      var parentsToCollapse = [];\n      arrayEach(sourceData, function (elem) {\n        if (_this10.dataManager.hasChildren(elem)) {\n          parentsToCollapse.push(elem);\n        }\n      });\n      this.collapseMultipleChildren(parentsToCollapse);\n      this.renderAndAdjust();\n    }\n    /**\n     * Expand all collapsable rows.\n     */\n\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      var _this11 = this;\n\n      var sourceData = this.hot.getSourceData();\n      var parentsToExpand = [];\n      arrayEach(sourceData, function (elem) {\n        if (_this11.dataManager.hasChildren(elem)) {\n          parentsToExpand.push(elem);\n        }\n      });\n      this.expandMultipleChildren(parentsToExpand);\n      this.renderAndAdjust();\n    }\n    /**\n     * Check if all child rows are collapsed.\n     *\n     * @param {Number|Object} row The parent row.\n     * @private\n     */\n\n  }, {\n    key: \"areChildrenCollapsed\",\n    value: function areChildrenCollapsed(row) {\n      var _this12 = this;\n\n      var rowObj = null;\n      var allCollapsed = true;\n\n      if (isNaN(row)) {\n        rowObj = row;\n      } else {\n        rowObj = this.dataManager.getDataObject(row);\n      }\n\n      if (this.dataManager.hasChildren(rowObj)) {\n        arrayEach(rowObj.__children, function (elem) {\n          var rowIndex = _this12.dataManager.getRowIndex(elem);\n\n          if (!_this12.trimRowsPlugin.isTrimmed(rowIndex)) {\n            allCollapsed = false;\n            return false;\n          }\n        });\n      }\n\n      return allCollapsed;\n    }\n    /**\n     * Check if any of the row object parents are collapsed.\n     *\n     * @private\n     * @param {Object} rowObj Row object.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isAnyParentCollapsed\",\n    value: function isAnyParentCollapsed(rowObj) {\n      var parent = rowObj;\n\n      while (parent !== null) {\n        parent = this.dataManager.getRowParent(parent);\n        var parentIndex = this.dataManager.getRowIndex(parent);\n\n        if (this.collapsedRows.indexOf(parentIndex) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Toggle collapsed state. Callback for the `beforeOnCellMousedown` hook.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event\n     * @param {Object} coords Coordinates of the clicked cell/header.\n     */\n\n  }, {\n    key: \"toggleState\",\n    value: function toggleState(event, coords) {\n      if (coords.col >= 0) {\n        return;\n      }\n\n      var row = this.translateTrimmedRow(coords.row);\n\n      if (hasClass(event.target, HeadersUI.CSS_CLASSES.button)) {\n        if (this.areChildrenCollapsed(row)) {\n          this.expandChildren(row);\n        } else {\n          this.collapseChildren(row);\n        }\n\n        stopImmediatePropagation(event);\n      }\n    }\n    /**\n     * Translate physical row after trimming to physical base row index.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @returns {Number} Base row index.\n     */\n\n  }, {\n    key: \"translateTrimmedRow\",\n    value: function translateTrimmedRow(row) {\n      return this.trimRowsPlugin.rowsMapper.getValueByIndex(row);\n    }\n    /**\n     * Helper function to render the table and call the `adjustElementsSize` method.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"renderAndAdjust\",\n    value: function renderAndAdjust() {\n      this.hot.render(); // Dirty workaround to prevent scroll height not adjusting to the table height. Needs refactoring in the future.\n\n      this.hot.view.wt.wtOverlays.adjustElementsSize();\n    }\n  }]);\n\n  return CollapsingUI;\n}(BaseUI);\n\nexport default CollapsingUI;","map":{"version":3,"sources":["C:/Users/pjk14/Desktop/Gradely/gradely-react/node_modules/handsontable/es/plugins/nestedRows/ui/collapsing.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Object","toString","call","Array","from","isArray","i","arr2","length","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","stopImmediatePropagation","arrayEach","rangeEach","hasClass","BaseUI","HeadersUI","CollapsingUI","_BaseUI","nestedRowsPlugin","hotInstance","_this","trimRowsPlugin","dataManager","plugin","collapsedRows","collapsedRowsStash","stash","lastCollapsedRows","slice","expandMultipleChildren","shiftStash","index","delta","arguments","undefined","elementIndex","translateTrimmedRow","elem","applyStash","hot","runHooks","collapseMultipleChildren","trimStash","realElementIndex","amount","indexOfElement","indexOf","splice","collapseChildren","row","_this2","forceRender","doTrimming","rowsToCollapse","rowObject","rowIndex","rowsToTrim","isNaN","getRowIndex","getDataObject","hasChildren","__children","push","collapseRows","trimRows","renderAndAdjust","rows","_this3","apply","collapseRow","recursive","rowIndexes","_this4","collapseChildRows","parentIndex","_this5","parentObject","elemIndex","expandRow","expandRows","_this6","rowsToUntrim","expandChildRows","untrimRows","_this7","isAnyParentCollapsed","expandChildren","_this8","rowsToExpand","childIndex","_this9","collapseAll","_this10","sourceData","getSourceData","parentsToCollapse","expandAll","_this11","parentsToExpand","areChildrenCollapsed","_this12","rowObj","allCollapsed","isTrimmed","parent","getRowParent","toggleState","event","coords","col","CSS_CLASSES","button","rowsMapper","getValueByIndex","render","view","wt","wtOverlays","adjustElementsSize"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { stopImmediatePropagation } from '../../../helpers/dom/event';\nimport { arrayEach } from '../../../helpers/array';\nimport { rangeEach } from '../../../helpers/number';\nimport { hasClass } from '../../../helpers/dom/element';\nimport BaseUI from './_base';\nimport HeadersUI from './headers';\n/**\n * Class responsible for the UI for collapsing and expanding groups.\n *\n * @class\n * @util\n * @extends BaseUI\n */\n\nvar CollapsingUI =\n/*#__PURE__*/\nfunction (_BaseUI) {\n  _inherits(CollapsingUI, _BaseUI);\n\n  function CollapsingUI(nestedRowsPlugin, hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CollapsingUI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CollapsingUI).call(this, nestedRowsPlugin, hotInstance));\n    /**\n     * Reference to the Trim Rows plugin.\n     */\n\n    _this.trimRowsPlugin = nestedRowsPlugin.trimRowsPlugin;\n    _this.dataManager = _this.plugin.dataManager;\n    _this.collapsedRows = [];\n    _this.collapsedRowsStash = {\n      stash: function stash() {\n        _this.lastCollapsedRows = _this.collapsedRows.slice(0); // Workaround for wrong indexes being set in the trimRows plugin\n\n        _this.expandMultipleChildren(_this.lastCollapsedRows, false);\n      },\n      shiftStash: function shiftStash(index) {\n        var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        var elementIndex = _this.translateTrimmedRow(index);\n\n        arrayEach(_this.lastCollapsedRows, function (elem, i) {\n          if (elem > elementIndex - 1) {\n            _this.lastCollapsedRows[i] = elem + delta;\n          }\n        });\n      },\n      applyStash: function applyStash() {\n        // Workaround for wrong indexes being set in the trimRows plugin\n        _this.hot.runHooks('skipLengthCache', 100);\n\n        _this.collapseMultipleChildren(_this.lastCollapsedRows, true);\n\n        _this.lastCollapsedRows = void 0;\n      },\n      trimStash: function trimStash(realElementIndex, amount) {\n        rangeEach(realElementIndex, realElementIndex + amount - 1, function (i) {\n          var indexOfElement = _this.lastCollapsedRows.indexOf(i);\n\n          if (indexOfElement > -1) {\n            _this.lastCollapsedRows.splice(indexOfElement, 1);\n          }\n        });\n      }\n    };\n    return _this;\n  }\n  /**\n   * Collapse the children of the row passed as an argument.\n   *\n   * @param {Number|Object} row The parent row.\n   * @param {Boolean} [forceRender=true] Whether to render the table after the function ends.\n   */\n\n\n  _createClass(CollapsingUI, [{\n    key: \"collapseChildren\",\n    value: function collapseChildren(row) {\n      var _this2 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToCollapse = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToTrim = null;\n\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(rowObject);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          rowsToCollapse.push(_this2.dataManager.getRowIndex(elem));\n        });\n      }\n\n      rowsToTrim = this.collapseRows(rowsToCollapse, true, false);\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n\n      if (this.collapsedRows.indexOf(rowIndex) === -1) {\n        this.collapsedRows.push(rowIndex);\n      }\n\n      return rowsToTrim;\n    }\n    /**\n     * Collapse multiple children.\n     *\n     * @param {Array} rows Rows to collapse (including their children)\n     * @param {Boolean} [forceRender = true] `true` if the table should be rendered after finishing the function.\n     * @param {Boolean} [doTrimming = true] `true` if the table should trim the provided rows.\n     */\n\n  }, {\n    key: \"collapseMultipleChildren\",\n    value: function collapseMultipleChildren(rows) {\n      var _this3 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToTrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToTrim.push.apply(rowsToTrim, _toConsumableArray(_this3.collapseChildren(elem, false, false)));\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n    /**\n     * Collapse a single row.\n     *\n     * @param {Number} rowIndex Index of the row to collapse.\n     * @param {Boolean} [recursive = true] `true` if it should collapse the row's children.\n     */\n\n  }, {\n    key: \"collapseRow\",\n    value: function collapseRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.collapseRows([rowIndex], recursive);\n    }\n    /**\n     * Collapse multiple rows.\n     *\n     * @param {Array} rowIndexes Array of row indexes to collapse.\n     * @param {Boolean} [recursive = true] `true` if it should collapse the rows' children.\n     * @param {Boolean} [doTrimming = false] `true` if the provided rows should be collapsed.\n     * @returns {Array} Rows prepared for trimming (or trimmed, if doTrimming == true)\n     */\n\n  }, {\n    key: \"collapseRows\",\n    value: function collapseRows(rowIndexes) {\n      var _this4 = this;\n\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToTrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToTrim.push(elem);\n\n        if (recursive) {\n          _this4.collapseChildRows(elem, rowsToTrim);\n        }\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n\n      return rowsToTrim;\n    }\n    /**\n     * Collapse child rows of the row at the provided index.\n     *\n     * @param {Number} parentIndex Index of the parent node.\n     * @param {Array} [rowsToTrim = []] Array of rows to trim. Defaults to an empty array.\n     * @param {Boolean} [recursive] `true` if the collapsing process should be recursive.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be trimmed.\n     */\n\n  }, {\n    key: \"collapseChildRows\",\n    value: function collapseChildRows(parentIndex) {\n      var _this5 = this;\n\n      var rowsToTrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          var elemIndex = _this5.dataManager.getRowIndex(elem);\n\n          rowsToTrim.push(elemIndex);\n\n          _this5.collapseChildRows(elemIndex, rowsToTrim);\n        });\n      }\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n    }\n    /**\n     * Expand a single row.\n     *\n     * @param {Number} rowIndex Index of the row to expand.\n     * @param {Boolean} [recursive = true] `true` if it should expand the row's children recursively.\n     */\n\n  }, {\n    key: \"expandRow\",\n    value: function expandRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.expandRows([rowIndex], recursive);\n    }\n    /**\n     * Expand multiple rows.\n     *\n     * @param {Array} rowIndexes Array of indexes of the rows to expand.\n     * @param {Boolean} [recursive = true] `true` if it should expand the rows' children recursively.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be untrimmed.\n     * @returns {Array} Array of row indexes to be untrimmed.\n     */\n\n  }, {\n    key: \"expandRows\",\n    value: function expandRows(rowIndexes) {\n      var _this6 = this;\n\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToUntrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToUntrim.push(elem);\n\n        if (recursive) {\n          _this6.expandChildRows(elem, rowsToUntrim);\n        }\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n\n      return rowsToUntrim;\n    }\n    /**\n     * Expand child rows of the provided index.\n     *\n     * @param {Number} parentIndex Index of the parent row.\n     * @param {Array} [rowsToUntrim = []] Array of the rows to be untrimmed.\n     * @param {Boolean} [recursive] `true` if it should expand the rows' children recursively.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be untrimmed.\n     */\n\n  }, {\n    key: \"expandChildRows\",\n    value: function expandChildRows(parentIndex) {\n      var _this7 = this;\n\n      var rowsToUntrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          if (!_this7.isAnyParentCollapsed(elem)) {\n            var elemIndex = _this7.dataManager.getRowIndex(elem);\n\n            rowsToUntrim.push(elemIndex);\n\n            _this7.expandChildRows(elemIndex, rowsToUntrim);\n          }\n        });\n      }\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n    }\n    /**\n     * Expand the children of the row passed as an argument.\n     *\n     * @param {Number|Object} row Parent row.\n     * @param {Boolean} [forceRender=true] Whether to render the table after the function ends.\n     * @param {Boolean} [doTrimming=true] If set to `true`, the trimming will be applied when the function finishes.\n     */\n\n  }, {\n    key: \"expandChildren\",\n    value: function expandChildren(row) {\n      var _this8 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToExpand = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToUntrim = null;\n\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(row);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n\n      this.collapsedRows.splice(this.collapsedRows.indexOf(rowIndex), 1);\n\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          var childIndex = _this8.dataManager.getRowIndex(elem);\n\n          rowsToExpand.push(childIndex);\n        });\n      }\n\n      rowsToUntrim = this.expandRows(rowsToExpand, true, false);\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n\n      return rowsToUntrim;\n    }\n    /**\n     * Expand multiple rows' children.\n     *\n     * @param {Array} rows Array of rows which children are about to be expanded.\n     * @param {Boolean} [forceRender = true] `true` if the table should render after finishing the function.\n     * @param {Boolean} [doTrimming = true] `true` if the rows should be untrimmed after finishing the function.\n     */\n\n  }, {\n    key: \"expandMultipleChildren\",\n    value: function expandMultipleChildren(rows) {\n      var _this9 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToUntrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToUntrim.push.apply(rowsToUntrim, _toConsumableArray(_this9.expandChildren(elem, false, false)));\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n    /**\n     * Collapse all collapsable rows.\n     */\n\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      var _this10 = this;\n\n      var sourceData = this.hot.getSourceData();\n      var parentsToCollapse = [];\n      arrayEach(sourceData, function (elem) {\n        if (_this10.dataManager.hasChildren(elem)) {\n          parentsToCollapse.push(elem);\n        }\n      });\n      this.collapseMultipleChildren(parentsToCollapse);\n      this.renderAndAdjust();\n    }\n    /**\n     * Expand all collapsable rows.\n     */\n\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      var _this11 = this;\n\n      var sourceData = this.hot.getSourceData();\n      var parentsToExpand = [];\n      arrayEach(sourceData, function (elem) {\n        if (_this11.dataManager.hasChildren(elem)) {\n          parentsToExpand.push(elem);\n        }\n      });\n      this.expandMultipleChildren(parentsToExpand);\n      this.renderAndAdjust();\n    }\n    /**\n     * Check if all child rows are collapsed.\n     *\n     * @param {Number|Object} row The parent row.\n     * @private\n     */\n\n  }, {\n    key: \"areChildrenCollapsed\",\n    value: function areChildrenCollapsed(row) {\n      var _this12 = this;\n\n      var rowObj = null;\n      var allCollapsed = true;\n\n      if (isNaN(row)) {\n        rowObj = row;\n      } else {\n        rowObj = this.dataManager.getDataObject(row);\n      }\n\n      if (this.dataManager.hasChildren(rowObj)) {\n        arrayEach(rowObj.__children, function (elem) {\n          var rowIndex = _this12.dataManager.getRowIndex(elem);\n\n          if (!_this12.trimRowsPlugin.isTrimmed(rowIndex)) {\n            allCollapsed = false;\n            return false;\n          }\n        });\n      }\n\n      return allCollapsed;\n    }\n    /**\n     * Check if any of the row object parents are collapsed.\n     *\n     * @private\n     * @param {Object} rowObj Row object.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isAnyParentCollapsed\",\n    value: function isAnyParentCollapsed(rowObj) {\n      var parent = rowObj;\n\n      while (parent !== null) {\n        parent = this.dataManager.getRowParent(parent);\n        var parentIndex = this.dataManager.getRowIndex(parent);\n\n        if (this.collapsedRows.indexOf(parentIndex) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Toggle collapsed state. Callback for the `beforeOnCellMousedown` hook.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event\n     * @param {Object} coords Coordinates of the clicked cell/header.\n     */\n\n  }, {\n    key: \"toggleState\",\n    value: function toggleState(event, coords) {\n      if (coords.col >= 0) {\n        return;\n      }\n\n      var row = this.translateTrimmedRow(coords.row);\n\n      if (hasClass(event.target, HeadersUI.CSS_CLASSES.button)) {\n        if (this.areChildrenCollapsed(row)) {\n          this.expandChildren(row);\n        } else {\n          this.collapseChildren(row);\n        }\n\n        stopImmediatePropagation(event);\n      }\n    }\n    /**\n     * Translate physical row after trimming to physical base row index.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @returns {Number} Base row index.\n     */\n\n  }, {\n    key: \"translateTrimmedRow\",\n    value: function translateTrimmedRow(row) {\n      return this.trimRowsPlugin.rowsMapper.getValueByIndex(row);\n    }\n    /**\n     * Helper function to render the table and call the `adjustElementsSize` method.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"renderAndAdjust\",\n    value: function renderAndAdjust() {\n      this.hot.render(); // Dirty workaround to prevent scroll height not adjusting to the table height. Needs refactoring in the future.\n\n      this.hot.view.wt.wtOverlays.adjustElementsSize();\n    }\n  }]);\n\n  return CollapsingUI;\n}(BaseUI);\n\nexport default CollapsingUI;"]},"metadata":{},"sourceType":"module"}